{
  "version": 3,
  "sources": ["../bundle-s2ARaL/checked-fetch.js", "../../../node_modules/@esbuild-plugins/node-globals-polyfill/process.js", "../../../node_modules/@esbuild-plugins/node-globals-polyfill/Buffer.js", "../../../node_modules/@esbuild-plugins/node-globals-polyfill/_buffer.js", "wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/cookie/index.js", "../../../node_modules/fast-decode-uri-component/index.js", "../bundle-s2ARaL/middleware-loader.entry.ts", "../bundle-s2ARaL/middleware-insertion-facade.js", "../../../src/index.ts", "../../../node_modules/src/index.ts", "../../../node_modules/src/container.class.ts", "../../../node_modules/src/token.class.ts", "../../../node_modules/src/error/service-not-found.error.ts", "../../../node_modules/src/error/cannot-instantiate-value.error.ts", "../../../node_modules/src/empty.const.ts", "../../../node_modules/src/container-instance.class.ts", "../../../node_modules/elysia/dist/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/errors/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/errors/errors.mjs", "../../../node_modules/@sinclair/typebox/build/esm/system/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/system/policy.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/guard/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/guard/guard.mjs", "../../../node_modules/@sinclair/typebox/build/esm/system/system.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/registry/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/registry/format.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/registry/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/unsafe/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/unsafe/unsafe.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/symbols/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/symbols/symbols.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/error/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/error/error.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/mapped/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/mapped/mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/mapped/mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/mapped/mapped.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/clone/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/clone/value.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/guard/value.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/discard/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/discard/discard.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/array/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/array/array.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/async-iterator/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/async-iterator/async-iterator.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/constructor/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/constructor/constructor.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/function/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/function/function.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/indexed.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/never/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/never/never.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intersect/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-evaluated.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/optional/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/optional/optional-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/optional/optional.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/guard/kind.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-create.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intersect/intersect.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/union/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/union/union-evaluated.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/union/union-create.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/union/union-type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/union/union.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-property-keys.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/finite.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/parse.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/generate.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/syntax.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/literal/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/literal/literal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/boolean/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/boolean/boolean.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/bigint/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/bigint/bigint.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/number/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/number/number.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/string/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/string/string.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/pattern.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/patterns/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/patterns/patterns.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/union.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/template-literal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/iterator/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/iterator/iterator.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/object/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/object/object.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/promise/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/promise/promise.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/readonly/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/readonly/readonly-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/readonly/readonly.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/tuple/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/tuple/tuple.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/sets/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/sets/set.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/keyof.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-keys.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-entries.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends-undefined.mjs", "../../../node_modules/@sinclair/typebox/build/esm/errors/function.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/deref/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/deref/deref.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/hash/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/hash/hash.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/cast/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/cast/cast.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/create/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/create/create.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/check/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/check/check.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends-check.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/any/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/any/any.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/unknown/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/unknown/unknown.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/guard/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/guard/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/clone/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/clone/clone.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/clean/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/clean/clean.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/convert/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/convert/convert.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/default/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/default/default.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/delta/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/delta/delta.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/pointer/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/pointer/pointer.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/equal/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/equal/equal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/mutate/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/mutate/mutate.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/transform/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/transform/decode.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/transform/encode.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/transform/has.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/value/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/value/value.mjs", "../../../node_modules/@sinclair/typebox/build/esm/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/clone/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/helpers/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/helpers/helpers.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/awaited/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/awaited/awaited.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/composite/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/composite/composite.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/const/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/const/const.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/date/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/date/date.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/null/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/null/null.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/symbol/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/symbol/symbol.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/undefined/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/undefined/undefined.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/uint8array/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/uint8array/uint8array.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/constructor-parameters/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/constructor-parameters/constructor-parameters.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/deref/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/deref/deref.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/enum/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/enum/enum.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/exclude/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/exclude/exclude-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/exclude/exclude.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/exclude/exclude-from-template-literal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extract/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extract/extract-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extract/extract.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extract/extract-from-template-literal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/instance-type/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/instance-type/instance-type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/integer/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/integer/integer.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/capitalize.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/intrinsic.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/intrinsic-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/lowercase.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/uncapitalize.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/uppercase.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/not/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/not/not.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/omit/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/omit/omit-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/omit/omit.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/omit/omit-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/parameters/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/parameters/parameters.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/partial/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/partial/partial-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/partial/partial.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/pick/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/pick/pick-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/pick/pick.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/pick/pick-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/readonly-optional/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/readonly-optional/readonly-optional.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/record/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/record/record.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/recursive/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/recursive/recursive.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/ref/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/ref/ref.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/regexp/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/regexp/regexp.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/required/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/required/required-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/required/required.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/rest/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/rest/rest.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/return-type/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/return-type/return-type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/schema/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/schema/anyschema.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/schema/schema.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/static/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/static/static.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/strict/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/strict/strict.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/transform/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/transform/transform.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/void/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/void/void.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/type/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/type/json.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/type/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/type/javascript.mjs", "../../../node_modules/@sinclair/typebox/build/esm/compiler/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/compiler/compiler.mjs", "../../../node_modules/@elysiajs/cors/dist/index.mjs", "../../../src/controllers/ALL.ts", "../../../src/controllers/ping.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "E:\\dev\\shima_rss_repo\\api\\.wrangler\\tmp\\dev-anA14o",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined')\n}\nfunction defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined')\n}\nvar cachedSetTimeout = defaultSetTimout\nvar cachedClearTimeout = defaultClearTimeout\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0)\n    }\n    // if setTimeout wasn't available but was latter defined\n    if (\n        (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&\n        setTimeout\n    ) {\n        cachedSetTimeout = setTimeout\n        return setTimeout(fun, 0)\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0)\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0)\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0)\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker)\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if (\n        (cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) &&\n        clearTimeout\n    ) {\n        cachedClearTimeout = clearTimeout\n        return clearTimeout(marker)\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker)\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker)\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker)\n        }\n    }\n}\nvar queue = []\nvar draining = false\nvar currentQueue\nvar queueIndex = -1\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return\n    }\n    draining = false\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue)\n    } else {\n        queueIndex = -1\n    }\n    if (queue.length) {\n        drainQueue()\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return\n    }\n    var timeout = runTimeout(cleanUpNextTick)\n    draining = true\n\n    var len = queue.length\n    while (len) {\n        currentQueue = queue\n        queue = []\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run()\n            }\n        }\n        queueIndex = -1\n        len = queue.length\n    }\n    currentQueue = null\n    draining = false\n    runClearTimeout(timeout)\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1)\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i]\n        }\n    }\n    queue.push(new Item(fun, args))\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue)\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun\n    this.array = array\n}\nItem.prototype.run = function() {\n    this.fun.apply(null, this.array)\n}\nvar title = 'browser'\nvar platform = 'browser'\nvar browser = true\nvar env = {}\nvar argv = []\nvar version = '' // empty string to avoid regexp issues\nvar versions = {}\nvar release = {}\nvar config = {}\n\nfunction noop() {}\n\nvar on = noop\nvar addListener = noop\nvar once = noop\nvar off = noop\nvar removeListener = noop\nvar removeAllListeners = noop\nvar emit = noop\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported')\n}\n\nfunction cwd() {\n    return '/'\n}\nfunction chdir(dir) {\n    throw new Error('process.chdir is not supported')\n}\nfunction umask() {\n    return 0\n}\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {}\nvar performanceNow =\n    performance.now ||\n    performance.mozNow ||\n    performance.msNow ||\n    performance.oNow ||\n    performance.webkitNow ||\n    function() {\n        return new Date().getTime()\n    }\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp) {\n    var clocktime = performanceNow.call(performance) * 1e-3\n    var seconds = Math.floor(clocktime)\n    var nanoseconds = Math.floor((clocktime % 1) * 1e9)\n    if (previousTimestamp) {\n        seconds = seconds - previousTimestamp[0]\n        nanoseconds = nanoseconds - previousTimestamp[1]\n        if (nanoseconds < 0) {\n            seconds--\n            nanoseconds += 1e9\n        }\n    }\n    return [seconds, nanoseconds]\n}\n\nvar startTime = new Date()\nfunction uptime() {\n    var currentTime = new Date()\n    var dif = currentTime - startTime\n    return dif / 1000\n}\n\nexport var process = {\n    nextTick: nextTick,\n    title: title,\n    browser: browser,\n    env: env,\n    argv: argv,\n    version: version,\n    versions: versions,\n    on: on,\n    addListener: addListener,\n    once: once,\n    off: off,\n    removeListener: removeListener,\n    removeAllListeners: removeAllListeners,\n    emit: emit,\n    binding: binding,\n    cwd: cwd,\n    chdir: chdir,\n    umask: umask,\n    hrtime: hrtime,\n    platform: platform,\n    release: release,\n    config: config,\n    uptime: uptime,\n}\n\n// replace process.env.VAR with define\n\nconst defines = {}\nObject.keys(defines).forEach((key) => {\n    const segs = key.split('.')\n    let target = process\n    for (let i = 0; i < segs.length; i++) {\n        const seg = segs[i]\n        if (i === segs.length - 1) {\n            target[seg] = defines[key]\n        } else {\n            target = target[seg] || (target[seg] = {})\n        }\n    }\n})\n", "// taken from https://github.com/calvinmetcalf/buffer-es6\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\nvar inited = false\nfunction init() {\n    inited = true\n    var code =\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    for (var i = 0, len = code.length; i < len; ++i) {\n        lookup[i] = code[i]\n        revLookup[code.charCodeAt(i)] = i\n    }\n\n    revLookup['-'.charCodeAt(0)] = 62\n    revLookup['_'.charCodeAt(0)] = 63\n}\n\nfunction base64toByteArray(b64) {\n    if (!inited) {\n        init()\n    }\n    var i, j, l, tmp, placeHolders, arr\n    var len = b64.length\n\n    if (len % 4 > 0) {\n        throw new Error('Invalid string. Length must be a multiple of 4')\n    }\n\n    // the number of equal signs (place holders)\n    // if there are two placeholders, than the two characters before it\n    // represent one byte\n    // if there is only one, then the three characters before it represent 2 bytes\n    // this is just a cheap hack to not do indexOf twice\n    placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n    // base64 is 4/3 + up to two characters of the original data\n    arr = new Arr((len * 3) / 4 - placeHolders)\n\n    // if there are placeholders, only get up to the last complete 4 chars\n    l = placeHolders > 0 ? len - 4 : len\n\n    var L = 0\n\n    for (i = 0, j = 0; i < l; i += 4, j += 3) {\n        tmp =\n            (revLookup[b64.charCodeAt(i)] << 18) |\n            (revLookup[b64.charCodeAt(i + 1)] << 12) |\n            (revLookup[b64.charCodeAt(i + 2)] << 6) |\n            revLookup[b64.charCodeAt(i + 3)]\n        arr[L++] = (tmp >> 16) & 0xff\n        arr[L++] = (tmp >> 8) & 0xff\n        arr[L++] = tmp & 0xff\n    }\n\n    if (placeHolders === 2) {\n        tmp =\n            (revLookup[b64.charCodeAt(i)] << 2) |\n            (revLookup[b64.charCodeAt(i + 1)] >> 4)\n        arr[L++] = tmp & 0xff\n    } else if (placeHolders === 1) {\n        tmp =\n            (revLookup[b64.charCodeAt(i)] << 10) |\n            (revLookup[b64.charCodeAt(i + 1)] << 4) |\n            (revLookup[b64.charCodeAt(i + 2)] >> 2)\n        arr[L++] = (tmp >> 8) & 0xff\n        arr[L++] = tmp & 0xff\n    }\n\n    return arr\n}\n\nfunction tripletToBase64(num) {\n    return (\n        lookup[(num >> 18) & 0x3f] +\n        lookup[(num >> 12) & 0x3f] +\n        lookup[(num >> 6) & 0x3f] +\n        lookup[num & 0x3f]\n    )\n}\n\nfunction encodeChunk(uint8, start, end) {\n    var tmp\n    var output = []\n    for (var i = start; i < end; i += 3) {\n        tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2]\n        output.push(tripletToBase64(tmp))\n    }\n    return output.join('')\n}\n\nfunction base64fromByteArray(uint8) {\n    if (!inited) {\n        init()\n    }\n    var tmp\n    var len = uint8.length\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    var output = ''\n    var parts = []\n    var maxChunkLength = 16383 // must be multiple of 3\n\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n        parts.push(\n            encodeChunk(\n                uint8,\n                i,\n                i + maxChunkLength > len2 ? len2 : i + maxChunkLength,\n            ),\n        )\n    }\n\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1]\n        output += lookup[tmp >> 2]\n        output += lookup[(tmp << 4) & 0x3f]\n        output += '=='\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n        output += lookup[tmp >> 10]\n        output += lookup[(tmp >> 4) & 0x3f]\n        output += lookup[(tmp << 2) & 0x3f]\n        output += '='\n    }\n\n    parts.push(output)\n\n    return parts.join('')\n}\n\nvar INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT =\n    global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : true\n\nfunction kMaxLength() {\n    return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff\n}\n\nfunction createBuffer(that, length) {\n    if (kMaxLength() < length) {\n        throw new RangeError('Invalid typed array length')\n    }\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        that = new Uint8Array(length)\n        that.__proto__ = Buffer.prototype\n    } else {\n        // Fallback: Return an object instance of the Buffer class\n        if (that === null) {\n            that = new Buffer(length)\n        }\n        that.length = length\n    }\n\n    return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nexport function Buffer(arg, encodingOrOffset, length) {\n    if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n        return new Buffer(arg, encodingOrOffset, length)\n    }\n\n    // Common case.\n    if (typeof arg === 'number') {\n        if (typeof encodingOrOffset === 'string') {\n            throw new Error(\n                'If encoding is specified then the first argument must be a string',\n            )\n        }\n        return allocUnsafe(this, arg)\n    }\n    return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function(arr) {\n    arr.__proto__ = Buffer.prototype\n    return arr\n}\n\nfunction from(that, value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n        throw new TypeError('\"value\" argument must not be a number')\n    }\n\n    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n        return fromArrayBuffer(that, value, encodingOrOffset, length)\n    }\n\n    if (typeof value === 'string') {\n        return fromString(that, value, encodingOrOffset)\n    }\n\n    return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function(value, encodingOrOffset, length) {\n    return from(null, value, encodingOrOffset, length)\n}\n\nBuffer.kMaxLength = kMaxLength()\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n    Buffer.prototype.__proto__ = Uint8Array.prototype\n    Buffer.__proto__ = Uint8Array\n    if (\n        typeof Symbol !== 'undefined' &&\n        Symbol.species &&\n        Buffer[Symbol.species] === Buffer\n    ) {\n        // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n        // Object.defineProperty(Buffer, Symbol.species, {\n        //   value: null,\n        //   configurable: true\n        // })\n    }\n}\n\nfunction assertSize(size) {\n    if (typeof size !== 'number') {\n        throw new TypeError('\"size\" argument must be a number')\n    } else if (size < 0) {\n        throw new RangeError('\"size\" argument must not be negative')\n    }\n}\n\nfunction alloc(that, size, fill, encoding) {\n    assertSize(size)\n    if (size <= 0) {\n        return createBuffer(that, size)\n    }\n    if (fill !== undefined) {\n        // Only pay attention to encoding if it's a string. This\n        // prevents accidentally sending in a number that would\n        // be interpretted as a start offset.\n        return typeof encoding === 'string'\n            ? createBuffer(that, size).fill(fill, encoding)\n            : createBuffer(that, size).fill(fill)\n    }\n    return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function(size, fill, encoding) {\n    return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe(that, size) {\n    assertSize(size)\n    that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n    if (!Buffer.TYPED_ARRAY_SUPPORT) {\n        for (var i = 0; i < size; ++i) {\n            that[i] = 0\n        }\n    }\n    return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function(size) {\n    return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function(size) {\n    return allocUnsafe(null, size)\n}\n\nfunction fromString(that, string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n        encoding = 'utf8'\n    }\n\n    if (!Buffer.isEncoding(encoding)) {\n        throw new TypeError('\"encoding\" must be a valid string encoding')\n    }\n\n    var length = byteLength(string, encoding) | 0\n    that = createBuffer(that, length)\n\n    var actual = that.write(string, encoding)\n\n    if (actual !== length) {\n        // Writing a hex string, for example, that contains invalid characters will\n        // cause everything after the first invalid character to be ignored. (e.g.\n        // 'abxxcd' will be treated as 'ab')\n        that = that.slice(0, actual)\n    }\n\n    return that\n}\n\nfunction fromArrayLike(that, array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0\n    that = createBuffer(that, length)\n    for (var i = 0; i < length; i += 1) {\n        that[i] = array[i] & 255\n    }\n    return that\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n    array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError(\"'offset' is out of bounds\")\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError(\"'length' is out of bounds\")\n    }\n\n    if (byteOffset === undefined && length === undefined) {\n        array = new Uint8Array(array)\n    } else if (length === undefined) {\n        array = new Uint8Array(array, byteOffset)\n    } else {\n        array = new Uint8Array(array, byteOffset, length)\n    }\n\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        that = array\n        that.__proto__ = Buffer.prototype\n    } else {\n        // Fallback: Return an object instance of the Buffer class\n        that = fromArrayLike(that, array)\n    }\n    return that\n}\n\nfunction fromObject(that, obj) {\n    if (internalIsBuffer(obj)) {\n        var len = checked(obj.length) | 0\n        that = createBuffer(that, len)\n\n        if (that.length === 0) {\n            return that\n        }\n\n        obj.copy(that, 0, 0, len)\n        return that\n    }\n\n    if (obj) {\n        if (\n            (typeof ArrayBuffer !== 'undefined' &&\n                obj.buffer instanceof ArrayBuffer) ||\n            'length' in obj\n        ) {\n            if (typeof obj.length !== 'number' || isnan(obj.length)) {\n                return createBuffer(that, 0)\n            }\n            return fromArrayLike(that, obj)\n        }\n\n        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n            return fromArrayLike(that, obj.data)\n        }\n    }\n\n    throw new TypeError(\n        'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.',\n    )\n}\n\nfunction checked(length) {\n    // Note: cannot use `length < kMaxLength()` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= kMaxLength()) {\n        throw new RangeError(\n            'Attempt to allocate Buffer larger than maximum ' +\n                'size: 0x' +\n                kMaxLength().toString(16) +\n                ' bytes',\n        )\n    }\n    return length | 0\n}\n\nexport function SlowBuffer(length) {\n    if (+length != length) {\n        // eslint-disable-line eqeqeq\n        length = 0\n    }\n    return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer\nfunction internalIsBuffer(b) {\n    return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare(a, b) {\n    if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n        throw new TypeError('Arguments must be Buffers')\n    }\n\n    if (a === b) return 0\n\n    var x = a.length\n    var y = b.length\n\n    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n        if (a[i] !== b[i]) {\n            x = a[i]\n            y = b[i]\n            break\n        }\n    }\n\n    if (x < y) return -1\n    if (y < x) return 1\n    return 0\n}\n\nBuffer.isEncoding = function isEncoding(encoding) {\n    switch (String(encoding).toLowerCase()) {\n        case 'hex':\n        case 'utf8':\n        case 'utf-8':\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n        case 'base64':\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n            return true\n        default:\n            return false\n    }\n}\n\nBuffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n\n    if (list.length === 0) {\n        return Buffer.alloc(0)\n    }\n\n    var i\n    if (length === undefined) {\n        length = 0\n        for (i = 0; i < list.length; ++i) {\n            length += list[i].length\n        }\n    }\n\n    var buffer = Buffer.allocUnsafe(length)\n    var pos = 0\n    for (i = 0; i < list.length; ++i) {\n        var buf = list[i]\n        if (!internalIsBuffer(buf)) {\n            throw new TypeError('\"list\" argument must be an Array of Buffers')\n        }\n        buf.copy(buffer, pos)\n        pos += buf.length\n    }\n    return buffer\n}\n\nfunction byteLength(string, encoding) {\n    if (internalIsBuffer(string)) {\n        return string.length\n    }\n    if (\n        typeof ArrayBuffer !== 'undefined' &&\n        typeof ArrayBuffer.isView === 'function' &&\n        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)\n    ) {\n        return string.byteLength\n    }\n    if (typeof string !== 'string') {\n        string = '' + string\n    }\n\n    var len = string.length\n    if (len === 0) return 0\n\n    // Use a for loop to avoid recursion\n    var loweredCase = false\n    for (;;) {\n        switch (encoding) {\n            case 'ascii':\n            case 'latin1':\n            case 'binary':\n                return len\n            case 'utf8':\n            case 'utf-8':\n            case undefined:\n                return utf8ToBytes(string).length\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n                return len * 2\n            case 'hex':\n                return len >>> 1\n            case 'base64':\n                return base64ToBytes(string).length\n            default:\n                if (loweredCase) return utf8ToBytes(string).length // assume utf8\n                encoding = ('' + encoding).toLowerCase()\n                loweredCase = true\n        }\n    }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString(encoding, start, end) {\n    var loweredCase = false\n\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) {\n        start = 0\n    }\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) {\n        return ''\n    }\n\n    if (end === undefined || end > this.length) {\n        end = this.length\n    }\n\n    if (end <= 0) {\n        return ''\n    }\n\n    // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0\n    start >>>= 0\n\n    if (end <= start) {\n        return ''\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    while (true) {\n        switch (encoding) {\n            case 'hex':\n                return hexSlice(this, start, end)\n\n            case 'utf8':\n            case 'utf-8':\n                return utf8Slice(this, start, end)\n\n            case 'ascii':\n                return asciiSlice(this, start, end)\n\n            case 'latin1':\n            case 'binary':\n                return latin1Slice(this, start, end)\n\n            case 'base64':\n                return base64Slice(this, start, end)\n\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n                return utf16leSlice(this, start, end)\n\n            default:\n                if (loweredCase)\n                    throw new TypeError('Unknown encoding: ' + encoding)\n                encoding = (encoding + '').toLowerCase()\n                loweredCase = true\n        }\n    }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap(b, n, m) {\n    var i = b[n]\n    b[n] = b[m]\n    b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16() {\n    var len = this.length\n    if (len % 2 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 16-bits')\n    }\n    for (var i = 0; i < len; i += 2) {\n        swap(this, i, i + 1)\n    }\n    return this\n}\n\nBuffer.prototype.swap32 = function swap32() {\n    var len = this.length\n    if (len % 4 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 32-bits')\n    }\n    for (var i = 0; i < len; i += 4) {\n        swap(this, i, i + 3)\n        swap(this, i + 1, i + 2)\n    }\n    return this\n}\n\nBuffer.prototype.swap64 = function swap64() {\n    var len = this.length\n    if (len % 8 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 64-bits')\n    }\n    for (var i = 0; i < len; i += 8) {\n        swap(this, i, i + 7)\n        swap(this, i + 1, i + 6)\n        swap(this, i + 2, i + 5)\n        swap(this, i + 3, i + 4)\n    }\n    return this\n}\n\nBuffer.prototype.toString = function toString() {\n    var length = this.length | 0\n    if (length === 0) return ''\n    if (arguments.length === 0) return utf8Slice(this, 0, length)\n    return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals(b) {\n    if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n    if (this === b) return true\n    return Buffer.compare(this, b) === 0\n}\n\n\nBuffer.prototype.compare = function compare(\n    target,\n    start,\n    end,\n    thisStart,\n    thisEnd,\n) {\n    if (!internalIsBuffer(target)) {\n        throw new TypeError('Argument must be a Buffer')\n    }\n\n    if (start === undefined) {\n        start = 0\n    }\n    if (end === undefined) {\n        end = target ? target.length : 0\n    }\n    if (thisStart === undefined) {\n        thisStart = 0\n    }\n    if (thisEnd === undefined) {\n        thisEnd = this.length\n    }\n\n    if (\n        start < 0 ||\n        end > target.length ||\n        thisStart < 0 ||\n        thisEnd > this.length\n    ) {\n        throw new RangeError('out of range index')\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n        return 0\n    }\n    if (thisStart >= thisEnd) {\n        return -1\n    }\n    if (start >= end) {\n        return 1\n    }\n\n    start >>>= 0\n    end >>>= 0\n    thisStart >>>= 0\n    thisEnd >>>= 0\n\n    if (this === target) return 0\n\n    var x = thisEnd - thisStart\n    var y = end - start\n    var len = Math.min(x, y)\n\n    var thisCopy = this.slice(thisStart, thisEnd)\n    var targetCopy = target.slice(start, end)\n\n    for (var i = 0; i < len; ++i) {\n        if (thisCopy[i] !== targetCopy[i]) {\n            x = thisCopy[i]\n            y = targetCopy[i]\n            break\n        }\n    }\n\n    if (x < y) return -1\n    if (y < x) return 1\n    return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1\n\n    // Normalize byteOffset\n    if (typeof byteOffset === 'string') {\n        encoding = byteOffset\n        byteOffset = 0\n    } else if (byteOffset > 0x7fffffff) {\n        byteOffset = 0x7fffffff\n    } else if (byteOffset < -0x80000000) {\n        byteOffset = -0x80000000\n    }\n    byteOffset = +byteOffset // Coerce to Number.\n    if (isNaN(byteOffset)) {\n        // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n        byteOffset = dir ? 0 : buffer.length - 1\n    }\n\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n    if (byteOffset >= buffer.length) {\n        if (dir) return -1\n        else byteOffset = buffer.length - 1\n    } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0\n        else return -1\n    }\n\n    // Normalize val\n    if (typeof val === 'string') {\n        val = Buffer.from(val, encoding)\n    }\n\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if (internalIsBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) {\n            return -1\n        }\n        return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n    } else if (typeof val === 'number') {\n        val = val & 0xff // Search for a byte value [0-255]\n        if (\n            Buffer.TYPED_ARRAY_SUPPORT &&\n            typeof Uint8Array.prototype.indexOf === 'function'\n        ) {\n            if (dir) {\n                return Uint8Array.prototype.indexOf.call(\n                    buffer,\n                    val,\n                    byteOffset,\n                )\n            } else {\n                return Uint8Array.prototype.lastIndexOf.call(\n                    buffer,\n                    val,\n                    byteOffset,\n                )\n            }\n        }\n        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n    }\n\n    throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1\n    var arrLength = arr.length\n    var valLength = val.length\n\n    if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase()\n        if (\n            encoding === 'ucs2' ||\n            encoding === 'ucs-2' ||\n            encoding === 'utf16le' ||\n            encoding === 'utf-16le'\n        ) {\n            if (arr.length < 2 || val.length < 2) {\n                return -1\n            }\n            indexSize = 2\n            arrLength /= 2\n            valLength /= 2\n            byteOffset /= 2\n        }\n    }\n\n    function read(buf, i) {\n        if (indexSize === 1) {\n            return buf[i]\n        } else {\n            return buf.readUInt16BE(i * indexSize)\n        }\n    }\n\n    var i\n    if (dir) {\n        var foundIndex = -1\n        for (i = byteOffset; i < arrLength; i++) {\n            if (\n                read(arr, i) ===\n                read(val, foundIndex === -1 ? 0 : i - foundIndex)\n            ) {\n                if (foundIndex === -1) foundIndex = i\n                if (i - foundIndex + 1 === valLength)\n                    return foundIndex * indexSize\n            } else {\n                if (foundIndex !== -1) i -= i - foundIndex\n                foundIndex = -1\n            }\n        }\n    } else {\n        if (byteOffset + valLength > arrLength)\n            byteOffset = arrLength - valLength\n        for (i = byteOffset; i >= 0; i--) {\n            var found = true\n            for (var j = 0; j < valLength; j++) {\n                if (read(arr, i + j) !== read(val, j)) {\n                    found = false\n                    break\n                }\n            }\n            if (found) return i\n        }\n    }\n\n    return -1\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0\n    var remaining = buf.length - offset\n    if (!length) {\n        length = remaining\n    } else {\n        length = Number(length)\n        if (length > remaining) {\n            length = remaining\n        }\n    }\n\n    // must be an even number of digits\n    var strLen = string.length\n    if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n    if (length > strLen / 2) {\n        length = strLen / 2\n    }\n    for (var i = 0; i < length; ++i) {\n        var parsed = parseInt(string.substr(i * 2, 2), 16)\n        if (isNaN(parsed)) return i\n        buf[offset + i] = parsed\n    }\n    return i\n}\n\nfunction utf8Write(buf, string, offset, length) {\n    return blitBuffer(\n        utf8ToBytes(string, buf.length - offset),\n        buf,\n        offset,\n        length,\n    )\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write(buf, string, offset, length) {\n    return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n    return blitBuffer(\n        utf16leToBytes(string, buf.length - offset),\n        buf,\n        offset,\n        length,\n    )\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        encoding = 'utf8'\n        length = this.length\n        offset = 0\n        // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n        encoding = offset\n        length = this.length\n        offset = 0\n        // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n        offset = offset | 0\n        if (isFinite(length)) {\n            length = length | 0\n            if (encoding === undefined) encoding = 'utf8'\n        } else {\n            encoding = length\n            length = undefined\n        }\n        // legacy write(string, encoding, offset, length) - remove in v0.13\n    } else {\n        throw new Error(\n            'Buffer.write(string, encoding, offset[, length]) is no longer supported',\n        )\n    }\n\n    var remaining = this.length - offset\n    if (length === undefined || length > remaining) length = remaining\n\n    if (\n        (string.length > 0 && (length < 0 || offset < 0)) ||\n        offset > this.length\n    ) {\n        throw new RangeError('Attempt to write outside buffer bounds')\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    var loweredCase = false\n    for (;;) {\n        switch (encoding) {\n            case 'hex':\n                return hexWrite(this, string, offset, length)\n\n            case 'utf8':\n            case 'utf-8':\n                return utf8Write(this, string, offset, length)\n\n            case 'ascii':\n                return asciiWrite(this, string, offset, length)\n\n            case 'latin1':\n            case 'binary':\n                return latin1Write(this, string, offset, length)\n\n            case 'base64':\n                // Warning: maxLength not taken into account in base64Write\n                return base64Write(this, string, offset, length)\n\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n                return ucs2Write(this, string, offset, length)\n\n            default:\n                if (loweredCase)\n                    throw new TypeError('Unknown encoding: ' + encoding)\n                encoding = ('' + encoding).toLowerCase()\n                loweredCase = true\n        }\n    }\n}\n\nBuffer.prototype.toJSON = function toJSON() {\n    return {\n        type: 'Buffer',\n        data: Array.prototype.slice.call(this._arr || this, 0),\n    }\n}\n\nfunction base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) {\n        return base64fromByteArray(buf)\n    } else {\n        return base64fromByteArray(buf.slice(start, end))\n    }\n}\n\nfunction utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end)\n    var res = []\n\n    var i = start\n    while (i < end) {\n        var firstByte = buf[i]\n        var codePoint = null\n        var bytesPerSequence =\n            firstByte > 0xef\n                ? 4\n                : firstByte > 0xdf\n                ? 3\n                : firstByte > 0xbf\n                ? 2\n                : 1\n\n        if (i + bytesPerSequence <= end) {\n            var secondByte, thirdByte, fourthByte, tempCodePoint\n\n            switch (bytesPerSequence) {\n                case 1:\n                    if (firstByte < 0x80) {\n                        codePoint = firstByte\n                    }\n                    break\n                case 2:\n                    secondByte = buf[i + 1]\n                    if ((secondByte & 0xc0) === 0x80) {\n                        tempCodePoint =\n                            ((firstByte & 0x1f) << 0x6) | (secondByte & 0x3f)\n                        if (tempCodePoint > 0x7f) {\n                            codePoint = tempCodePoint\n                        }\n                    }\n                    break\n                case 3:\n                    secondByte = buf[i + 1]\n                    thirdByte = buf[i + 2]\n                    if (\n                        (secondByte & 0xc0) === 0x80 &&\n                        (thirdByte & 0xc0) === 0x80\n                    ) {\n                        tempCodePoint =\n                            ((firstByte & 0xf) << 0xc) |\n                            ((secondByte & 0x3f) << 0x6) |\n                            (thirdByte & 0x3f)\n                        if (\n                            tempCodePoint > 0x7ff &&\n                            (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)\n                        ) {\n                            codePoint = tempCodePoint\n                        }\n                    }\n                    break\n                case 4:\n                    secondByte = buf[i + 1]\n                    thirdByte = buf[i + 2]\n                    fourthByte = buf[i + 3]\n                    if (\n                        (secondByte & 0xc0) === 0x80 &&\n                        (thirdByte & 0xc0) === 0x80 &&\n                        (fourthByte & 0xc0) === 0x80\n                    ) {\n                        tempCodePoint =\n                            ((firstByte & 0xf) << 0x12) |\n                            ((secondByte & 0x3f) << 0xc) |\n                            ((thirdByte & 0x3f) << 0x6) |\n                            (fourthByte & 0x3f)\n                        if (\n                            tempCodePoint > 0xffff &&\n                            tempCodePoint < 0x110000\n                        ) {\n                            codePoint = tempCodePoint\n                        }\n                    }\n            }\n        }\n\n        if (codePoint === null) {\n            // we did not generate a valid codePoint so insert a\n            // replacement char (U+FFFD) and advance only 1 byte\n            codePoint = 0xfffd\n            bytesPerSequence = 1\n        } else if (codePoint > 0xffff) {\n            // encode to utf16 (surrogate pair dance)\n            codePoint -= 0x10000\n            res.push(((codePoint >>> 10) & 0x3ff) | 0xd800)\n            codePoint = 0xdc00 | (codePoint & 0x3ff)\n        }\n\n        res.push(codePoint)\n        i += bytesPerSequence\n    }\n\n    return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray(codePoints) {\n    var len = codePoints.length\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n        return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    }\n\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    var res = ''\n    var i = 0\n    while (i < len) {\n        res += String.fromCharCode.apply(\n            String,\n            codePoints.slice(i, (i += MAX_ARGUMENTS_LENGTH)),\n        )\n    }\n    return res\n}\n\nfunction asciiSlice(buf, start, end) {\n    var ret = ''\n    end = Math.min(buf.length, end)\n\n    for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i] & 0x7f)\n    }\n    return ret\n}\n\nfunction latin1Slice(buf, start, end) {\n    var ret = ''\n    end = Math.min(buf.length, end)\n\n    for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i])\n    }\n    return ret\n}\n\nfunction hexSlice(buf, start, end) {\n    var len = buf.length\n\n    if (!start || start < 0) start = 0\n    if (!end || end < 0 || end > len) end = len\n\n    var out = ''\n    for (var i = start; i < end; ++i) {\n        out += toHex(buf[i])\n    }\n    return out\n}\n\nfunction utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end)\n    var res = ''\n    for (var i = 0; i < bytes.length; i += 2) {\n        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n    }\n    return res\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n    var len = this.length\n    start = ~~start\n    end = end === undefined ? len : ~~end\n\n    if (start < 0) {\n        start += len\n        if (start < 0) start = 0\n    } else if (start > len) {\n        start = len\n    }\n\n    if (end < 0) {\n        end += len\n        if (end < 0) end = 0\n    } else if (end > len) {\n        end = len\n    }\n\n    if (end < start) end = start\n\n    var newBuf\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        newBuf = this.subarray(start, end)\n        newBuf.__proto__ = Buffer.prototype\n    } else {\n        var sliceLen = end - start\n        newBuf = new Buffer(sliceLen, undefined)\n        for (var i = 0; i < sliceLen; ++i) {\n            newBuf[i] = this[i + start]\n        }\n    }\n\n    return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0)\n        throw new RangeError('offset is not uint')\n    if (offset + ext > length)\n        throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(\n    offset,\n    byteLength,\n    noAssert,\n) {\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n    var val = this[offset]\n    var mul = 1\n    var i = 0\n    while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul\n    }\n\n    return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE(\n    offset,\n    byteLength,\n    noAssert,\n) {\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) {\n        checkOffset(offset, byteLength, this.length)\n    }\n\n    var val = this[offset + --byteLength]\n    var mul = 1\n    while (byteLength > 0 && (mul *= 0x100)) {\n        val += this[offset + --byteLength] * mul\n    }\n\n    return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 1, this.length)\n    return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n\n    return (\n        (this[offset] | (this[offset + 1] << 8) | (this[offset + 2] << 16)) +\n        this[offset + 3] * 0x1000000\n    )\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n\n    return (\n        this[offset] * 0x1000000 +\n        ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3])\n    )\n}\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n    var val = this[offset]\n    var mul = 1\n    var i = 0\n    while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul\n    }\n    mul *= 0x80\n\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n    return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n    var i = byteLength\n    var mul = 1\n    var val = this[offset + --i]\n    while (i > 0 && (mul *= 0x100)) {\n        val += this[offset + --i] * mul\n    }\n    mul *= 0x80\n\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n    return val\n}\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 1, this.length)\n    if (!(this[offset] & 0x80)) return this[offset]\n    return (0xff - this[offset] + 1) * -1\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    var val = this[offset] | (this[offset + 1] << 8)\n    return val & 0x8000 ? val | 0xffff0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    var val = this[offset + 1] | (this[offset] << 8)\n    return val & 0x8000 ? val | 0xffff0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n\n    return (\n        this[offset] |\n        (this[offset + 1] << 8) |\n        (this[offset + 2] << 16) |\n        (this[offset + 3] << 24)\n    )\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n\n    return (\n        (this[offset] << 24) |\n        (this[offset + 1] << 16) |\n        (this[offset + 2] << 8) |\n        this[offset + 3]\n    )\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n    return ieee754read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n    return ieee754read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 8, this.length)\n    return ieee754read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 8, this.length)\n    return ieee754read(this, offset, false, 52, 8)\n}\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n    if (!internalIsBuffer(buf))\n        throw new TypeError('\"buffer\" argument must be a Buffer instance')\n    if (value > max || value < min)\n        throw new RangeError('\"value\" argument is out of bounds')\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(\n    value,\n    offset,\n    byteLength,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1\n        checkInt(this, value, offset, byteLength, maxBytes, 0)\n    }\n\n    var mul = 1\n    var i = 0\n    this[offset] = value & 0xff\n    while (++i < byteLength && (mul *= 0x100)) {\n        this[offset + i] = (value / mul) & 0xff\n    }\n\n    return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(\n    value,\n    offset,\n    byteLength,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1\n        checkInt(this, value, offset, byteLength, maxBytes, 0)\n    }\n\n    var i = byteLength - 1\n    var mul = 1\n    this[offset + i] = value & 0xff\n    while (--i >= 0 && (mul *= 0x100)) {\n        this[offset + i] = (value / mul) & 0xff\n    }\n\n    return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n    if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n    this[offset] = value & 0xff\n    return offset + 1\n}\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n    if (value < 0) value = 0xffff + value + 1\n    for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n        buf[offset + i] =\n            (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n            ((littleEndian ? i : 1 - i) * 8)\n    }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(\n    value,\n    offset,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff\n        this[offset + 1] = value >>> 8\n    } else {\n        objectWriteUInt16(this, value, offset, true)\n    }\n    return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(\n    value,\n    offset,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 8\n        this[offset + 1] = value & 0xff\n    } else {\n        objectWriteUInt16(this, value, offset, false)\n    }\n    return offset + 2\n}\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n    if (value < 0) value = 0xffffffff + value + 1\n    for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n        buf[offset + i] = (value >>> ((littleEndian ? i : 3 - i) * 8)) & 0xff\n    }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(\n    value,\n    offset,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset + 3] = value >>> 24\n        this[offset + 2] = value >>> 16\n        this[offset + 1] = value >>> 8\n        this[offset] = value & 0xff\n    } else {\n        objectWriteUInt32(this, value, offset, true)\n    }\n    return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(\n    value,\n    offset,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 24\n        this[offset + 1] = value >>> 16\n        this[offset + 2] = value >>> 8\n        this[offset + 3] = value & 0xff\n    } else {\n        objectWriteUInt32(this, value, offset, false)\n    }\n    return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE(\n    value,\n    offset,\n    byteLength,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1)\n\n        checkInt(this, value, offset, byteLength, limit - 1, -limit)\n    }\n\n    var i = 0\n    var mul = 1\n    var sub = 0\n    this[offset] = value & 0xff\n    while (++i < byteLength && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n            sub = 1\n        }\n        this[offset + i] = (((value / mul) >> 0) - sub) & 0xff\n    }\n\n    return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE(\n    value,\n    offset,\n    byteLength,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1)\n\n        checkInt(this, value, offset, byteLength, limit - 1, -limit)\n    }\n\n    var i = byteLength - 1\n    var mul = 1\n    var sub = 0\n    this[offset + i] = value & 0xff\n    while (--i >= 0 && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n            sub = 1\n        }\n        this[offset + i] = (((value / mul) >> 0) - sub) & 0xff\n    }\n\n    return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n    if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n    if (value < 0) value = 0xff + value + 1\n    this[offset] = value & 0xff\n    return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff\n        this[offset + 1] = value >>> 8\n    } else {\n        objectWriteUInt16(this, value, offset, true)\n    }\n    return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 8\n        this[offset + 1] = value & 0xff\n    } else {\n        objectWriteUInt16(this, value, offset, false)\n    }\n    return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff\n        this[offset + 1] = value >>> 8\n        this[offset + 2] = value >>> 16\n        this[offset + 3] = value >>> 24\n    } else {\n        objectWriteUInt32(this, value, offset, true)\n    }\n    return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n    if (value < 0) value = 0xffffffff + value + 1\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 24\n        this[offset + 1] = value >>> 16\n        this[offset + 2] = value >>> 8\n        this[offset + 3] = value & 0xff\n    } else {\n        objectWriteUInt32(this, value, offset, false)\n    }\n    return offset + 4\n}\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\n    if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n    if (!noAssert) {\n        checkIEEE754(\n            buf,\n            value,\n            offset,\n            4,\n            3.4028234663852886e38,\n            -3.4028234663852886e38,\n        )\n    }\n    ieee754write(buf, value, offset, littleEndian, 23, 4)\n    return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n    if (!noAssert) {\n        checkIEEE754(\n            buf,\n            value,\n            offset,\n            8,\n            1.7976931348623157e308,\n            -1.7976931348623157e308,\n        )\n    }\n    ieee754write(buf, value, offset, littleEndian, 52, 8)\n    return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(\n    value,\n    offset,\n    noAssert,\n) {\n    return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(\n    value,\n    offset,\n    noAssert,\n) {\n    return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!start) start = 0\n    if (!end && end !== 0) end = this.length\n    if (targetStart >= target.length) targetStart = target.length\n    if (!targetStart) targetStart = 0\n    if (end > 0 && end < start) end = start\n\n    // Copy 0 bytes; we're done\n    if (end === start) return 0\n    if (target.length === 0 || this.length === 0) return 0\n\n    // Fatal error conditions\n    if (targetStart < 0) {\n        throw new RangeError('targetStart out of bounds')\n    }\n    if (start < 0 || start >= this.length)\n        throw new RangeError('sourceStart out of bounds')\n    if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n    // Are we oob?\n    if (end > this.length) end = this.length\n    if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start\n    }\n\n    var len = end - start\n    var i\n\n    if (this === target && start < targetStart && targetStart < end) {\n        // descending copy from end\n        for (i = len - 1; i >= 0; --i) {\n            target[i + targetStart] = this[i + start]\n        }\n    } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n        // ascending copy from start\n        for (i = 0; i < len; ++i) {\n            target[i + targetStart] = this[i + start]\n        }\n    } else {\n        Uint8Array.prototype.set.call(\n            target,\n            this.subarray(start, start + len),\n            targetStart,\n        )\n    }\n\n    return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n        if (typeof start === 'string') {\n            encoding = start\n            start = 0\n            end = this.length\n        } else if (typeof end === 'string') {\n            encoding = end\n            end = this.length\n        }\n        if (val.length === 1) {\n            var code = val.charCodeAt(0)\n            if (code < 256) {\n                val = code\n            }\n        }\n        if (encoding !== undefined && typeof encoding !== 'string') {\n            throw new TypeError('encoding must be a string')\n        }\n        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n            throw new TypeError('Unknown encoding: ' + encoding)\n        }\n    } else if (typeof val === 'number') {\n        val = val & 255\n    }\n\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError('Out of range index')\n    }\n\n    if (end <= start) {\n        return this\n    }\n\n    start = start >>> 0\n    end = end === undefined ? this.length : end >>> 0\n\n    if (!val) val = 0\n\n    var i\n    if (typeof val === 'number') {\n        for (i = start; i < end; ++i) {\n            this[i] = val\n        }\n    } else {\n        var bytes = internalIsBuffer(val)\n            ? val\n            : utf8ToBytes(new Buffer(val, encoding).toString())\n        var len = bytes.length\n        for (i = 0; i < end - start; ++i) {\n            this[i + start] = bytes[i % len]\n        }\n    }\n\n    return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean(str) {\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return ''\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while (str.length % 4 !== 0) {\n        str = str + '='\n    }\n    return str\n}\n\nfunction stringtrim(str) {\n    if (str.trim) return str.trim()\n    return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex(n) {\n    if (n < 16) return '0' + n.toString(16)\n    return n.toString(16)\n}\n\nfunction utf8ToBytes(string, units) {\n    units = units || Infinity\n    var codePoint\n    var length = string.length\n    var leadSurrogate = null\n    var bytes = []\n\n    for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i)\n\n        // is surrogate component\n        if (codePoint > 0xd7ff && codePoint < 0xe000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xdbff) {\n                    // unexpected trail\n                    if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\n                    continue\n                } else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\n                    continue\n                }\n\n                // valid lead\n                leadSurrogate = codePoint\n\n                continue\n            }\n\n            // 2 leads in a row\n            if (codePoint < 0xdc00) {\n                if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\n                leadSurrogate = codePoint\n                continue\n            }\n\n            // valid surrogate pair\n            codePoint =\n                (((leadSurrogate - 0xd800) << 10) | (codePoint - 0xdc00)) +\n                0x10000\n        } else if (leadSurrogate) {\n            // valid bmp char, but last char was a lead\n            if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\n        }\n\n        leadSurrogate = null\n\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0) break\n            bytes.push(codePoint)\n        } else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) break\n            bytes.push((codePoint >> 0x6) | 0xc0, (codePoint & 0x3f) | 0x80)\n        } else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) break\n            bytes.push(\n                (codePoint >> 0xc) | 0xe0,\n                ((codePoint >> 0x6) & 0x3f) | 0x80,\n                (codePoint & 0x3f) | 0x80,\n            )\n        } else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0) break\n            bytes.push(\n                (codePoint >> 0x12) | 0xf0,\n                ((codePoint >> 0xc) & 0x3f) | 0x80,\n                ((codePoint >> 0x6) & 0x3f) | 0x80,\n                (codePoint & 0x3f) | 0x80,\n            )\n        } else {\n            throw new Error('Invalid code point')\n        }\n    }\n\n    return bytes\n}\n\nfunction asciiToBytes(str) {\n    var byteArray = []\n    for (var i = 0; i < str.length; ++i) {\n        // Node's code seems to be doing this and not & 0x7F..\n        byteArray.push(str.charCodeAt(i) & 0xff)\n    }\n    return byteArray\n}\n\nfunction utf16leToBytes(str, units) {\n    var c, hi, lo\n    var byteArray = []\n    for (var i = 0; i < str.length; ++i) {\n        if ((units -= 2) < 0) break\n\n        c = str.charCodeAt(i)\n        hi = c >> 8\n        lo = c % 256\n        byteArray.push(lo)\n        byteArray.push(hi)\n    }\n\n    return byteArray\n}\n\nfunction base64ToBytes(str) {\n    return base64toByteArray(base64clean(str))\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n        if (i + offset >= dst.length || i >= src.length) break\n        dst[i + offset] = src[i]\n    }\n    return i\n}\n\nfunction isnan(val) {\n    return val !== val // eslint-disable-line no-self-compare\n}\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n    return (\n        obj != null &&\n        (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n    )\n}\n\nfunction isFastBuffer(obj) {\n    return (\n        !!obj.constructor &&\n        typeof obj.constructor.isBuffer === 'function' &&\n        obj.constructor.isBuffer(obj)\n    )\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer(obj) {\n    return (\n        typeof obj.readFloatLE === 'function' &&\n        typeof obj.slice === 'function' &&\n        isFastBuffer(obj.slice(0, 0))\n    )\n}\n\nfunction ieee754read(buffer, offset, isLE, mLen, nBytes) {\n    var e, m\n    var eLen = nBytes * 8 - mLen - 1\n    var eMax = (1 << eLen) - 1\n    var eBias = eMax >> 1\n    var nBits = -7\n    var i = isLE ? nBytes - 1 : 0\n    var d = isLE ? -1 : 1\n    var s = buffer[offset + i]\n\n    i += d\n\n    e = s & ((1 << -nBits) - 1)\n    s >>= -nBits\n    nBits += eLen\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    m = e & ((1 << -nBits) - 1)\n    e >>= -nBits\n    nBits += mLen\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    if (e === 0) {\n        e = 1 - eBias\n    } else if (e === eMax) {\n        return m ? NaN : (s ? -1 : 1) * Infinity\n    } else {\n        m = m + Math.pow(2, mLen)\n        e = e - eBias\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction ieee754write(buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c\n    var eLen = nBytes * 8 - mLen - 1\n    var eMax = (1 << eLen) - 1\n    var eBias = eMax >> 1\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0\n    var i = isLE ? 0 : nBytes - 1\n    var d = isLE ? 1 : -1\n    var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n    value = Math.abs(value)\n\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0\n        e = eMax\n    } else {\n        e = Math.floor(Math.log(value) / Math.LN2)\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--\n            c *= 2\n        }\n        if (e + eBias >= 1) {\n            value += rt / c\n        } else {\n            value += rt * Math.pow(2, 1 - eBias)\n        }\n        if (value * c >= 2) {\n            e++\n            c /= 2\n        }\n\n        if (e + eBias >= eMax) {\n            m = 0\n            e = eMax\n        } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen)\n            e = e + eBias\n        } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n            e = 0\n        }\n    }\n\n    for (\n        ;\n        mLen >= 8;\n        buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8\n    ) {}\n\n    e = (e << mLen) | m\n    eLen += mLen\n    for (\n        ;\n        eLen > 0;\n        buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8\n    ) {}\n\n    buffer[offset + i - d] |= s * 128\n}\n", "export { Buffer } from '_node-buffer-polyfill_.js'\n", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n", "'use strict'\n\nvar UTF8_ACCEPT = 12\nvar UTF8_REJECT = 0\nvar UTF8_DATA = [\n  // The first part of the table maps bytes to character to a transition.\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 7, 7,\n  10, 9, 9, 9, 11, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n\n  // The second part of the table maps a state to a new state when adding a\n  // transition.\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  12, 0, 0, 0, 0, 24, 36, 48, 60, 72, 84, 96,\n  0, 12, 12, 12, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n  // The third part maps the current transition to a mask that needs to apply\n  // to the byte.\n  0x7F, 0x3F, 0x3F, 0x3F, 0x00, 0x1F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07\n]\n\nfunction decodeURIComponent (uri) {\n  var percentPosition = uri.indexOf('%')\n  if (percentPosition === -1) return uri\n\n  var length = uri.length\n  var decoded = ''\n  var last = 0\n  var codepoint = 0\n  var startOfOctets = percentPosition\n  var state = UTF8_ACCEPT\n\n  while (percentPosition > -1 && percentPosition < length) {\n    var high = hexCodeToInt(uri[percentPosition + 1], 4)\n    var low = hexCodeToInt(uri[percentPosition + 2], 0)\n    var byte = high | low\n    var type = UTF8_DATA[byte]\n    state = UTF8_DATA[256 + state + type]\n    codepoint = (codepoint << 6) | (byte & UTF8_DATA[364 + type])\n\n    if (state === UTF8_ACCEPT) {\n      decoded += uri.slice(last, startOfOctets)\n\n      decoded += (codepoint <= 0xFFFF)\n        ? String.fromCharCode(codepoint)\n        : String.fromCharCode(\n          (0xD7C0 + (codepoint >> 10)),\n          (0xDC00 + (codepoint & 0x3FF))\n        )\n\n      codepoint = 0\n      last = percentPosition + 3\n      percentPosition = startOfOctets = uri.indexOf('%', last)\n    } else if (state === UTF8_REJECT) {\n      return null\n    } else {\n      percentPosition += 3\n      if (percentPosition < length && uri.charCodeAt(percentPosition) === 37) continue\n      return null\n    }\n  }\n\n  return decoded + uri.slice(last)\n}\n\nvar HEX = {\n  '0': 0,\n  '1': 1,\n  '2': 2,\n  '3': 3,\n  '4': 4,\n  '5': 5,\n  '6': 6,\n  '7': 7,\n  '8': 8,\n  '9': 9,\n  'a': 10,\n  'A': 10,\n  'b': 11,\n  'B': 11,\n  'c': 12,\n  'C': 12,\n  'd': 13,\n  'D': 13,\n  'e': 14,\n  'E': 14,\n  'f': 15,\n  'F': 15\n}\n\nfunction hexCodeToInt (c, shift) {\n  var i = HEX[c]\n  return i === undefined ? 255 : i << shift\n}\n\nmodule.exports = decodeURIComponent\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"E:\\\\dev\\\\shima_rss_repo\\\\api\\\\.wrangler\\\\tmp\\\\bundle-s2ARaL\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"E:\\\\dev\\\\shima_rss_repo\\\\api\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"E:\\\\dev\\\\shima_rss_repo\\\\api\\\\.wrangler\\\\tmp\\\\bundle-s2ARaL\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"E:\\\\dev\\\\shima_rss_repo\\\\api\\\\.wrangler\\\\tmp\\\\bundle-s2ARaL\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"E:\\\\dev\\\\shima_rss_repo\\\\api\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"E:\\\\dev\\\\shima_rss_repo\\\\api\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"E:\\\\dev\\\\shima_rss_repo\\\\api\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"E:\\\\dev\\\\shima_rss_repo\\\\api\\\\src\\\\index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import Container from 'typedi'\nimport { Elysia } from 'elysia'\nimport { cors } from '@elysiajs/cors'\nimport type { Env } from './utils/typedi'\nimport app from './controllers/ALL'\n\nexport default {\n  async fetch(request: Request, env: Env) {\n    // inject db and env as deps\n    Container.set('env', env)\n    Container.set('db', env.DB)\n    const resp = await new Elysia({ aot: false })\n      .use(cors())\n      .use(app)\n      .handle(request)\n    return resp\n  },\n}\n", "/**\n * We have a hard dependency on reflect-metadata package.\n * Without the dependency lookup wont work. So we should warn the users\n * when it's not loaded.\n */\n// if(!Reflect || !(Reflect as any).getMetadata) {\n//   throw new Error('Reflect.getMetadata is not a function. Please import the \"reflect-metadata\" package at the first line of your application.');\n// }\n\nimport { Container } from './container.class';\n\nexport * from './decorators/inject-many.decorator';\nexport * from './decorators/inject.decorator';\nexport * from './decorators/service.decorator';\n\nexport * from './error/cannot-inject-value.error';\nexport * from './error/cannot-instantiate-value.error';\nexport * from './error/service-not-found.error';\n\nexport { Handler } from './interfaces/handler.interface';\nexport { ServiceMetadata } from './interfaces/service-metadata.interface';\nexport { ServiceOptions } from './interfaces/service-options.interface';\nexport { Constructable } from './types/constructable.type';\nexport { ServiceIdentifier } from './types/service-identifier.type';\n\nexport { ContainerInstance } from './container-instance.class';\nexport { Container } from './container.class';\nexport { Token } from './token.class';\n\nexport default Container;\n", "import { ContainerInstance } from './container-instance.class';\nimport { Token } from './token.class';\nimport { Handler } from './interfaces/handler.interface';\nimport { Constructable } from './types/constructable.type';\nimport { ServiceIdentifier } from './types/service-identifier.type';\nimport { ServiceOptions } from './interfaces/service-options.interface';\nimport { AbstractConstructable } from './types/abstract-constructable.type';\n\n/**\n * Service container.\n */\nexport class Container {\n  /**\n   * All registered handlers. The @Inject() decorator uses handlers internally to mark a property for injection.\n   **/\n  static readonly handlers: Handler[] = [];\n\n  /**  Global container instance. */\n  private static readonly globalInstance: ContainerInstance = new ContainerInstance('default');\n\n  /** Other containers created using Container.of method. */\n  private static readonly instances: ContainerInstance[] = [];\n\n  /**\n   * Gets a separate container instance for the given instance id.\n   */\n  static of(containerId: string = 'default'): ContainerInstance {\n    if (containerId === 'default') return this.globalInstance;\n\n    let container = this.instances.find(instance => instance.id === containerId);\n    if (!container) {\n      container = new ContainerInstance(containerId);\n      this.instances.push(container);\n      // TODO: Why we are not reseting here? Let's reset here. (I have added the commented code.)\n      // container.reset();\n    }\n\n    return container;\n  }\n\n  /**\n   * Checks if the service with given name or type is registered service container.\n   * Optionally, parameters can be passed in case if instance is initialized in the container for the first time.\n   */\n  static has<T>(type: Constructable<T>): boolean;\n  static has<T>(id: string): boolean;\n  static has<T>(id: Token<T>): boolean;\n  static has<T>(identifier: ServiceIdentifier): boolean {\n    return this.globalInstance.has(identifier as any);\n  }\n\n  /**\n   * Retrieves the service with given name or type from the service container.\n   * Optionally, parameters can be passed in case if instance is initialized in the container for the first time.\n   */\n  static get<T>(type: Constructable<T>): T;\n  static get<T>(type: AbstractConstructable<T>): T;\n  static get<T>(id: string): T;\n  static get<T>(id: Token<T>): T;\n  static get<T>(identifier: ServiceIdentifier<T>): T {\n    return this.globalInstance.get(identifier as any);\n  }\n\n  /**\n   * Gets all instances registered in the container of the given service identifier.\n   * Used when service defined with multiple: true flag.\n   */\n  static getMany<T>(id: string): T[];\n  static getMany<T>(id: Token<T>): T[];\n  static getMany<T>(id: string | Token<T>): T[] {\n    return this.globalInstance.getMany(id as any);\n  }\n\n  /**\n   * Sets a value for the given type or service name in the container.\n   */\n  static set<T = unknown>(type: Function, value: any): Container;\n  static set<T = unknown>(type: Constructable<T>, value: any): Container;\n  static set<T = unknown>(type: AbstractConstructable<T>, value: any): Container;\n  static set<T = unknown>(name: string, value: any): Container;\n  static set<T = unknown>(token: Token<T>, value: any): Container;\n  static set<T = unknown>(value: ServiceOptions<T>): Container;\n  static set<T = unknown>(values: ServiceOptions<T>[]): Container;\n  static set(\n    identifierOrServiceMetadata: ServiceIdentifier | ServiceOptions<any> | ServiceOptions<any>[],\n    value?: any\n  ): Container {\n    this.globalInstance.set(identifierOrServiceMetadata as any, value);\n    return this;\n  }\n\n  /**\n   * Removes services with a given service identifiers.\n   */\n  static remove(identifierOrIdentifierArray: ServiceIdentifier | ServiceIdentifier[]): Container {\n    this.globalInstance.remove(identifierOrIdentifierArray);\n\n    return this;\n  }\n\n  /**\n   * Completely resets the container by removing all previously registered services and handlers from it.\n   */\n  static reset(containerId: string = 'default'): Container {\n    if (containerId == 'default') {\n      this.globalInstance.reset();\n      this.instances.forEach(instance => instance.reset());\n    } else {\n      const instance = this.instances.find(instance => instance.id === containerId);\n      if (instance) {\n        instance.reset();\n        this.instances.splice(this.instances.indexOf(instance), 1);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Registers a new handler.\n   */\n  static registerHandler(handler: Handler): Container {\n    this.handlers.push(handler);\n    return this;\n  }\n\n  /**\n   * Helper method that imports given services.\n   */\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n  static import(services: Function[]): Container {\n    return this;\n  }\n}\n", "/**\n * Used to create unique typed service identifier.\n * Useful when service has only interface, but don't have a class.\n */\nexport class Token<T> {\n  /**\n   * @param name Token name, optional and only used for debugging purposes.\n   */\n  constructor(public name?: string) {}\n}\n", "import { ServiceIdentifier } from '../types/service-identifier.type';\nimport { Token } from '../token.class';\n\n/**\n * Thrown when requested service was not found.\n */\nexport class ServiceNotFoundError extends Error {\n  public name = 'ServiceNotFoundError';\n\n  /** Normalized identifier name used in the error message. */\n  private normalizedIdentifier: string = '<UNKNOWN_IDENTIFIER>';\n\n  get message(): string {\n    return (\n      `Service with \"${this.normalizedIdentifier}\" identifier was not found in the container. ` +\n      `Register it before usage via explicitly calling the \"Container.set\" function or using the \"@Service()\" decorator.`\n    );\n  }\n\n  constructor(identifier: ServiceIdentifier) {\n    super();\n\n    if (typeof identifier === 'string') {\n      this.normalizedIdentifier = identifier;\n    } else if (identifier instanceof Token) {\n      this.normalizedIdentifier = `Token<${identifier.name || 'UNSET_NAME'}>`;\n    } else if (identifier && (identifier.name || identifier.prototype?.name)) {\n      this.normalizedIdentifier =\n        `MaybeConstructable<${identifier.name}>` ||\n        `MaybeConstructable<${(identifier.prototype as { name: string })?.name}>`;\n    }\n  }\n}\n", "import { ServiceIdentifier } from '../types/service-identifier.type';\nimport { Token } from '../token.class';\n\n/**\n * Thrown when DI cannot inject value into property decorated by @Inject decorator.\n */\nexport class CannotInstantiateValueError extends Error {\n  public name = 'CannotInstantiateValueError';\n\n  /** Normalized identifier name used in the error message. */\n  private normalizedIdentifier: string = '<UNKNOWN_IDENTIFIER>';\n\n  get message(): string {\n    return (\n      `Cannot instantiate the requested value for the \"${this.normalizedIdentifier}\" identifier. ` +\n      `The related metadata doesn't contain a factory or a type to instantiate.`\n    );\n  }\n\n  constructor(identifier: ServiceIdentifier) {\n    super();\n\n    // TODO: Extract this to a helper function and share between this and NotFoundError.\n    if (typeof identifier === 'string') {\n      this.normalizedIdentifier = identifier;\n    } else if (identifier instanceof Token) {\n      this.normalizedIdentifier = `Token<${identifier.name || 'UNSET_NAME'}>`;\n    } else if (identifier && (identifier.name || identifier.prototype?.name)) {\n      this.normalizedIdentifier =\n        `MaybeConstructable<${identifier.name}>` ||\n        `MaybeConstructable<${(identifier.prototype as { name: string })?.name}>`;\n    }\n  }\n}\n", "export const EMPTY_VALUE = Symbol('EMPTY_VALUE');\n", "import { Container } from './container.class';\nimport { ServiceNotFoundError } from './error/service-not-found.error';\nimport { CannotInstantiateValueError } from './error/cannot-instantiate-value.error';\nimport { Token } from './token.class';\nimport { Constructable } from './types/constructable.type';\nimport { AbstractConstructable } from './types/abstract-constructable.type';\nimport { ServiceIdentifier } from './types/service-identifier.type';\nimport { ServiceMetadata } from './interfaces/service-metadata.interface';\nimport { ServiceOptions } from './interfaces/service-options.interface';\nimport { EMPTY_VALUE } from './empty.const';\n\n/**\n * TypeDI can have multiple containers.\n * One container is ContainerInstance.\n */\nexport class ContainerInstance {\n  /** Container instance id. */\n  public readonly id!: string;\n\n  /** All registered services in the container. */\n  private services: ServiceMetadata<unknown>[] = [];\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  /**\n   * Checks if the service with given name or type is registered service container.\n   * Optionally, parameters can be passed in case if instance is initialized in the container for the first time.\n   */\n  has<T>(type: Constructable<T>): boolean;\n  has<T>(id: string): boolean;\n  has<T>(id: Token<T>): boolean;\n  has<T>(identifier: ServiceIdentifier): boolean {\n    return !!this.findService(identifier);\n  }\n\n  /**\n   * Retrieves the service with given name or type from the service container.\n   * Optionally, parameters can be passed in case if instance is initialized in the container for the first time.\n   */\n  get<T>(type: Constructable<T>): T;\n  get<T>(type: AbstractConstructable<T>): T;\n  get<T>(id: string): T;\n  get<T>(id: Token<T>): T;\n  get<T>(id: ServiceIdentifier<T>): T;\n  get<T>(identifier: ServiceIdentifier<T>): T {\n    const globalContainer = Container.of(undefined);\n    const globalService = globalContainer.findService(identifier);\n    const scopedService = this.findService(identifier);\n\n    if (globalService && globalService.global === true) return this.getServiceValue(globalService);\n\n    if (scopedService) return this.getServiceValue(scopedService);\n\n    /** If it's the first time requested in the child container we load it from parent and set it. */\n    if (globalService && this !== globalContainer) {\n      const clonedService = { ...globalService };\n      clonedService.value = EMPTY_VALUE;\n\n      /**\n       * We need to immediately set the empty value from the root container\n       * to prevent infinite lookup in cyclic dependencies.\n       */\n      this.set(clonedService);\n\n      const value = this.getServiceValue(clonedService);\n      this.set({ ...clonedService, value });\n\n      return value;\n    }\n\n    if (globalService) return this.getServiceValue(globalService);\n\n    throw new ServiceNotFoundError(identifier);\n  }\n\n  /**\n   * Gets all instances registered in the container of the given service identifier.\n   * Used when service defined with multiple: true flag.\n   */\n  getMany<T>(type: Constructable<T>): T[];\n  getMany<T>(type: AbstractConstructable<T>): T[];\n  getMany<T>(id: string): T[];\n  getMany<T>(id: Token<T>): T[];\n  getMany<T>(id: ServiceIdentifier<T>): T[];\n  getMany<T>(identifier: ServiceIdentifier<T>): T[] {\n    return this.findAllServices(identifier).map(service => this.getServiceValue(service));\n  }\n\n  /**\n   * Sets a value for the given type or service name in the container.\n   */\n  set<T = unknown>(service: ServiceMetadata<T>): this; // This should be hidden\n  set<T = unknown>(type: Constructable<T>, instance: T): this;\n  set<T = unknown>(type: AbstractConstructable<T>, instance: T): this;\n  set<T = unknown>(name: string, instance: T): this;\n  set<T = unknown>(token: Token<T>, instance: T): this;\n  set<T = unknown>(token: ServiceIdentifier, instance: T): this;\n  set<T = unknown>(metadata: ServiceOptions<T>): this;\n  set<T = unknown>(metadataArray: ServiceOptions<T>[]): this;\n  set<T = unknown>(\n    identifierOrServiceMetadata: ServiceIdentifier | ServiceOptions<T> | ServiceOptions<T>[],\n    value?: T\n  ): this {\n    if (identifierOrServiceMetadata instanceof Array) {\n      identifierOrServiceMetadata.forEach(data => this.set(data));\n\n      return this;\n    }\n\n    if (typeof identifierOrServiceMetadata === 'string' || identifierOrServiceMetadata instanceof Token) {\n      return this.set({\n        id: identifierOrServiceMetadata,\n        type: null,\n        value: value,\n        factory: undefined,\n        global: false,\n        multiple: false,\n        eager: false,\n        transient: false,\n      });\n    }\n\n    if (typeof identifierOrServiceMetadata === 'function') {\n      return this.set({\n        id: identifierOrServiceMetadata,\n        // TODO: remove explicit casting\n        type: identifierOrServiceMetadata as Constructable<unknown>,\n        value: value,\n        factory: undefined,\n        global: false,\n        multiple: false,\n        eager: false,\n        transient: false,\n      });\n    }\n\n    const newService: ServiceMetadata<T> = {\n      id: new Token('UNREACHABLE'),\n      type: null,\n      factory: undefined,\n      value: EMPTY_VALUE,\n      global: false,\n      multiple: false,\n      eager: false,\n      transient: false,\n      ...identifierOrServiceMetadata,\n    };\n\n    const service = this.findService(newService.id);\n\n    if (service && service.multiple !== true) {\n      Object.assign(service, newService);\n    } else {\n      this.services.push(newService);\n    }\n\n    if (newService.eager) {\n      this.get(newService.id);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes services with a given service identifiers.\n   */\n  public remove(identifierOrIdentifierArray: ServiceIdentifier | ServiceIdentifier[]): this {\n    if (Array.isArray(identifierOrIdentifierArray)) {\n      identifierOrIdentifierArray.forEach(id => this.remove(id));\n    } else {\n      this.services = this.services.filter(service => {\n        if (service.id === identifierOrIdentifierArray) {\n          this.destroyServiceInstance(service);\n          return false;\n        }\n\n        return true;\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Completely resets the container by removing all previously registered services from it.\n   */\n  public reset(options: { strategy: 'resetValue' | 'resetServices' } = { strategy: 'resetValue' }): this {\n    switch (options.strategy) {\n      case 'resetValue':\n        this.services.forEach(service => this.destroyServiceInstance(service));\n        break;\n      case 'resetServices':\n        this.services.forEach(service => this.destroyServiceInstance(service));\n        this.services = [];\n        break;\n      default:\n        throw new Error('Received invalid reset strategy.');\n    }\n    return this;\n  }\n\n  /**\n   * Returns all services registered with the given identifier.\n   */\n  private findAllServices(identifier: ServiceIdentifier): ServiceMetadata<unknown>[] {\n    return this.services.filter(service => service.id === identifier);\n  }\n\n  /**\n   * Finds registered service in the with a given service identifier.\n   */\n  private findService(identifier: ServiceIdentifier): ServiceMetadata<unknown> | undefined {\n    return this.services.find(service => service.id === identifier);\n  }\n\n  /**\n   * Gets the value belonging to `serviceMetadata.id`.\n   *\n   * - if `serviceMetadata.value` is already set it is immediately returned\n   * - otherwise the requested type is resolved to the value saved to `serviceMetadata.value` and returned\n   */\n  private getServiceValue(serviceMetadata: ServiceMetadata<unknown>): any {\n    let value: unknown = EMPTY_VALUE;\n\n    /**\n     * If the service value has been set to anything prior to this call we return that value.\n     * NOTE: This part builds on the assumption that transient dependencies has no value set ever.\n     */\n    if (serviceMetadata.value !== EMPTY_VALUE) {\n      return serviceMetadata.value;\n    }\n\n    /** If both factory and type is missing, we cannot resolve the requested ID. */\n    if (!serviceMetadata.factory && !serviceMetadata.type) {\n      throw new CannotInstantiateValueError(serviceMetadata.id);\n    }\n\n    /**\n     * If a factory is defined it takes priority over creating an instance via `new`.\n     * The return value of the factory is not checked, we believe by design that the user knows what he/she is doing.\n     */\n    if (serviceMetadata.factory) {\n      /**\n       * If we received the factory in the [Constructable<Factory>, \"functionName\"] format, we need to create the\n       * factory first and then call the specified function on it.\n       */\n      if (serviceMetadata.factory instanceof Array) {\n        let factoryInstance;\n\n        try {\n          /** Try to get the factory from TypeDI first, if failed, fall back to simply initiating the class. */\n          factoryInstance = this.get<any>(serviceMetadata.factory[0]);\n        } catch (error) {\n          if (error instanceof ServiceNotFoundError) {\n            factoryInstance = new serviceMetadata.factory[0]();\n          } else {\n            throw error;\n          }\n        }\n\n        value = factoryInstance[serviceMetadata.factory[1]](this, serviceMetadata.id);\n      } else {\n        /** If only a simple function was provided we simply call it. */\n        value = serviceMetadata.factory(this, serviceMetadata.id);\n      }\n    }\n\n    /**\n     * If no factory was provided and only then, we create the instance from the type if it was set.\n     */\n    if (!serviceMetadata.factory && serviceMetadata.type) {\n      const constructableTargetType: Constructable<unknown> = serviceMetadata.type;\n      // setup constructor parameters for a newly initialized service\n      const paramTypes = (Reflect as any)?.getMetadata('design:paramtypes', constructableTargetType) || [];\n      const params = this.initializeParams(constructableTargetType, paramTypes);\n\n      // \"extra feature\" - always pass container instance as the last argument to the service function\n      // this allows us to support javascript where we don't have decorators and emitted metadata about dependencies\n      // need to be injected, and user can use provided container to get instances he needs\n      params.push(this);\n\n      value = new constructableTargetType(...params);\n\n      // TODO: Calling this here, leads to infinite loop, because @Inject decorator registerds a handler\n      // TODO: which calls Container.get, which will check if the requested type has a value set and if not\n      // TODO: it will start the instantiation process over. So this is currently called outside of the if branch\n      // TODO: after the current value has been assigned to the serviceMetadata.\n      // this.applyPropertyHandlers(constructableTargetType, value as Constructable<unknown>);\n    }\n\n    /** If this is not a transient service, and we resolved something, then we set it as the value. */\n    if (!serviceMetadata.transient && value !== EMPTY_VALUE) {\n      serviceMetadata.value = value;\n    }\n\n    if (value === EMPTY_VALUE) {\n      /** This branch should never execute, but better to be safe than sorry. */\n      throw new CannotInstantiateValueError(serviceMetadata.id);\n    }\n\n    if (serviceMetadata.type) {\n      this.applyPropertyHandlers(serviceMetadata.type, value as Record<string, any>);\n    }\n\n    return value;\n  }\n\n  /**\n   * Initializes all parameter types for a given target service class.\n   */\n  private initializeParams(target: Function, paramTypes: any[]): unknown[] {\n    return paramTypes.map((paramType, index) => {\n      const paramHandler = Container.handlers.find(handler => {\n        /**\n         * @Inject()-ed values are stored as parameter handlers and they reference their target\n         * when created. So when a class is extended the @Inject()-ed values are not inherited\n         * because the handler still points to the old object only.\n         *\n         * As a quick fix a single level parent lookup is added via `Object.getPrototypeOf(target)`,\n         * however this should be updated to a more robust solution.\n         *\n         * TODO: Add proper inheritance handling: either copy the handlers when a class is registered what\n         * TODO: has it's parent already registered as dependency or make the lookup search up to the base Object.\n         */\n        return (\n          (handler.object === target || handler.object === Object.getPrototypeOf(target)) && handler.index === index\n        );\n      });\n      if (paramHandler) return paramHandler.value(this);\n\n      if (paramType && paramType.name && !this.isPrimitiveParamType(paramType.name)) {\n        return this.get(paramType);\n      }\n\n      return undefined;\n    });\n  }\n\n  /**\n   * Checks if given parameter type is primitive type or not.\n   */\n  private isPrimitiveParamType(paramTypeName: string): boolean {\n    return ['string', 'boolean', 'number', 'object'].includes(paramTypeName.toLowerCase());\n  }\n\n  /**\n   * Applies all registered handlers on a given target class.\n   */\n  private applyPropertyHandlers(target: Function, instance: { [key: string]: any }) {\n    Container.handlers.forEach(handler => {\n      if (typeof handler.index === 'number') return;\n      if (handler.object.constructor !== target && !(target.prototype instanceof handler.object.constructor)) return;\n\n      if (handler.propertyName) {\n        instance[handler.propertyName] = handler.value(this);\n      }\n    });\n  }\n\n  /**\n   * Checks if the given service metadata contains a destroyable service instance and destroys it in place. If the service\n   * contains a callable function named `destroy` it is called but not awaited and the return value is ignored..\n   *\n   * @param serviceMetadata the service metadata containing the instance to destroy\n   * @param force when true the service will be always destroyed even if it's cannot be re-created\n   */\n  private destroyServiceInstance(serviceMetadata: ServiceMetadata, force = false) {\n    /** We reset value only if we can re-create it (aka type or factory exists). */\n    const shouldResetValue = force || !!serviceMetadata.type || !!serviceMetadata.factory;\n\n    if (shouldResetValue) {\n      /** If we wound a function named destroy we call it without any params. */\n      if (typeof (serviceMetadata?.value as Record<string, unknown>)['destroy'] === 'function') {\n        try {\n          (serviceMetadata.value as { destroy: CallableFunction }).destroy();\n        } catch (error) {\n          /** We simply ignore the errors from the destroy function. */\n        }\n      }\n\n      serviceMetadata.value = EMPTY_VALUE;\n    }\n  }\n}\n", "// node_modules/memoirist/dist/index.mjs\nvar createNode = (part, inert) => {\n  const inertMap = inert?.length ? {} : null;\n  if (inertMap)\n    for (const child of inert)\n      inertMap[child.part.charCodeAt(0)] = child;\n  return {\n    part,\n    store: null,\n    inert: inertMap,\n    params: null,\n    wildcardStore: null\n  };\n};\nvar cloneNode = (node, part) => ({\n  ...node,\n  part\n});\nvar createParamNode = (name) => ({\n  name,\n  store: null,\n  inert: null\n});\nvar Memoirist = class _Memoirist {\n  root = {};\n  history = [];\n  static regex = {\n    static: /:.+?(?=\\/|$)/,\n    params: /:.+?(?=\\/|$)/g,\n    optionalParams: /:.+?\\?(?=\\/|$)/g\n  };\n  add(method, path, store, {\n    ignoreError = false,\n    ignoreHistory = false\n  } = {}) {\n    if (typeof path !== \"string\")\n      throw new TypeError(\"Route path must be a string\");\n    if (path === \"\")\n      path = \"/\";\n    else if (path[0] !== \"/\")\n      path = `/${path}`;\n    const isWildcard = path[path.length - 1] === \"*\";\n    const optionalParams = path.match(_Memoirist.regex.optionalParams);\n    if (optionalParams) {\n      const originalPath = path.replaceAll(\"?\", \"\");\n      this.add(method, originalPath, store, {\n        ignoreError\n      });\n      for (let i = 0; i < optionalParams.length; i++) {\n        let newPath = path.replace(\"/\" + optionalParams[i], \"\");\n        this.add(method, newPath, store, {\n          ignoreError: true\n        });\n      }\n      return store;\n    }\n    if (optionalParams)\n      path = path.replaceAll(\"?\", \"\");\n    if (this.history.find(([m, p, s]) => m === method && p === path))\n      return store;\n    if (isWildcard || optionalParams && path.charCodeAt(path.length - 1) === 63)\n      path = path.slice(0, -1);\n    if (!ignoreHistory)\n      this.history.push([method, path, store]);\n    const inertParts = path.split(_Memoirist.regex.static);\n    const paramParts = path.match(_Memoirist.regex.params) || [];\n    if (inertParts[inertParts.length - 1] === \"\")\n      inertParts.pop();\n    let node;\n    if (!this.root[method])\n      node = this.root[method] = createNode(\"/\");\n    else\n      node = this.root[method];\n    let paramPartsIndex = 0;\n    for (let i = 0; i < inertParts.length; ++i) {\n      let part = inertParts[i];\n      if (i > 0) {\n        const param = paramParts[paramPartsIndex++].slice(1);\n        if (node.params === null)\n          node.params = createParamNode(param);\n        else if (node.params.name !== param) {\n          if (ignoreError)\n            return store;\n          else\n            throw new Error(\n              `Cannot create route \"${path}\" with parameter \"${param}\" because a route already exists with a different parameter name (\"${node.params.name}\") in the same location`\n            );\n        }\n        const params = node.params;\n        if (params.inert === null) {\n          node = params.inert = createNode(part);\n          continue;\n        }\n        node = params.inert;\n      }\n      for (let j = 0; ; ) {\n        if (j === part.length) {\n          if (j < node.part.length) {\n            const childNode = cloneNode(node, node.part.slice(j));\n            Object.assign(node, createNode(part, [childNode]));\n          }\n          break;\n        }\n        if (j === node.part.length) {\n          if (node.inert === null)\n            node.inert = {};\n          const inert = node.inert[part.charCodeAt(j)];\n          if (inert) {\n            node = inert;\n            part = part.slice(j);\n            j = 0;\n            continue;\n          }\n          const childNode = createNode(part.slice(j));\n          node.inert[part.charCodeAt(j)] = childNode;\n          node = childNode;\n          break;\n        }\n        if (part[j] !== node.part[j]) {\n          const existingChild = cloneNode(node, node.part.slice(j));\n          const newChild = createNode(part.slice(j));\n          Object.assign(\n            node,\n            createNode(node.part.slice(0, j), [\n              existingChild,\n              newChild\n            ])\n          );\n          node = newChild;\n          break;\n        }\n        ++j;\n      }\n    }\n    if (paramPartsIndex < paramParts.length) {\n      const param = paramParts[paramPartsIndex];\n      const name = param.slice(1);\n      if (node.params === null)\n        node.params = createParamNode(name);\n      else if (node.params.name !== name) {\n        if (ignoreError)\n          return store;\n        else\n          throw new Error(\n            `Cannot create route \"${path}\" with parameter \"${name}\" because a route already exists with a different parameter name (\"${node.params.name}\") in the same location`\n          );\n      }\n      if (node.params.store === null)\n        node.params.store = store;\n      return node.params.store;\n    }\n    if (isWildcard) {\n      if (node.wildcardStore === null)\n        node.wildcardStore = store;\n      return node.wildcardStore;\n    }\n    if (node.store === null)\n      node.store = store;\n    return node.store;\n  }\n  find(method, url) {\n    const root = this.root[method];\n    if (!root)\n      return null;\n    return matchRoute(url, url.length, root, 0);\n  }\n};\nvar matchRoute = (url, urlLength, node, startIndex) => {\n  const part = node.part;\n  const length = part.length;\n  const endIndex = startIndex + length;\n  if (length > 1) {\n    if (endIndex > urlLength)\n      return null;\n    if (length < 15) {\n      for (let i = 1, j = startIndex + 1; i < length; ++i, ++j)\n        if (part.charCodeAt(i) !== url.charCodeAt(j))\n          return null;\n    } else if (url.slice(startIndex, endIndex) !== part)\n      return null;\n  }\n  if (endIndex === urlLength) {\n    if (node.store !== null)\n      return {\n        store: node.store,\n        params: {}\n      };\n    if (node.wildcardStore !== null)\n      return {\n        store: node.wildcardStore,\n        params: { \"*\": \"\" }\n      };\n    return null;\n  }\n  if (node.inert !== null) {\n    const inert = node.inert[url.charCodeAt(endIndex)];\n    if (inert !== void 0) {\n      const route = matchRoute(url, urlLength, inert, endIndex);\n      if (route !== null)\n        return route;\n    }\n  }\n  if (node.params !== null) {\n    const { store, name, inert } = node.params;\n    const slashIndex = url.indexOf(\"/\", endIndex);\n    if (slashIndex !== endIndex) {\n      if (slashIndex === -1 || slashIndex >= urlLength) {\n        if (store !== null) {\n          const params = {};\n          params[name] = url.substring(endIndex, urlLength);\n          return {\n            store,\n            params\n          };\n        }\n      } else if (inert !== null) {\n        const route = matchRoute(url, urlLength, inert, slashIndex);\n        if (route !== null) {\n          route.params[name] = url.substring(endIndex, slashIndex);\n          return route;\n        }\n      }\n    }\n  }\n  if (node.wildcardStore !== null)\n    return {\n      store: node.wildcardStore,\n      params: {\n        \"*\": url.substring(endIndex, urlLength)\n      }\n    };\n  return null;\n};\n\n// src/sucrose.ts\nvar hasReturn = (fn) => {\n  const fnLiteral = typeof fn === \"object\" ? fn.fn.toString() : typeof fn === \"string\" ? fn.toString() : fn;\n  const parenthesisEnd = fnLiteral.indexOf(\")\");\n  if (fnLiteral.charCodeAt(parenthesisEnd + 2) === 61 && fnLiteral.charCodeAt(parenthesisEnd + 5) !== 123) {\n    return true;\n  }\n  return fnLiteral.includes(\"return\");\n};\nvar separateFunction = (code) => {\n  if (code.startsWith(\"async\")) code = code.slice(5);\n  code = code.trimStart();\n  let index = -1;\n  if (code.charCodeAt(0) === 40) {\n    index = code.indexOf(\"=>\", code.indexOf(\")\"));\n    if (index !== -1) {\n      let bracketEndIndex = index;\n      while (bracketEndIndex > 0)\n        if (code.charCodeAt(--bracketEndIndex) === 41) break;\n      let body = code.slice(index + 2);\n      if (body.charCodeAt(0) === 32) body = body.trimStart();\n      return [\n        code.slice(1, bracketEndIndex),\n        body,\n        {\n          isArrowReturn: body.charCodeAt(0) !== 123\n        }\n      ];\n    }\n  }\n  if (code.startsWith(\"function\")) {\n    index = code.indexOf(\"(\");\n    const end = code.indexOf(\")\");\n    return [\n      code.slice(index + 1, end),\n      code.slice(end + 2),\n      {\n        isArrowReturn: false\n      }\n    ];\n  }\n  const start = code.indexOf(\"(\");\n  if (start !== -1) {\n    const sep = code.indexOf(\"\\n\", 2);\n    const parameter = code.slice(0, sep);\n    const end = parameter.lastIndexOf(\")\") + 1;\n    const body = code.slice(sep + 1);\n    return [\n      parameter.slice(start, end),\n      \"{\" + body,\n      {\n        isArrowReturn: false\n      }\n    ];\n  }\n  const x = code.split(\"\\n\", 2);\n  return [x[0], x[1], { isArrowReturn: false }];\n};\nvar bracketPairRange = (parameter) => {\n  const start = parameter.indexOf(\"{\");\n  if (start === -1) return [-1, 0];\n  let end = start + 1;\n  let deep = 1;\n  for (; end < parameter.length; end++) {\n    const char = parameter.charCodeAt(end);\n    if (char === 123) deep++;\n    else if (char === 125) deep--;\n    if (deep === 0) break;\n  }\n  if (deep !== 0) return [0, parameter.length];\n  return [start, end + 1];\n};\nvar bracketPairRangeReverse = (parameter) => {\n  const end = parameter.lastIndexOf(\"}\");\n  if (end === -1) return [-1, 0];\n  let start = end - 1;\n  let deep = 1;\n  for (; start >= 0; start--) {\n    const char = parameter.charCodeAt(start);\n    if (char === 125) deep++;\n    else if (char === 123) deep--;\n    if (deep === 0) break;\n  }\n  if (deep !== 0) return [-1, 0];\n  return [start, end + 1];\n};\nvar removeColonAlias = (parameter) => {\n  while (true) {\n    const start = parameter.indexOf(\":\");\n    if (start === -1) break;\n    let end = parameter.indexOf(\",\", start);\n    if (end === -1) end = parameter.indexOf(\"}\", start) - 1;\n    if (end === -2) end = parameter.length;\n    parameter = parameter.slice(0, start) + parameter.slice(end);\n  }\n  return parameter;\n};\nvar retrieveRootParamters = (parameter) => {\n  let hasParenthesis = false;\n  if (parameter.charCodeAt(0) === 40) parameter = parameter.slice(1, -1);\n  if (parameter.charCodeAt(0) === 123) {\n    hasParenthesis = true;\n    parameter = parameter.slice(1, -1);\n  }\n  parameter = parameter.replace(/( |\\t|\\n)/g, \"\").trim();\n  let parameters = [];\n  while (true) {\n    let [start, end] = bracketPairRange(parameter);\n    if (start === -1) break;\n    parameters.push(parameter.slice(0, start - 1));\n    if (parameter.charCodeAt(end) === 44) end++;\n    parameter = parameter.slice(end);\n  }\n  parameter = removeColonAlias(parameter);\n  if (parameter) parameters = parameters.concat(parameter.split(\",\"));\n  const newParameters = [];\n  for (const p of parameters) {\n    if (p.indexOf(\",\") === -1) {\n      newParameters.push(p);\n      continue;\n    }\n    for (const q of p.split(\",\"))\n      newParameters.push(q.trim());\n  }\n  parameters = newParameters;\n  return {\n    hasParenthesis,\n    parameters\n  };\n};\nvar findParameterReference = (parameter, inference) => {\n  const { parameters, hasParenthesis } = retrieveRootParamters(parameter);\n  if (!inference.query && parameters.includes(\"query\")) inference.query = true;\n  if (!inference.headers && parameters.includes(\"headers\"))\n    inference.headers = true;\n  if (!inference.body && parameters.includes(\"body\")) inference.body = true;\n  if (!inference.cookie && parameters.includes(\"cookie\"))\n    inference.cookie = true;\n  if (!inference.set && parameters.includes(\"set\")) inference.set = true;\n  if (!inference.server && parameters.includes(\"server\"))\n    inference.server = true;\n  if (hasParenthesis) return `{ ${parameters.join(\", \")} }`;\n  return parameters.join(\", \");\n};\nvar findEndIndex = (type, content, index) => {\n  const newLineIndex = content.indexOf(type + \"\\n\", index);\n  const newTabIndex = content.indexOf(type + \"\t\", index);\n  const commaIndex = content.indexOf(type + \",\", index);\n  const semicolonIndex = content.indexOf(type + \";\", index);\n  const emptyIndex = content.indexOf(type + \" \", index);\n  return [newLineIndex, newTabIndex, commaIndex, semicolonIndex, emptyIndex].filter((i) => i > 0).sort((a, b) => a - b)[0] || -1;\n};\nvar findAlias = (type, body, depth = 0) => {\n  if (depth > 5) return [];\n  const aliases = [];\n  let content = body;\n  while (true) {\n    let index = findEndIndex(\" = \" + type, content);\n    if (index === -1) {\n      const lastIndex = content.indexOf(\" = \" + type);\n      if (lastIndex + 3 + type.length !== content.length) break;\n      index = lastIndex;\n    }\n    const part = content.slice(0, index);\n    let variable = part.slice(part.lastIndexOf(\" \") + 1);\n    if (variable === \"}\") {\n      const [start, end] = bracketPairRangeReverse(part);\n      aliases.push(removeColonAlias(content.slice(start, end)));\n      content = content.slice(index + 3 + type.length);\n      continue;\n    }\n    while (variable.charCodeAt(0) === 44) variable = variable.slice(1);\n    while (variable.charCodeAt(0) === 9) variable = variable.slice(1);\n    if (!variable.includes(\"(\")) aliases.push(variable);\n    content = content.slice(index + 3 + type.length);\n  }\n  for (const alias of aliases) {\n    if (alias.charCodeAt(0) === 123) continue;\n    const deepAlias = findAlias(alias, body);\n    if (deepAlias.length > 0) aliases.push(...deepAlias);\n  }\n  return aliases;\n};\nvar extractMainParameter = (parameter) => {\n  if (!parameter) return;\n  if (parameter.charCodeAt(0) !== 123) return parameter;\n  parameter = parameter.slice(2, -2);\n  const hasComma = parameter.includes(\",\");\n  if (!hasComma) {\n    if (parameter.includes(\"...\"))\n      return parameter.slice(parameter.indexOf(\"...\") + 3);\n    return;\n  }\n  const spreadIndex = parameter.indexOf(\"...\");\n  if (spreadIndex === -1) return;\n  return parameter.slice(spreadIndex + 3).trimEnd();\n};\nvar inferBodyReference = (code, aliases, inference) => {\n  const access = (type, alias) => code.includes(alias + \".\" + type) || code.includes(alias + '[\"' + type + '\"]') || code.includes(alias + \"['\" + type + \"']\");\n  for (const alias of aliases) {\n    if (!alias) continue;\n    if (alias.charCodeAt(0) === 123) {\n      const parameters = retrieveRootParamters(alias).parameters;\n      if (!inference.query && parameters.includes(\"query\"))\n        inference.query = true;\n      if (!inference.headers && parameters.includes(\"headers\"))\n        inference.headers = true;\n      if (!inference.body && parameters.includes(\"body\"))\n        inference.body = true;\n      if (!inference.cookie && parameters.includes(\"cookie\"))\n        inference.cookie = true;\n      if (!inference.set && parameters.includes(\"set\"))\n        inference.set = true;\n      if (!inference.query && parameters.includes(\"server\"))\n        inference.server = true;\n      continue;\n    }\n    if (!inference.query && access(\"query\", alias)) inference.query = true;\n    if (code.includes(\"return \" + alias) || code.includes(\"return \" + alias + \".query\"))\n      inference.query = true;\n    if (!inference.headers && access(\"headers\", alias))\n      inference.headers = true;\n    if (!inference.body && access(\"body\", alias)) inference.body = true;\n    if (!inference.cookie && access(\"cookie\", alias))\n      inference.cookie = true;\n    if (!inference.set && access(\"set\", alias)) inference.set = true;\n    if (!inference.server && access(\"server\", alias))\n      inference.server = true;\n    if (inference.query && inference.headers && inference.body && inference.cookie && inference.set && inference.server)\n      break;\n  }\n  return aliases;\n};\nvar isContextPassToFunction = (context, body, inference) => {\n  try {\n    const captureFunction = new RegExp(`(?:\\\\w)\\\\((?:.*)?${context}`, \"gs\");\n    captureFunction.test(body);\n    const nextChar = body.charCodeAt(captureFunction.lastIndex);\n    if (nextChar === 41 || nextChar === 44) {\n      inference.query = true;\n      inference.headers = true;\n      inference.body = true;\n      inference.cookie = true;\n      inference.set = true;\n      inference.server = true;\n      return true;\n    }\n    return false;\n  } catch (error2) {\n    console.log(\n      \"[Sucrose] warning: unexpected isContextPassToFunction error, you may continue development as usual but please report the following to maintainers:\"\n    );\n    console.log(\"--- body ---\");\n    console.log(body);\n    console.log(\"--- context ---\");\n    console.log(context);\n    return true;\n  }\n};\nvar sucrose = (lifeCycle, inference = {\n  query: false,\n  headers: false,\n  body: false,\n  cookie: false,\n  set: false,\n  server: false\n}) => {\n  const events = [];\n  if (lifeCycle.handler && typeof lifeCycle.handler === \"function\")\n    events.push(lifeCycle.handler);\n  if (lifeCycle.request?.length) events.push(...lifeCycle.request);\n  if (lifeCycle.beforeHandle?.length) events.push(...lifeCycle.beforeHandle);\n  if (lifeCycle.parse?.length) events.push(...lifeCycle.parse);\n  if (lifeCycle.error?.length) events.push(...lifeCycle.error);\n  if (lifeCycle.transform?.length) events.push(...lifeCycle.transform);\n  if (lifeCycle.afterHandle?.length) events.push(...lifeCycle.afterHandle);\n  if (lifeCycle.mapResponse?.length) events.push(...lifeCycle.mapResponse);\n  if (lifeCycle.afterResponse?.length) events.push(...lifeCycle.afterResponse);\n  for (const e of events) {\n    if (!e) continue;\n    const event = \"fn\" in e ? e.fn : e;\n    const [parameter, body, { isArrowReturn }] = separateFunction(\n      event.toString()\n    );\n    const rootParameters = findParameterReference(parameter, inference);\n    const mainParameter = extractMainParameter(rootParameters);\n    if (mainParameter) {\n      const aliases = findAlias(mainParameter, body);\n      aliases.splice(0, -1, mainParameter);\n      if (!isContextPassToFunction(mainParameter, body, inference))\n        inferBodyReference(body, aliases, inference);\n      if (!inference.query && body.includes(\"return \" + mainParameter + \".query\"))\n        inference.query = true;\n    }\n    if (inference.query && inference.headers && inference.body && inference.cookie && inference.set && inference.server)\n      break;\n  }\n  return inference;\n};\n\n// src/error.ts\nimport { Value as Value3 } from \"@sinclair/typebox/value\";\n\n// src/utils.ts\nimport { Kind, TransformKind } from \"@sinclair/typebox\";\nimport { Value as Value2 } from \"@sinclair/typebox/value\";\nimport { TypeCompiler as TypeCompiler3 } from \"@sinclair/typebox/compiler\";\n\n// src/type-system.ts\nimport {\n  TypeRegistry\n} from \"@sinclair/typebox\";\nimport { TypeSystem } from \"@sinclair/typebox/system\";\nimport {\n  Type,\n  FormatRegistry\n} from \"@sinclair/typebox\";\nimport {\n  TypeCompiler\n} from \"@sinclair/typebox/compiler\";\nimport { Value } from \"@sinclair/typebox/value\";\n\n// src/formats.ts\nvar fullFormats = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date,\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: getTime(true),\n  \"date-time\": getDateTime(true),\n  \"iso-time\": getTime(false),\n  \"iso-date-time\": getDateTime(false),\n  // duration: https://tools.ietf.org/html/rfc3339#appendix-A\n  duration: /^P(?!$)((\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?|(\\d+W)?)$/,\n  uri,\n  \"uri-reference\": /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  \"uri-template\": /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  url: /^(?:https?|ftp):\\/\\/(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)(?:\\.(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname: /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$/,\n  ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i,\n  regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  \"json-pointer\": /^(?:\\/(?:[^~/]|~0|~1)*)*$/,\n  \"json-pointer-uri-fragment\": /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  \"relative-json-pointer\": /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n  // the following formats are used by the openapi specification: https://spec.openapis.org/oas/v3.0.0#data-types\n  // byte: https://github.com/miguelmota/is-base64\n  byte,\n  // signed 32 bit integer\n  int32: { type: \"number\", validate: validateInt32 },\n  // signed 64 bit integer\n  int64: { type: \"number\", validate: validateInt64 },\n  // C-type float\n  float: { type: \"number\", validate: validateNumber },\n  // C-type double\n  double: { type: \"number\", validate: validateNumber },\n  // hint to the UI to hide input strings\n  password: true,\n  // unchecked string payload\n  binary: true\n};\nfunction isLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nvar DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nvar DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction date(str) {\n  const matches = DATE.exec(str);\n  if (!matches) return false;\n  const year = +matches[1];\n  const month = +matches[2];\n  const day = +matches[3];\n  return month >= 1 && month <= 12 && day >= 1 && day <= (month === 2 && isLeapYear(year) ? 29 : DAYS[month]);\n}\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d(?:\\.\\d+)?)(z|([+-])(\\d\\d)(?::?(\\d\\d))?)?$/i;\nfunction getTime(strictTimeZone) {\n  return function time(str) {\n    const matches = TIME.exec(str);\n    if (!matches) return false;\n    const hr = +matches[1];\n    const min = +matches[2];\n    const sec = +matches[3];\n    const tz = matches[4];\n    const tzSign = matches[5] === \"-\" ? -1 : 1;\n    const tzH = +(matches[6] || 0);\n    const tzM = +(matches[7] || 0);\n    if (tzH > 23 || tzM > 59 || strictTimeZone && !tz) return false;\n    if (hr <= 23 && min <= 59 && sec < 60) return true;\n    const utcMin = min - tzM * tzSign;\n    const utcHr = hr - tzH * tzSign - (utcMin < 0 ? 1 : 0);\n    return (utcHr === 23 || utcHr === -1) && (utcMin === 59 || utcMin === -1) && sec < 61;\n  };\n}\nvar DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction getDateTime(strictTimeZone) {\n  const time = getTime(strictTimeZone);\n  return function date_time(str) {\n    const dateTime = str.split(DATE_TIME_SEPARATOR);\n    return dateTime.length === 2 && date(dateTime[0]) && time(dateTime[1]);\n  };\n}\nvar NOT_URI_FRAGMENT = /\\/|:/;\nvar URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nfunction uri(str) {\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\nvar BYTE = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm;\nfunction byte(str) {\n  BYTE.lastIndex = 0;\n  return BYTE.test(str);\n}\nvar MIN_INT32 = -(2 ** 31);\nvar MAX_INT32 = 2 ** 31 - 1;\nfunction validateInt32(value) {\n  return Number.isInteger(value) && value <= MAX_INT32 && value >= MIN_INT32;\n}\nfunction validateInt64(value) {\n  return Number.isInteger(value);\n}\nfunction validateNumber() {\n  return true;\n}\nvar Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n  if (Z_ANCHOR.test(str)) return false;\n  try {\n    new RegExp(str);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n// src/type-system.ts\nimport {\n  TypeSystemPolicy,\n  TypeSystem as TypeSystem2,\n  TypeSystemDuplicateFormat,\n  TypeSystemDuplicateTypeKind\n} from \"@sinclair/typebox/system\";\nimport { TypeCompiler as TypeCompiler2, TypeCheck } from \"@sinclair/typebox/compiler\";\nvar isISO8601 = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/;\nvar isFormalDate = /(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s\\d{2}\\s\\d{4}\\s\\d{2}:\\d{2}:\\d{2}\\sGMT(?:\\+|-)\\d{4}\\s\\([^)]+\\)/;\nvar isShortenDate = /^(?:(?:(?:(?:0?[1-9]|[12][0-9]|3[01])[/\\s-](?:0?[1-9]|1[0-2])[/\\s-](?:19|20)\\d{2})|(?:(?:19|20)\\d{2}[/\\s-](?:0?[1-9]|1[0-2])[/\\s-](?:0?[1-9]|[12][0-9]|3[01]))))(?:\\s(?:1[012]|0?[1-9]):[0-5][0-9](?::[0-5][0-9])?(?:\\s[AP]M)?)?$/;\nvar _validateDate = fullFormats.date;\nvar _validateDateTime = fullFormats[\"date-time\"];\nif (!FormatRegistry.Has(\"date\"))\n  TypeSystem.Format(\"date\", (value) => {\n    const temp = value.replace(/\"/g, \"\");\n    if (isISO8601.test(temp) || isFormalDate.test(temp) || isShortenDate.test(temp) || _validateDate(temp)) {\n      const date2 = new Date(temp);\n      if (!Number.isNaN(date2.getTime())) return true;\n    }\n    return false;\n  });\nif (!FormatRegistry.Has(\"date-time\"))\n  TypeSystem.Format(\"date-time\", (value) => {\n    const temp = value.replace(/\"/g, \"\");\n    if (isISO8601.test(temp) || isFormalDate.test(temp) || isShortenDate.test(temp) || _validateDateTime(temp)) {\n      const date2 = new Date(temp);\n      if (!Number.isNaN(date2.getTime())) return true;\n    }\n    return false;\n  });\nObject.entries(fullFormats).forEach((formatEntry) => {\n  const [formatName, formatValue] = formatEntry;\n  if (!FormatRegistry.Has(formatName)) {\n    if (formatValue instanceof RegExp)\n      TypeSystem.Format(formatName, (value) => formatValue.test(value));\n    else if (typeof formatValue === \"function\")\n      TypeSystem.Format(formatName, formatValue);\n  }\n});\nvar t = Object.assign({}, Type);\nvar parseFileUnit = (size) => {\n  if (typeof size === \"string\")\n    switch (size.slice(-1)) {\n      case \"k\":\n        return +size.slice(0, size.length - 1) * 1024;\n      case \"m\":\n        return +size.slice(0, size.length - 1) * 1048576;\n      default:\n        return +size;\n    }\n  return size;\n};\nvar validateFile = (options, value) => {\n  if (!(value instanceof Blob)) return false;\n  if (options.minSize && value.size < parseFileUnit(options.minSize))\n    return false;\n  if (options.maxSize && value.size > parseFileUnit(options.maxSize))\n    return false;\n  if (options.extension)\n    if (typeof options.extension === \"string\") {\n      if (!value.type.startsWith(options.extension)) return false;\n    } else {\n      for (let i = 0; i < options.extension.length; i++)\n        if (value.type.startsWith(options.extension[i])) return true;\n      return false;\n    }\n  return true;\n};\nvar File2 = TypeRegistry.Get(\"Files\") ?? TypeSystem.Type(\"File\", validateFile);\nvar Files = TypeRegistry.Get(\"Files\") ?? TypeSystem.Type(\n  \"Files\",\n  (options, value) => {\n    if (!Array.isArray(value)) return validateFile(options, value);\n    if (options.minItems && value.length < options.minItems)\n      return false;\n    if (options.maxItems && value.length > options.maxItems)\n      return false;\n    for (let i = 0; i < value.length; i++)\n      if (!validateFile(options, value[i])) return false;\n    return true;\n  }\n);\nif (!FormatRegistry.Has(\"numeric\"))\n  FormatRegistry.Set(\"numeric\", (value) => !!value && !isNaN(+value));\nif (!FormatRegistry.Has(\"boolean\"))\n  FormatRegistry.Set(\n    \"boolean\",\n    (value) => value === \"true\" || value === \"false\"\n  );\nif (!FormatRegistry.Has(\"ObjectString\"))\n  FormatRegistry.Set(\"ObjectString\", (value) => {\n    let start = value.charCodeAt(0);\n    if (start === 9 || start === 10 || start === 32)\n      start = value.trimStart().charCodeAt(0);\n    if (start !== 123 && start !== 91) return false;\n    try {\n      JSON.parse(value);\n      return true;\n    } catch {\n      return false;\n    }\n  });\nif (!FormatRegistry.Has(\"ArrayString\"))\n  FormatRegistry.Set(\"ArrayString\", (value) => {\n    let start = value.charCodeAt(0);\n    if (start === 9 || start === 10 || start === 32)\n      start = value.trimStart().charCodeAt(0);\n    if (start !== 123 && start !== 91) return false;\n    try {\n      JSON.parse(value);\n      return true;\n    } catch {\n      return false;\n    }\n  });\nvar ElysiaType = {\n  Numeric: (property) => {\n    const schema = Type.Number(property);\n    return t.Transform(\n      t.Union(\n        [\n          t.String({\n            format: \"numeric\",\n            default: 0\n          }),\n          t.Number(property)\n        ],\n        property\n      )\n    ).Decode((value) => {\n      const number = +value;\n      if (isNaN(number)) return value;\n      if (property && !Value.Check(schema, number))\n        throw new ValidationError(\"property\", schema, number);\n      return number;\n    }).Encode((value) => value);\n  },\n  Date: (property) => {\n    const schema = Type.Date(property);\n    return t.Transform(\n      t.Union(\n        [\n          Type.Date(property),\n          t.String({\n            format: \"date\",\n            default: (/* @__PURE__ */ new Date()).toISOString()\n          }),\n          t.String({\n            format: \"date-time\",\n            default: (/* @__PURE__ */ new Date()).toISOString()\n          })\n        ],\n        property\n      )\n    ).Decode((value) => {\n      if (value instanceof Date) return value;\n      const date2 = new Date(value);\n      if (!Value.Check(schema, date2))\n        throw new ValidationError(\"property\", schema, date2);\n      return date2;\n    }).Encode((value) => {\n      if (typeof value === \"string\") return new Date(value);\n      return value;\n    });\n  },\n  BooleanString: (property) => {\n    const schema = Type.Boolean(property);\n    return t.Transform(\n      t.Union(\n        [\n          t.String({\n            format: \"boolean\",\n            default: false\n          }),\n          t.Boolean(property)\n        ],\n        property\n      )\n    ).Decode((value) => {\n      if (typeof value === \"string\") return value === \"true\";\n      if (property && !Value.Check(schema, value))\n        throw new ValidationError(\"property\", schema, value);\n      return value;\n    }).Encode((value) => value);\n  },\n  ObjectString: (properties, options) => {\n    const schema = t.Object(properties, options);\n    const defaultValue = JSON.stringify(Value.Create(schema));\n    let compiler;\n    try {\n      compiler = TypeCompiler.Compile(schema);\n    } catch {\n    }\n    return t.Transform(\n      t.Union([\n        t.String({\n          format: \"ObjectString\",\n          default: defaultValue\n        }),\n        schema\n      ])\n    ).Decode((value) => {\n      if (typeof value === \"string\") {\n        if (value.charCodeAt(0) !== 123)\n          throw new ValidationError(\"property\", schema, value);\n        try {\n          value = JSON.parse(value);\n        } catch {\n          throw new ValidationError(\"property\", schema, value);\n        }\n        if (compiler) {\n          if (!compiler.Check(value))\n            throw new ValidationError(\"property\", schema, value);\n          return compiler.Decode(value);\n        }\n        if (!Value.Check(schema, value))\n          throw new ValidationError(\"property\", schema, value);\n        return Value.Decode(schema, value);\n      }\n      return value;\n    }).Encode((value) => {\n      if (typeof value === \"string\")\n        try {\n          value = JSON.parse(value);\n        } catch {\n          throw new ValidationError(\"property\", schema, value);\n        }\n      if (!Value.Check(schema, value))\n        throw new ValidationError(\"property\", schema, value);\n      return JSON.stringify(value);\n    });\n  },\n  ArrayString: (children = {}, options) => {\n    const schema = t.Array(children, options);\n    const defaultValue = JSON.stringify(Value.Create(schema));\n    let compiler;\n    try {\n      compiler = TypeCompiler.Compile(schema);\n    } catch {\n    }\n    return t.Transform(\n      t.Union([\n        t.String({\n          format: \"ArrayString\",\n          default: defaultValue\n        }),\n        schema\n      ])\n    ).Decode((value) => {\n      if (typeof value === \"string\") {\n        if (value.charCodeAt(0) !== 91)\n          throw new ValidationError(\"property\", schema, value);\n        try {\n          value = JSON.parse(value);\n        } catch {\n          throw new ValidationError(\"property\", schema, value);\n        }\n        if (compiler) {\n          if (!compiler.Check(value))\n            throw new ValidationError(\"property\", schema, value);\n          return compiler.Decode(value);\n        }\n        if (!Value.Check(schema, value))\n          throw new ValidationError(\"property\", schema, value);\n        return Value.Decode(schema, value);\n      }\n      return value;\n    }).Encode((value) => {\n      if (typeof value === \"string\")\n        try {\n          value = JSON.parse(value);\n        } catch {\n          throw new ValidationError(\"property\", schema, value);\n        }\n      if (!Value.Check(schema, value))\n        throw new ValidationError(\"property\", schema, value);\n      return JSON.stringify(value);\n    });\n  },\n  File: File2,\n  Files: (options = {}) => t.Transform(Files(options)).Decode((value) => {\n    if (Array.isArray(value)) return value;\n    return [value];\n  }).Encode((value) => value),\n  Nullable: (schema) => t.Union([schema, t.Null()]),\n  /**\n   * Allow Optional, Nullable and Undefined\n   */\n  MaybeEmpty: (schema) => t.Union([schema, t.Null(), t.Undefined()]),\n  Cookie: (properties, {\n    domain,\n    expires,\n    httpOnly,\n    maxAge,\n    path,\n    priority,\n    sameSite,\n    secure,\n    secrets,\n    sign,\n    ...options\n  } = {}) => {\n    const v = t.Object(properties, options);\n    v.config = {\n      domain,\n      expires,\n      httpOnly,\n      maxAge,\n      path,\n      priority,\n      sameSite,\n      secure,\n      secrets,\n      sign\n    };\n    return v;\n  }\n};\nt.BooleanString = ElysiaType.BooleanString;\nt.ObjectString = ElysiaType.ObjectString;\nt.ArrayString = ElysiaType.ArrayString;\nt.Numeric = ElysiaType.Numeric;\nt.File = (arg = {}) => ElysiaType.File({\n  default: \"File\",\n  ...arg,\n  extension: arg?.type,\n  type: \"string\",\n  format: \"binary\"\n});\nt.Files = (arg = {}) => ElysiaType.Files({\n  ...arg,\n  elysiaMeta: \"Files\",\n  default: \"Files\",\n  extension: arg?.type,\n  type: \"array\",\n  items: {\n    ...arg,\n    default: \"Files\",\n    type: \"string\",\n    format: \"binary\"\n  }\n});\nt.Nullable = (schema) => ElysiaType.Nullable(schema);\nt.MaybeEmpty = ElysiaType.MaybeEmpty;\nt.Cookie = ElysiaType.Cookie;\nt.Date = ElysiaType.Date;\n\n// src/handler.ts\nimport { serialize } from \"cookie\";\n\n// src/cookies.ts\nimport { parse } from \"cookie\";\nimport decodeURIComponent from \"fast-decode-uri-component\";\nvar Cookie = class {\n  constructor(name, jar, initial = {}) {\n    this.name = name;\n    this.jar = jar;\n    this.initial = initial;\n  }\n  get cookie() {\n    if (!(this.name in this.jar)) return this.initial;\n    return this.jar[this.name];\n  }\n  set cookie(jar) {\n    if (!(this.name in this.jar)) this.jar[this.name] = this.initial;\n    this.jar[this.name] = jar;\n  }\n  get value() {\n    return this.cookie.value;\n  }\n  set value(value) {\n    if (!(this.name in this.jar)) this.jar[this.name] = this.initial;\n    this.jar[this.name].value = value;\n  }\n  get expires() {\n    return this.cookie.expires;\n  }\n  set expires(expires) {\n    this.cookie.expires = expires;\n  }\n  get maxAge() {\n    return this.cookie.maxAge;\n  }\n  set maxAge(maxAge) {\n    this.cookie.maxAge = maxAge;\n  }\n  get domain() {\n    return this.cookie.domain;\n  }\n  set domain(domain) {\n    this.cookie.domain = domain;\n  }\n  get path() {\n    return this.cookie.path;\n  }\n  set path(path) {\n    this.cookie.path = path;\n  }\n  get secure() {\n    return this.cookie.secure;\n  }\n  set secure(secure) {\n    this.cookie.secure = secure;\n  }\n  get httpOnly() {\n    return this.cookie.httpOnly;\n  }\n  set httpOnly(httpOnly) {\n    this.cookie.httpOnly = httpOnly;\n  }\n  get sameSite() {\n    return this.cookie.sameSite;\n  }\n  set sameSite(sameSite) {\n    this.cookie.sameSite = sameSite;\n  }\n  get priority() {\n    return this.cookie.priority;\n  }\n  set priority(priority) {\n    this.cookie.priority = priority;\n  }\n  get partitioned() {\n    return this.cookie.partitioned;\n  }\n  set partitioned(partitioned) {\n    this.cookie.partitioned = partitioned;\n  }\n  get secrets() {\n    return this.cookie.secrets;\n  }\n  set secrets(secrets) {\n    this.cookie.secrets = secrets;\n  }\n  update(config) {\n    this.cookie = Object.assign(\n      this.cookie,\n      typeof config === \"function\" ? config(this.cookie) : config\n    );\n    return this;\n  }\n  set(config) {\n    this.cookie = Object.assign(\n      {\n        ...this.initial,\n        value: this.value\n      },\n      typeof config === \"function\" ? config(this.cookie) : config\n    );\n    return this;\n  }\n  remove() {\n    if (this.value === void 0) return;\n    this.set({\n      expires: /* @__PURE__ */ new Date(0),\n      maxAge: 0,\n      value: \"\"\n    });\n    return this;\n  }\n  toString() {\n    return typeof this.value === \"object\" ? JSON.stringify(this.value) : this.value?.toString() ?? \"\";\n  }\n};\nvar createCookieJar = (set, store, initial) => {\n  if (!set.cookie) set.cookie = {};\n  return new Proxy(store, {\n    get(_, key) {\n      if (key in store)\n        return new Cookie(\n          key,\n          set.cookie,\n          Object.assign({}, initial ?? {}, store[key])\n        );\n      return new Cookie(\n        key,\n        set.cookie,\n        Object.assign({}, initial)\n      );\n    }\n  });\n};\nvar parseCookie = async (set, cookieString, {\n  secrets,\n  sign,\n  ...initial\n} = {}) => {\n  if (!cookieString) return createCookieJar(set, {}, initial);\n  const isStringKey = typeof secrets === \"string\";\n  if (sign && sign !== true && !Array.isArray(sign)) sign = [sign];\n  const jar = {};\n  const cookies = parse(cookieString);\n  for (const [name, v] of Object.entries(cookies)) {\n    let value = decodeURIComponent(v);\n    if (sign === true || sign?.includes(name)) {\n      if (!secrets)\n        throw new Error(\"No secret is provided to cookie plugin\");\n      if (isStringKey) {\n        const temp = await unsignCookie(value, secrets);\n        if (temp === false) throw new InvalidCookieSignature(name);\n        value = temp;\n      } else {\n        let decoded = true;\n        for (let i = 0; i < secrets.length; i++) {\n          const temp = await unsignCookie(value, secrets[i]);\n          if (temp !== false) {\n            decoded = true;\n            value = temp;\n            break;\n          }\n        }\n        if (!decoded) throw new InvalidCookieSignature(name);\n      }\n    }\n    jar[name] = {\n      value\n    };\n  }\n  return createCookieJar(set, jar, initial);\n};\n\n// src/handler.ts\nvar hasHeaderShorthand = \"toJSON\" in new Headers();\nvar isNotEmpty = (obj) => {\n  if (!obj) return false;\n  for (const x in obj) return true;\n  return false;\n};\nvar handleFile = (response, set) => {\n  const size = response.size;\n  if (!set && size || size && set && set.status !== 206 && set.status !== 304 && set.status !== 412 && set.status !== 416) {\n    if (set) {\n      if (set.headers instanceof Headers) {\n        if (hasHeaderShorthand)\n          set.headers = set.headers.toJSON();\n        else\n          for (const [key, value] of set.headers.entries())\n            if (key in set.headers) set.headers[key] = value;\n      }\n      return new Response(response, {\n        status: set.status,\n        headers: Object.assign(\n          {\n            \"accept-ranges\": \"bytes\",\n            \"content-range\": `bytes 0-${size - 1}/${size}`\n          },\n          set.headers\n        )\n      });\n    }\n    return new Response(response, {\n      headers: {\n        \"accept-ranges\": \"bytes\",\n        \"content-range\": `bytes 0-${size - 1}/${size}`\n      }\n    });\n  }\n  return new Response(response);\n};\nvar parseSetCookies = (headers, setCookie) => {\n  if (!headers) return headers;\n  headers.delete(\"set-cookie\");\n  for (let i = 0; i < setCookie.length; i++) {\n    const index = setCookie[i].indexOf(\"=\");\n    headers.append(\n      \"set-cookie\",\n      `${setCookie[i].slice(0, index)}=${setCookie[i].slice(index + 1) || \"\"}`\n    );\n  }\n  return headers;\n};\nvar serializeCookie = (cookies) => {\n  if (!cookies || !isNotEmpty(cookies)) return void 0;\n  const set = [];\n  for (const [key, property] of Object.entries(cookies)) {\n    if (!key || !property) continue;\n    const value = property.value;\n    if (value === void 0 || value === null) continue;\n    set.push(\n      serialize(\n        key,\n        typeof value === \"object\" ? JSON.stringify(value) : value + \"\",\n        property\n      )\n    );\n  }\n  if (set.length === 0) return void 0;\n  if (set.length === 1) return set[0];\n  return set;\n};\nvar handleStream = async (generator, set, request) => {\n  let init = generator.next();\n  if (init instanceof Promise) init = await init;\n  if (init.done) {\n    if (set) return mapResponse(init.value, set, request);\n    return mapCompactResponse(init.value, request);\n  }\n  return new Response(\n    new ReadableStream({\n      async start(controller) {\n        let end = false;\n        request?.signal.addEventListener(\"abort\", () => {\n          end = true;\n          try {\n            controller.close();\n          } catch {\n          }\n        });\n        if (init.value !== void 0 && init.value !== null) {\n          if (typeof init.value === \"object\")\n            try {\n              controller.enqueue(\n                Buffer.from(JSON.stringify(init.value))\n              );\n            } catch {\n              controller.enqueue(\n                Buffer.from(init.value.toString())\n              );\n            }\n          else controller.enqueue(Buffer.from(init.value.toString()));\n        }\n        for await (const chunk of generator) {\n          if (end) break;\n          if (chunk === void 0 || chunk === null) continue;\n          if (typeof chunk === \"object\")\n            try {\n              controller.enqueue(\n                Buffer.from(JSON.stringify(chunk))\n              );\n            } catch {\n              controller.enqueue(Buffer.from(chunk.toString()));\n            }\n          else controller.enqueue(Buffer.from(chunk.toString()));\n          await new Promise(\n            (resolve) => setTimeout(() => resolve(), 0)\n          );\n        }\n        try {\n          controller.close();\n        } catch {\n        }\n      }\n    }),\n    {\n      ...set,\n      headers: {\n        // Manually set transfer-encoding for direct response, eg. app.handle, eden\n        \"transfer-encoding\": \"chunked\",\n        \"content-type\": \"text/event-stream; charset=utf-8\",\n        ...set?.headers\n      }\n    }\n  );\n};\nasync function* streamResponse(response) {\n  const body = response.body;\n  if (!body) return;\n  const reader = body.getReader();\n  const decoder = new TextDecoder();\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) break;\n      yield decoder.decode(value);\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\nvar mapResponse = (response, set, request) => {\n  if (isNotEmpty(set.headers) || set.status !== 200 || set.redirect || set.cookie) {\n    if (typeof set.status === \"string\") set.status = StatusMap[set.status];\n    if (set.redirect) {\n      set.headers.Location = set.redirect;\n      if (!set.status || set.status < 300 || set.status >= 400)\n        set.status = 302;\n    }\n    if (set.cookie && isNotEmpty(set.cookie)) {\n      const cookie = serializeCookie(set.cookie);\n      if (cookie) set.headers[\"set-cookie\"] = cookie;\n    }\n    if (set.headers[\"set-cookie\"] && Array.isArray(set.headers[\"set-cookie\"])) {\n      set.headers = parseSetCookies(\n        new Headers(set.headers),\n        set.headers[\"set-cookie\"]\n      );\n    }\n    switch (response?.constructor?.name) {\n      case \"String\":\n        return new Response(response, set);\n      case \"Blob\":\n        return handleFile(response, set);\n      case \"Array\":\n        return Response.json(response, set);\n      case \"Object\":\n        const status = response[ELYSIA_RESPONSE];\n        if (status) {\n          set.status = status;\n          return mapResponse(response.response, set, request);\n        }\n        for (const value in Object.values(response)) {\n          switch (value?.constructor?.name) {\n            case \"Blob\":\n            case \"File\":\n            case \"ArrayBuffer\":\n            case \"FileRef\":\n              return new Response(form(response));\n            default:\n              break;\n          }\n        }\n        return Response.json(response, set);\n      case \"ReadableStream\":\n        if (!set.headers[\"content-type\"]?.startsWith(\n          \"text/event-stream\"\n        ))\n          set.headers[\"content-type\"] = \"text/event-stream; charset=utf-8\";\n        request?.signal.addEventListener(\n          \"abort\",\n          {\n            handleEvent() {\n              if (!request?.signal.aborted)\n                response.cancel(request);\n            }\n          },\n          {\n            once: true\n          }\n        );\n        return new Response(\n          response,\n          set\n        );\n      case void 0:\n        if (!response) return new Response(\"\", set);\n        return Response.json(response, set);\n      case \"Response\":\n        let isCookieSet = false;\n        if (set.headers instanceof Headers)\n          for (const key of set.headers.keys()) {\n            if (key === \"set-cookie\") {\n              if (isCookieSet) continue;\n              isCookieSet = true;\n              for (const cookie of set.headers.getSetCookie()) {\n                ;\n                response.headers.append(\n                  \"set-cookie\",\n                  cookie\n                );\n              }\n            } else\n              response.headers.append(\n                key,\n                set.headers?.get(key) ?? \"\"\n              );\n          }\n        else\n          for (const key in set.headers)\n            response.headers.append(\n              key,\n              set.headers[key]\n            );\n        if (response.status !== set.status)\n          set.status = response.status;\n        if (response.headers.get(\"transfer-encoding\") === \"chunked\")\n          return handleStream(\n            streamResponse(response),\n            set,\n            request\n          );\n        return response;\n      case \"Error\":\n        return errorToResponse(response, set);\n      case \"Promise\":\n        return response.then(\n          (x) => mapResponse(x, set)\n        );\n      case \"Function\":\n        return mapResponse(response(), set);\n      case \"Number\":\n      case \"Boolean\":\n        return new Response(\n          response.toString(),\n          set\n        );\n      case \"Cookie\":\n        if (response instanceof Cookie)\n          return new Response(response.value, set);\n        return new Response(response?.toString(), set);\n      case \"FormData\":\n        return new Response(response, set);\n      default:\n        if (response instanceof Response) {\n          let isCookieSet2 = false;\n          if (set.headers instanceof Headers)\n            for (const key of set.headers.keys()) {\n              if (key === \"set-cookie\") {\n                if (isCookieSet2) continue;\n                isCookieSet2 = true;\n                for (const cookie of set.headers.getSetCookie()) {\n                  ;\n                  response.headers.append(\n                    \"set-cookie\",\n                    cookie\n                  );\n                }\n              } else\n                response.headers.append(\n                  key,\n                  set.headers?.get(key) ?? \"\"\n                );\n            }\n          else\n            for (const key in set.headers)\n              response.headers.append(\n                key,\n                set.headers[key]\n              );\n          if (hasHeaderShorthand)\n            set.headers = response.headers.toJSON();\n          else\n            for (const [key, value] of response.headers.entries())\n              if (key in set.headers) set.headers[key] = value;\n          return response;\n        }\n        if (response instanceof Promise)\n          return response.then((x) => mapResponse(x, set));\n        if (response instanceof Error)\n          return errorToResponse(response, set);\n        if (typeof response?.next === \"function\")\n          return handleStream(response, set, request);\n        if (\"toResponse\" in response)\n          return mapResponse(response.toResponse(), set);\n        if (\"charCodeAt\" in response) {\n          const code = response.charCodeAt(0);\n          if (code === 123 || code === 91) {\n            if (!set.headers[\"Content-Type\"])\n              set.headers[\"Content-Type\"] = \"application/json\";\n            return new Response(\n              JSON.stringify(response),\n              set\n            );\n          }\n        }\n        return new Response(response, set);\n    }\n  } else\n    switch (response?.constructor?.name) {\n      case \"String\":\n        return new Response(response);\n      case \"Blob\":\n        return handleFile(response, set);\n      case \"Array\":\n        return Response.json(response);\n      case \"Object\":\n        const status = response[ELYSIA_RESPONSE];\n        if (status) {\n          set.status = status;\n          return mapResponse(response.response, set, request);\n        }\n        for (const value in Object.values(response)) {\n          switch (value?.constructor?.name) {\n            case \"Blob\":\n            case \"File\":\n            case \"ArrayBuffer\":\n            case \"FileRef\":\n              return new Response(\n                form(response),\n                set\n              );\n            default:\n              break;\n          }\n        }\n        return Response.json(response, set);\n      case \"ReadableStream\":\n        request?.signal.addEventListener(\n          \"abort\",\n          {\n            handleEvent() {\n              if (!request?.signal.aborted)\n                response.cancel(request);\n            }\n          },\n          {\n            once: true\n          }\n        );\n        return new Response(response, {\n          headers: {\n            \"Content-Type\": \"text/event-stream; charset=utf-8\"\n          }\n        });\n      case void 0:\n        if (!response) return new Response(\"\");\n        return new Response(JSON.stringify(response), {\n          headers: {\n            \"content-type\": \"application/json\"\n          }\n        });\n      case \"Response\":\n        if (response.headers.get(\"transfer-encoding\") === \"chunked\")\n          return handleStream(\n            streamResponse(response),\n            set,\n            request\n          );\n        return response;\n      case \"Error\":\n        return errorToResponse(response, set);\n      case \"Promise\":\n        return response.then((x) => {\n          const r = mapCompactResponse(x, request);\n          if (r !== void 0) return r;\n          return new Response(\"\");\n        });\n      case \"Function\":\n        return mapCompactResponse(response(), request);\n      case \"Number\":\n      case \"Boolean\":\n        return new Response(response.toString());\n      case \"Cookie\":\n        if (response instanceof Cookie)\n          return new Response(response.value, set);\n        return new Response(response?.toString(), set);\n      case \"FormData\":\n        return new Response(response, set);\n      default:\n        if (response instanceof Response)\n          return new Response(response.body, {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n        if (response instanceof Promise)\n          return response.then((x) => mapResponse(x, set));\n        if (response instanceof Error)\n          return errorToResponse(response, set);\n        if (typeof response?.next === \"function\")\n          return handleStream(response, set, request);\n        if (\"toResponse\" in response)\n          return mapResponse(response.toResponse(), set);\n        if (\"charCodeAt\" in response) {\n          const code = response.charCodeAt(0);\n          if (code === 123 || code === 91) {\n            if (!set.headers[\"Content-Type\"])\n              set.headers[\"Content-Type\"] = \"application/json\";\n            return new Response(\n              JSON.stringify(response),\n              set\n            );\n          }\n        }\n        return new Response(response);\n    }\n};\nvar mapEarlyResponse = (response, set, request) => {\n  if (response === void 0 || response === null) return;\n  if (isNotEmpty(set.headers) || set.status !== 200 || set.redirect || set.cookie) {\n    if (typeof set.status === \"string\") set.status = StatusMap[set.status];\n    if (set.redirect) {\n      set.headers.Location = set.redirect;\n      if (!set.status || set.status < 300 || set.status >= 400)\n        set.status = 302;\n    }\n    if (set.cookie && isNotEmpty(set.cookie)) {\n      const cookie = serializeCookie(set.cookie);\n      if (cookie) set.headers[\"set-cookie\"] = cookie;\n    }\n    if (set.headers[\"set-cookie\"] && Array.isArray(set.headers[\"set-cookie\"]))\n      set.headers = parseSetCookies(\n        new Headers(set.headers),\n        set.headers[\"set-cookie\"]\n      );\n    switch (response?.constructor?.name) {\n      case \"String\":\n        return new Response(response, set);\n      case \"Blob\":\n        return handleFile(response, set);\n      case \"Array\":\n        return Response.json(response, set);\n      case \"Object\":\n        const status = response[ELYSIA_RESPONSE];\n        if (status) {\n          set.status = status;\n          return mapEarlyResponse(response.response, set, request);\n        }\n        for (const value in Object.values(response)) {\n          switch (value?.constructor?.name) {\n            case \"Blob\":\n            case \"File\":\n            case \"ArrayBuffer\":\n            case \"FileRef\":\n              return new Response(\n                form(response),\n                set\n              );\n            default:\n              break;\n          }\n        }\n        return Response.json(response, set);\n      case \"ReadableStream\":\n        if (!set.headers[\"content-type\"]?.startsWith(\n          \"text/event-stream\"\n        ))\n          set.headers[\"content-type\"] = \"text/event-stream; charset=utf-8\";\n        request?.signal.addEventListener(\n          \"abort\",\n          {\n            handleEvent() {\n              if (!request?.signal.aborted)\n                response.cancel(request);\n            }\n          },\n          {\n            once: true\n          }\n        );\n        return new Response(\n          response,\n          set\n        );\n      case void 0:\n        if (!response) return;\n        return Response.json(response, set);\n      case \"Response\":\n        let isCookieSet = false;\n        if (set.headers instanceof Headers)\n          for (const key of set.headers.keys()) {\n            if (key === \"set-cookie\") {\n              if (isCookieSet) continue;\n              isCookieSet = true;\n              for (const cookie of set.headers.getSetCookie()) {\n                ;\n                response.headers.append(\n                  \"set-cookie\",\n                  cookie\n                );\n              }\n            } else\n              response.headers.append(\n                key,\n                set.headers?.get(key) ?? \"\"\n              );\n          }\n        else\n          for (const key in set.headers)\n            response.headers.append(\n              key,\n              set.headers[key]\n            );\n        if (response.status !== set.status)\n          set.status = response.status;\n        if (response.headers.get(\"transfer-encoding\") === \"chunked\")\n          return handleStream(\n            streamResponse(response),\n            set,\n            request\n          );\n        return response;\n      case \"Promise\":\n        return response.then((x) => {\n          const r = mapEarlyResponse(x, set);\n          if (r !== void 0) return r;\n        });\n      case \"Error\":\n        return errorToResponse(response, set);\n      case \"Function\":\n        return mapEarlyResponse(response(), set);\n      case \"Number\":\n      case \"Boolean\":\n        return new Response(\n          response.toString(),\n          set\n        );\n      case \"FormData\":\n        return new Response(response);\n      case \"Cookie\":\n        if (response instanceof Cookie)\n          return new Response(response.value, set);\n        return new Response(response?.toString(), set);\n      default:\n        if (response instanceof Response) {\n          let isCookieSet2 = false;\n          if (set.headers instanceof Headers)\n            for (const key of set.headers.keys()) {\n              if (key === \"set-cookie\") {\n                if (isCookieSet2) continue;\n                isCookieSet2 = true;\n                for (const cookie of set.headers.getSetCookie()) {\n                  ;\n                  response.headers.append(\n                    \"set-cookie\",\n                    cookie\n                  );\n                }\n              } else\n                response.headers.append(\n                  key,\n                  set.headers?.get(key) ?? \"\"\n                );\n            }\n          else\n            for (const key in set.headers)\n              response.headers.append(\n                key,\n                set.headers[key]\n              );\n          if (response.status !== set.status)\n            set.status = response.status;\n          return response;\n        }\n        if (response instanceof Promise)\n          return response.then((x) => mapEarlyResponse(x, set));\n        if (response instanceof Error)\n          return errorToResponse(response, set);\n        if (typeof response?.next === \"function\")\n          return handleStream(response, set, request);\n        if (\"toResponse\" in response)\n          return mapEarlyResponse(response.toResponse(), set);\n        if (\"charCodeAt\" in response) {\n          const code = response.charCodeAt(0);\n          if (code === 123 || code === 91) {\n            if (!set.headers[\"Content-Type\"])\n              set.headers[\"Content-Type\"] = \"application/json\";\n            return new Response(\n              JSON.stringify(response),\n              set\n            );\n          }\n        }\n        return new Response(response, set);\n    }\n  } else\n    switch (response?.constructor?.name) {\n      case \"String\":\n        return new Response(response);\n      case \"Blob\":\n        return handleFile(response, set);\n      case \"Array\":\n        return Response.json(response);\n      case \"Object\":\n        const status = response[ELYSIA_RESPONSE];\n        if (status) {\n          set.status = status;\n          return mapEarlyResponse(response.response, set, request);\n        }\n        for (const value in Object.values(response)) {\n          switch (value?.constructor?.name) {\n            case \"Blob\":\n            case \"File\":\n            case \"ArrayBuffer\":\n            case \"FileRef\":\n              return new Response(\n                form(response),\n                set\n              );\n            default:\n              break;\n          }\n        }\n        return Response.json(response, set);\n      case \"ReadableStream\":\n        request?.signal.addEventListener(\n          \"abort\",\n          {\n            handleEvent() {\n              if (!request?.signal.aborted)\n                response.cancel(request);\n            }\n          },\n          {\n            once: true\n          }\n        );\n        return new Response(response, {\n          headers: {\n            \"Content-Type\": \"text/event-stream; charset=utf-8\"\n          }\n        });\n      case void 0:\n        if (!response) return new Response(\"\");\n        return new Response(JSON.stringify(response), {\n          headers: {\n            \"content-type\": \"application/json\"\n          }\n        });\n      case \"Response\":\n        if (response.headers.get(\"transfer-encoding\") === \"chunked\")\n          return handleStream(\n            streamResponse(response)\n          );\n        return response;\n      case \"Promise\":\n        return response.then((x) => {\n          const r = mapEarlyResponse(x, set);\n          if (r !== void 0) return r;\n        });\n      case \"Error\":\n        return errorToResponse(response, set);\n      case \"Function\":\n        return mapCompactResponse(response(), request);\n      case \"Number\":\n      case \"Boolean\":\n        return new Response(response.toString());\n      case \"Cookie\":\n        if (response instanceof Cookie)\n          return new Response(response.value, set);\n        return new Response(response?.toString(), set);\n      case \"FormData\":\n        return new Response(response);\n      default:\n        if (response instanceof Response)\n          return new Response(response.body, {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n        if (response instanceof Promise)\n          return response.then((x) => mapEarlyResponse(x, set));\n        if (response instanceof Error)\n          return errorToResponse(response, set);\n        if (typeof response?.next === \"function\")\n          return handleStream(response, set, request);\n        if (\"toResponse\" in response)\n          return mapEarlyResponse(response.toResponse(), set);\n        if (\"charCodeAt\" in response) {\n          const code = response.charCodeAt(0);\n          if (code === 123 || code === 91) {\n            if (!set.headers[\"Content-Type\"])\n              set.headers[\"Content-Type\"] = \"application/json\";\n            return new Response(\n              JSON.stringify(response),\n              set\n            );\n          }\n        }\n        return new Response(response);\n    }\n};\nvar mapCompactResponse = (response, request) => {\n  switch (response?.constructor?.name) {\n    case \"String\":\n      return new Response(response);\n    case \"Blob\":\n      return handleFile(response);\n    case \"Array\":\n      return Response.json(response);\n    case \"Object\":\n      if (response[ELYSIA_RESPONSE])\n        return mapResponse(response.response, {\n          // @ts-ignore\n          status: response[ELYSIA_RESPONSE],\n          headers: {}\n        });\n      form: for (const value of Object.values(response))\n        switch (value?.constructor?.name) {\n          case \"Blob\":\n          case \"File\":\n          case \"ArrayBuffer\":\n          case \"FileRef\":\n            return new Response(form(response));\n          case \"Object\":\n            break form;\n          default:\n            break;\n        }\n      return Response.json(response);\n    case \"ReadableStream\":\n      request?.signal.addEventListener(\n        \"abort\",\n        {\n          handleEvent() {\n            if (!request?.signal.aborted)\n              response.cancel(request);\n          }\n        },\n        {\n          once: true\n        }\n      );\n      return new Response(response, {\n        headers: {\n          \"Content-Type\": \"text/event-stream; charset=utf-8\"\n        }\n      });\n    case void 0:\n      if (!response) return new Response(\"\");\n      return new Response(JSON.stringify(response), {\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      });\n    case \"Response\":\n      if (response.headers.get(\"transfer-encoding\") === \"chunked\")\n        return handleStream(streamResponse(response));\n      return response;\n    case \"Error\":\n      return errorToResponse(response);\n    case \"Promise\":\n      return response.then(\n        (x) => mapCompactResponse(x, request)\n      );\n    case \"Function\":\n      return mapCompactResponse(response(), request);\n    case \"Number\":\n    case \"Boolean\":\n      return new Response(response.toString());\n    case \"FormData\":\n      return new Response(response);\n    default:\n      if (response instanceof Response)\n        return new Response(response.body, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n      if (response instanceof Promise)\n        return response.then(\n          (x) => mapCompactResponse(x, request)\n        );\n      if (response instanceof Error)\n        return errorToResponse(response);\n      if (typeof response?.next === \"function\")\n        return handleStream(response, void 0, request);\n      if (\"toResponse\" in response)\n        return mapCompactResponse(response.toResponse());\n      if (\"charCodeAt\" in response) {\n        const code = response.charCodeAt(0);\n        if (code === 123 || code === 91) {\n          return new Response(JSON.stringify(response), {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n        }\n      }\n      return new Response(response);\n  }\n};\nvar errorToResponse = (error2, set) => new Response(\n  JSON.stringify({\n    name: error2?.name,\n    message: error2?.message,\n    cause: error2?.cause\n  }),\n  {\n    status: set?.status !== 200 ? set?.status ?? 500 : 500,\n    headers: set?.headers\n  }\n);\n\n// src/utils.ts\nvar replaceUrlPath = (url, pathname) => {\n  const urlObject = new URL(url);\n  urlObject.pathname = pathname;\n  return urlObject.toString();\n};\nvar isClass = (v) => typeof v === \"function\" && /^\\s*class\\s+/.test(v.toString()) || // Handle import * as Sentry from '@sentry/bun'\n// This also handle [object Date], [object Array]\n// and FFI value like [object Prisma]\nv.toString().startsWith(\"[object \") && v.toString() !== \"[object Object]\" || // If object prototype is not pure, then probably a class-like object\nisNotEmpty(Object.getPrototypeOf(v));\nvar isObject = (item) => item && typeof item === \"object\" && !Array.isArray(item);\nvar mergeDeep = (target, source, {\n  skipKeys,\n  override = true\n} = {}) => {\n  if (!isObject(target) || !isObject(source)) return target;\n  for (const [key, value] of Object.entries(source)) {\n    if (skipKeys?.includes(key)) continue;\n    if (!isObject(value) || !(key in target) || isClass(value)) {\n      if (override || !(key in target))\n        target[key] = value;\n      continue;\n    }\n    target[key] = mergeDeep(\n      target[key],\n      value,\n      { skipKeys, override }\n    );\n  }\n  return target;\n};\nvar mergeCookie = (a, b) => {\n  const { properties: _, ...target } = a ?? {};\n  const { properties: __, ...source } = b ?? {};\n  return mergeDeep(target, source);\n};\nvar mergeObjectArray = (a = [], b = []) => {\n  if (!a) return [];\n  if (!b) return a;\n  const array = [];\n  const checksums = [];\n  if (!Array.isArray(a)) a = [a];\n  if (!Array.isArray(b)) b = [b];\n  for (const item of a) {\n    array.push(item);\n    if (item.checksum) checksums.push(item.checksum);\n  }\n  for (const item of b)\n    if (!checksums.includes(item.checksum)) array.push(item);\n  return array;\n};\nvar primitiveHooks = [\n  \"start\",\n  \"request\",\n  \"parse\",\n  \"transform\",\n  \"resolve\",\n  \"beforeHandle\",\n  \"afterHandle\",\n  \"mapResponse\",\n  \"afterResponse\",\n  \"trace\",\n  \"error\",\n  \"stop\",\n  \"body\",\n  \"headers\",\n  \"params\",\n  \"query\",\n  \"response\",\n  \"type\",\n  \"detail\"\n];\nvar primitiveHookMap = primitiveHooks.reduce(\n  (acc, x) => (acc[x] = true, acc),\n  {}\n);\nvar mergeResponse = (a, b) => {\n  const isRecordNumber = (x) => typeof x === \"object\" && Object.keys(x).every(isNumericString);\n  if (isRecordNumber(a) && isRecordNumber(b))\n    return { ...a, ...b };\n  return b ?? a;\n};\nvar mergeSchemaValidator = (a, b) => {\n  return {\n    body: b?.body ?? a?.body,\n    headers: b?.headers ?? a?.headers,\n    params: b?.params ?? a?.params,\n    query: b?.query ?? a?.query,\n    cookie: b?.cookie ?? a?.cookie,\n    // @ts-ignore ? This order is correct - SaltyAom\n    response: mergeResponse(\n      // @ts-ignore\n      a?.response,\n      // @ts-ignore\n      b?.response\n    )\n  };\n};\nvar mergeHook = (a, b) => {\n  return {\n    ...a,\n    ...b,\n    // Merge local hook first\n    // @ts-ignore\n    body: b?.body ?? a?.body,\n    // @ts-ignore\n    headers: b?.headers ?? a?.headers,\n    // @ts-ignore\n    params: b?.params ?? a?.params,\n    // @ts-ignore\n    query: b?.query ?? a?.query,\n    // @ts-ignore\n    cookie: b?.cookie ?? a?.cookie,\n    // ? This order is correct - SaltyAom\n    response: mergeResponse(\n      // @ts-ignore\n      a?.response,\n      // @ts-ignore\n      b?.response\n    ),\n    type: a?.type || b?.type,\n    detail: mergeDeep(\n      // @ts-ignore\n      b?.detail ?? {},\n      // @ts-ignore\n      a?.detail ?? {}\n    ),\n    parse: mergeObjectArray(a?.parse, b?.parse),\n    transform: mergeObjectArray(a?.transform, b?.transform),\n    beforeHandle: mergeObjectArray(a?.beforeHandle, b?.beforeHandle),\n    afterHandle: mergeObjectArray(a?.afterHandle, b?.afterHandle),\n    mapResponse: mergeObjectArray(a?.mapResponse, b?.mapResponse),\n    afterResponse: mergeObjectArray(\n      a?.afterResponse,\n      b?.afterResponse\n    ),\n    trace: mergeObjectArray(a?.trace, b?.trace),\n    error: mergeObjectArray(a?.error, b?.error)\n  };\n};\nvar replaceSchemaType = (schema, options, root = true) => {\n  if (!Array.isArray(options))\n    return _replaceSchemaType(schema, options, root);\n  for (const option of options)\n    schema = _replaceSchemaType(schema, option, root);\n  return schema;\n};\nvar _replaceSchemaType = (schema, options, root = true) => {\n  if (!schema) return schema;\n  if (options.untilObjectFound && !root && schema.type === \"object\")\n    return schema;\n  const fromSymbol = options.from[Kind];\n  if (schema.oneOf) {\n    for (let i = 0; i < schema.oneOf.length; i++)\n      schema.oneOf[i] = _replaceSchemaType(schema.oneOf[i], options, root);\n    return schema;\n  }\n  if (schema.anyOf) {\n    for (let i = 0; i < schema.anyOf.length; i++)\n      schema.anyOf[i] = _replaceSchemaType(schema.anyOf[i], options, root);\n    return schema;\n  }\n  if (schema.allOf) {\n    for (let i = 0; i < schema.allOf.length; i++)\n      schema.allOf[i] = _replaceSchemaType(schema.allOf[i], options, root);\n    return schema;\n  }\n  if (schema.not) {\n    for (let i = 0; i < schema.not.length; i++)\n      schema.not[i] = _replaceSchemaType(schema.not[i], options, root);\n    return schema;\n  }\n  const isRoot = root && !!options.excludeRoot;\n  if (schema[Kind] === fromSymbol) {\n    const { anyOf, oneOf, allOf, not, properties: properties2, items, ...rest } = schema;\n    const to = options.to();\n    let transform;\n    const composeProperties = (v) => {\n      if (properties2 && v.type === \"object\") {\n        const newProperties = {};\n        for (const [key, value2] of Object.entries(properties2))\n          newProperties[key] = _replaceSchemaType(\n            value2,\n            options,\n            false\n          );\n        return {\n          ...rest,\n          ...v,\n          properties: newProperties\n        };\n      }\n      if (items && v.type === \"array\")\n        return {\n          ...rest,\n          ...v,\n          items: _replaceSchemaType(items, options, false)\n        };\n      const value = {\n        ...rest,\n        ...v\n      };\n      delete value[\"required\"];\n      if (properties2 && v.type === \"string\" && v.format === \"ObjectString\" && v.default === \"{}\") {\n        transform = t.ObjectString(properties2, rest);\n        value.default = JSON.stringify(\n          Value2.Create(t.Object(properties2))\n        );\n        value.properties = properties2;\n      }\n      if (items && v.type === \"string\" && v.format === \"ArrayString\" && v.default === \"[]\") {\n        transform = t.ArrayString(items, rest);\n        value.default = JSON.stringify(Value2.Create(t.Array(items)));\n        value.items = items;\n      }\n      return value;\n    };\n    if (isRoot) {\n      if (properties2) {\n        const newProperties = {};\n        for (const [key, value] of Object.entries(properties2))\n          newProperties[key] = _replaceSchemaType(\n            value,\n            options,\n            false\n          );\n        return {\n          ...rest,\n          properties: newProperties\n        };\n      } else if (items?.map)\n        return {\n          ...rest,\n          items: items.map(\n            (v) => _replaceSchemaType(v, options, false)\n          )\n        };\n      return rest;\n    }\n    if (to.anyOf)\n      for (let i = 0; i < to.anyOf.length; i++)\n        to.anyOf[i] = composeProperties(to.anyOf[i]);\n    else if (to.oneOf)\n      for (let i = 0; i < to.oneOf.length; i++)\n        to.oneOf[i] = composeProperties(to.oneOf[i]);\n    else if (to.allOf)\n      for (let i = 0; i < to.allOf.length; i++)\n        to.allOf[i] = composeProperties(to.allOf[i]);\n    else if (to.not)\n      for (let i = 0; i < to.not.length; i++)\n        to.not[i] = composeProperties(to.not[i]);\n    if (transform) to[TransformKind] = transform[TransformKind];\n    if (to.anyOf || to.oneOf || to.allOf || to.not) return to;\n    if (properties2) {\n      const newProperties = {};\n      for (const [key, value] of Object.entries(properties2))\n        newProperties[key] = _replaceSchemaType(\n          value,\n          options,\n          false\n        );\n      return {\n        ...rest,\n        ...to,\n        properties: newProperties\n      };\n    } else if (items?.map)\n      return {\n        ...rest,\n        ...to,\n        items: items.map(\n          (v) => _replaceSchemaType(v, options, false)\n        )\n      };\n    return {\n      ...rest,\n      ...to\n    };\n  }\n  const properties = schema?.properties;\n  if (properties)\n    for (const [key, value] of Object.entries(properties)) {\n      switch (value[Kind]) {\n        case fromSymbol:\n          const { anyOf, oneOf, allOf, not, type, ...rest } = value;\n          const to = options.to();\n          if (to.anyOf)\n            for (let i = 0; i < to.anyOf.length; i++)\n              to.anyOf[i] = { ...rest, ...to.anyOf[i] };\n          else if (to.oneOf)\n            for (let i = 0; i < to.oneOf.length; i++)\n              to.oneOf[i] = { ...rest, ...to.oneOf[i] };\n          else if (to.allOf)\n            for (let i = 0; i < to.allOf.length; i++)\n              to.allOf[i] = { ...rest, ...to.allOf[i] };\n          else if (to.not)\n            for (let i = 0; i < to.not.length; i++)\n              to.not[i] = { ...rest, ...to.not[i] };\n          properties[key] = {\n            ...rest,\n            ..._replaceSchemaType(rest, options, false)\n          };\n          break;\n        case \"Object\":\n        case \"Union\":\n          properties[key] = _replaceSchemaType(value, options, false);\n          break;\n        default:\n          if (value.items)\n            for (let i = 0; i < value.items.length; i++) {\n              value.items[i] = _replaceSchemaType(\n                value.items[i],\n                options,\n                false\n              );\n            }\n          else if (value.anyOf || value.oneOf || value.allOf || value.not)\n            properties[key] = _replaceSchemaType(\n              value,\n              options,\n              false\n            );\n          break;\n      }\n    }\n  return schema;\n};\nvar getSchemaValidator = (s, {\n  models = {},\n  dynamic = false,\n  normalize = false,\n  additionalProperties = false,\n  coerce = false,\n  additionalCoerce = []\n} = {}) => {\n  if (!s) return void 0;\n  if (typeof s === \"string\" && !(s in models)) return void 0;\n  let schema = typeof s === \"string\" ? models[s] : s;\n  if (coerce)\n    schema = replaceSchemaType(schema, [\n      {\n        from: t.Number(),\n        to: () => t.Numeric(),\n        untilObjectFound: true\n      },\n      {\n        from: t.Boolean(),\n        to: () => t.BooleanString(),\n        untilObjectFound: true\n      },\n      ...Array.isArray(additionalCoerce) ? additionalCoerce : [additionalCoerce]\n    ]);\n  if (schema.type === \"object\" && \"additionalProperties\" in schema === false)\n    schema.additionalProperties = additionalProperties;\n  const cleaner = (value) => Value2.Clean(schema, value);\n  if (dynamic) {\n    const validator = {\n      schema,\n      references: \"\",\n      checkFunc: () => {\n      },\n      code: \"\",\n      Check: (value) => Value2.Check(schema, value),\n      Errors: (value) => Value2.Errors(schema, value),\n      Code: () => \"\",\n      Clean: cleaner\n    };\n    if (normalize && schema.additionalProperties === false)\n      validator.Clean = cleaner;\n    if (schema.config) {\n      validator.config = schema.config;\n      if (validator?.schema?.config)\n        delete validator.schema.config;\n    }\n    validator.parse = (v) => {\n      try {\n        return validator.Decode(v);\n      } catch (error2) {\n        throw [...validator.Errors(v)].map(mapValueError);\n      }\n    };\n    validator.safeParse = (v) => {\n      try {\n        return { success: true, data: validator.Decode(v), error: null };\n      } catch (error2) {\n        const errors = [...compiled.Errors(v)].map(mapValueError);\n        return {\n          success: false,\n          data: null,\n          error: errors[0]?.summary,\n          errors\n        };\n      }\n    };\n    return validator;\n  }\n  const compiled = TypeCompiler3.Compile(schema, Object.values(models));\n  compiled.Clean = cleaner;\n  if (schema.config) {\n    compiled.config = schema.config;\n    if (compiled?.schema?.config)\n      delete compiled.schema.config;\n  }\n  compiled.parse = (v) => {\n    try {\n      return compiled.Decode(v);\n    } catch (error2) {\n      throw [...compiled.Errors(v)].map(mapValueError);\n    }\n  };\n  compiled.safeParse = (v) => {\n    try {\n      return { success: true, data: compiled.Decode(v), error: null };\n    } catch (error2) {\n      const errors = [...compiled.Errors(v)].map(mapValueError);\n      return {\n        success: false,\n        data: null,\n        error: errors[0]?.summary,\n        errors\n      };\n    }\n  };\n  return compiled;\n};\nvar getResponseSchemaValidator = (s, {\n  models = {},\n  dynamic = false,\n  normalize = false,\n  additionalProperties = false\n}) => {\n  if (!s) return;\n  if (typeof s === \"string\" && !(s in models)) return;\n  const maybeSchemaOrRecord = typeof s === \"string\" ? models[s] : s;\n  const compile = (schema, references) => {\n    const cleaner = (value) => {\n      if (!value || typeof value !== \"object\") {\n        return Value2.Clean(schema, value);\n      }\n      let touched = false;\n      const visited = /* @__PURE__ */ new Set();\n      const retrieveAllFieldsOfObjectOrArray = (value2) => {\n        if (visited.has(value2)) {\n          return value2;\n        }\n        visited.add(value2);\n        if (Array.isArray(value2)) {\n          return value2.map((x) => retrieveAllFieldsOfObjectOrArray(x));\n        }\n        const retrievedArrayFields = {};\n        for (const [key, val] of Object.entries(value2)) {\n          if (Array.isArray(val)) {\n            retrievedArrayFields[key] = retrieveAllFieldsOfObjectOrArray(val);\n            delete value2[key];\n          }\n        }\n        Object.assign(value2, retrievedArrayFields);\n        const retrievedFields = {};\n        let currentObj = value2;\n        while (currentObj !== null) {\n          for (const name of Object.getOwnPropertyNames(currentObj)) {\n            const descriptor = Object.getOwnPropertyDescriptor(\n              currentObj,\n              name\n            );\n            if (descriptor && typeof descriptor.get === \"function\" && name !== \"__proto__\") {\n              retrievedFields[name] = value2[name];\n              delete currentObj[name];\n              touched = true;\n            }\n          }\n          currentObj = Object.getPrototypeOf(currentObj);\n        }\n        Object.assign(value2, retrievedFields);\n        return value2;\n      };\n      value = retrieveAllFieldsOfObjectOrArray(value);\n      if (!touched) {\n        return Value2.Clean(schema, value);\n      }\n      if (Array.isArray(value)) {\n        value = Value2.Clean(schema, value);\n      } else {\n        value = { ...Value2.Clean(schema, value) };\n      }\n      return value;\n    };\n    if (dynamic)\n      return {\n        schema,\n        references: \"\",\n        checkFunc: () => {\n        },\n        code: \"\",\n        Check: (value) => Value2.Check(schema, value),\n        Errors: (value) => Value2.Errors(schema, value),\n        Code: () => \"\"\n      };\n    const compiledValidator = TypeCompiler3.Compile(schema, references);\n    if (normalize && schema.additionalProperties === false)\n      compiledValidator.Clean = cleaner;\n    return compiledValidator;\n  };\n  if (Kind in maybeSchemaOrRecord) {\n    if (\"additionalProperties\" in maybeSchemaOrRecord === false)\n      maybeSchemaOrRecord.additionalProperties = additionalProperties;\n    return {\n      200: compile(maybeSchemaOrRecord, Object.values(models))\n    };\n  }\n  const record = {};\n  Object.keys(maybeSchemaOrRecord).forEach((status) => {\n    const maybeNameOrSchema = maybeSchemaOrRecord[+status];\n    if (typeof maybeNameOrSchema === \"string\") {\n      if (maybeNameOrSchema in models) {\n        const schema = models[maybeNameOrSchema];\n        schema.type === \"object\" && \"additionalProperties\" in schema === false;\n        record[+status] = Kind in schema ? compile(schema, Object.values(models)) : schema;\n      }\n      return void 0;\n    }\n    if (maybeNameOrSchema.type === \"object\" && \"additionalProperties\" in maybeNameOrSchema === false)\n      maybeNameOrSchema.additionalProperties = additionalProperties;\n    record[+status] = Kind in maybeNameOrSchema ? compile(maybeNameOrSchema, Object.values(models)) : maybeNameOrSchema;\n  });\n  return record;\n};\nvar isBun = typeof Bun !== \"undefined\";\nvar hasHash = isBun && typeof Bun.hash === \"function\";\nvar checksum = (s) => {\n  if (hasHash) return Bun.hash(s);\n  let h = 9;\n  for (let i = 0; i < s.length; ) h = Math.imul(h ^ s.charCodeAt(i++), 9 ** 9);\n  return h = h ^ h >>> 9;\n};\nvar _stringToStructureCoercions;\nvar stringToStructureCoercions = () => {\n  if (!_stringToStructureCoercions) {\n    _stringToStructureCoercions = [\n      {\n        from: t.Object({}),\n        to: () => t.ObjectString({}),\n        excludeRoot: true\n      },\n      {\n        from: t.Array(t.Any()),\n        to: () => t.ArrayString(t.Any())\n      }\n    ];\n  }\n  return _stringToStructureCoercions;\n};\nvar getCookieValidator = ({\n  validator,\n  defaultConfig = {},\n  config,\n  dynamic,\n  models\n}) => {\n  let cookieValidator = getSchemaValidator(validator, {\n    dynamic,\n    models,\n    additionalProperties: true,\n    coerce: true,\n    additionalCoerce: stringToStructureCoercions()\n  });\n  if (isNotEmpty(defaultConfig)) {\n    if (cookieValidator) {\n      cookieValidator.config = mergeCookie(\n        // @ts-expect-error private\n        cookieValidator.config,\n        config\n      );\n    } else {\n      cookieValidator = getSchemaValidator(t.Cookie({}), {\n        dynamic,\n        models,\n        additionalProperties: true\n      });\n      cookieValidator.config = defaultConfig;\n    }\n  }\n  return cookieValidator;\n};\nvar injectChecksum = (checksum2, x) => {\n  if (!x) return;\n  if (!Array.isArray(x)) {\n    const fn = x;\n    if (checksum2 && !fn.checksum) fn.checksum = checksum2;\n    if (fn.scope === \"scoped\") fn.scope = \"local\";\n    return fn;\n  }\n  const fns = [...x];\n  for (const fn of fns) {\n    if (checksum2 && !fn.checksum) fn.checksum = checksum2;\n    if (fn.scope === \"scoped\") fn.scope = \"local\";\n  }\n  return fns;\n};\nvar mergeLifeCycle = (a, b, checksum2) => {\n  return {\n    // ...a,\n    // ...b,\n    start: mergeObjectArray(\n      a.start,\n      injectChecksum(checksum2, b?.start)\n    ),\n    request: mergeObjectArray(\n      a.request,\n      injectChecksum(checksum2, b?.request)\n    ),\n    parse: mergeObjectArray(\n      a.parse,\n      injectChecksum(checksum2, b?.parse)\n    ),\n    transform: mergeObjectArray(\n      a.transform,\n      injectChecksum(checksum2, b?.transform)\n    ),\n    beforeHandle: mergeObjectArray(\n      a.beforeHandle,\n      injectChecksum(checksum2, b?.beforeHandle)\n    ),\n    afterHandle: mergeObjectArray(\n      a.afterHandle,\n      injectChecksum(checksum2, b?.afterHandle)\n    ),\n    mapResponse: mergeObjectArray(\n      a.mapResponse,\n      injectChecksum(checksum2, b?.mapResponse)\n    ),\n    afterResponse: mergeObjectArray(\n      a.afterResponse,\n      injectChecksum(checksum2, b?.afterResponse)\n    ),\n    // Already merged on Elysia._use, also logic is more complicated, can't directly merge\n    trace: mergeObjectArray(\n      a.trace,\n      injectChecksum(checksum2, b?.trace)\n    ),\n    error: mergeObjectArray(\n      a.error,\n      injectChecksum(checksum2, b?.error)\n    ),\n    stop: mergeObjectArray(\n      a.stop,\n      injectChecksum(checksum2, b?.stop)\n    )\n  };\n};\nvar asHookType = (fn, inject, { skipIfHasType = false } = {}) => {\n  if (!fn) return fn;\n  if (!Array.isArray(fn)) {\n    if (skipIfHasType) fn.scope ??= inject;\n    else fn.scope = inject;\n    return fn;\n  }\n  for (const x of fn)\n    if (skipIfHasType) x.scope ??= inject;\n    else x.scope = inject;\n  return fn;\n};\nvar filterGlobal = (fn) => {\n  if (!fn) return fn;\n  if (!Array.isArray(fn))\n    switch (fn.scope) {\n      case \"global\":\n      case \"scoped\":\n        return { ...fn };\n      default:\n        return { fn };\n    }\n  const array = [];\n  for (const x of fn)\n    switch (x.scope) {\n      case \"global\":\n      case \"scoped\":\n        array.push({\n          ...x\n        });\n        break;\n    }\n  return array;\n};\nvar filterGlobalHook = (hook) => {\n  return {\n    // rest is validator\n    ...hook,\n    type: hook?.type,\n    detail: hook?.detail,\n    parse: filterGlobal(hook?.parse),\n    transform: filterGlobal(hook?.transform),\n    beforeHandle: filterGlobal(hook?.beforeHandle),\n    afterHandle: filterGlobal(hook?.afterHandle),\n    mapResponse: filterGlobal(hook?.mapResponse),\n    afterResponse: filterGlobal(hook?.afterResponse),\n    error: filterGlobal(hook?.error),\n    trace: filterGlobal(hook?.trace)\n  };\n};\nvar StatusMap = {\n  Continue: 100,\n  \"Switching Protocols\": 101,\n  Processing: 102,\n  \"Early Hints\": 103,\n  OK: 200,\n  Created: 201,\n  Accepted: 202,\n  \"Non-Authoritative Information\": 203,\n  \"No Content\": 204,\n  \"Reset Content\": 205,\n  \"Partial Content\": 206,\n  \"Multi-Status\": 207,\n  \"Already Reported\": 208,\n  \"Multiple Choices\": 300,\n  \"Moved Permanently\": 301,\n  Found: 302,\n  \"See Other\": 303,\n  \"Not Modified\": 304,\n  \"Temporary Redirect\": 307,\n  \"Permanent Redirect\": 308,\n  \"Bad Request\": 400,\n  Unauthorized: 401,\n  \"Payment Required\": 402,\n  Forbidden: 403,\n  \"Not Found\": 404,\n  \"Method Not Allowed\": 405,\n  \"Not Acceptable\": 406,\n  \"Proxy Authentication Required\": 407,\n  \"Request Timeout\": 408,\n  Conflict: 409,\n  Gone: 410,\n  \"Length Required\": 411,\n  \"Precondition Failed\": 412,\n  \"Payload Too Large\": 413,\n  \"URI Too Long\": 414,\n  \"Unsupported Media Type\": 415,\n  \"Range Not Satisfiable\": 416,\n  \"Expectation Failed\": 417,\n  \"I'm a teapot\": 418,\n  \"Misdirected Request\": 421,\n  \"Unprocessable Content\": 422,\n  Locked: 423,\n  \"Failed Dependency\": 424,\n  \"Too Early\": 425,\n  \"Upgrade Required\": 426,\n  \"Precondition Required\": 428,\n  \"Too Many Requests\": 429,\n  \"Request Header Fields Too Large\": 431,\n  \"Unavailable For Legal Reasons\": 451,\n  \"Internal Server Error\": 500,\n  \"Not Implemented\": 501,\n  \"Bad Gateway\": 502,\n  \"Service Unavailable\": 503,\n  \"Gateway Timeout\": 504,\n  \"HTTP Version Not Supported\": 505,\n  \"Variant Also Negotiates\": 506,\n  \"Insufficient Storage\": 507,\n  \"Loop Detected\": 508,\n  \"Not Extended\": 510,\n  \"Network Authentication Required\": 511\n};\nvar InvertedStatusMap = Object.fromEntries(\n  Object.entries(StatusMap).map(([k, v]) => [v, k])\n);\nfunction removeTrailingEquals(digest) {\n  let trimmedDigest = digest;\n  while (trimmedDigest.endsWith(\"=\")) {\n    trimmedDigest = trimmedDigest.slice(0, -1);\n  }\n  return trimmedDigest;\n}\nvar encoder = new TextEncoder();\nvar signCookie = async (val, secret) => {\n  if (typeof val !== \"string\")\n    throw new TypeError(\"Cookie value must be provided as a string.\");\n  if (secret === null) throw new TypeError(\"Secret key must be provided.\");\n  const secretKey = await crypto.subtle.importKey(\n    \"raw\",\n    encoder.encode(secret),\n    { name: \"HMAC\", hash: \"SHA-256\" },\n    false,\n    [\"sign\"]\n  );\n  const hmacBuffer = await crypto.subtle.sign(\n    \"HMAC\",\n    secretKey,\n    encoder.encode(val)\n  );\n  return val + \".\" + removeTrailingEquals(Buffer.from(hmacBuffer).toString(\"base64\"));\n};\nvar unsignCookie = async (input, secret) => {\n  if (typeof input !== \"string\")\n    throw new TypeError(\"Signed cookie string must be provided.\");\n  if (null === secret) throw new TypeError(\"Secret key must be provided.\");\n  const tentativeValue = input.slice(0, input.lastIndexOf(\".\"));\n  const expectedInput = await signCookie(tentativeValue, secret);\n  return expectedInput === input ? tentativeValue : false;\n};\nvar traceBackMacro = (extension, property) => {\n  if (!extension || typeof extension !== \"object\" || !property) return;\n  for (const [key, value] of Object.entries(property)) {\n    if (key in primitiveHookMap || !(key in extension)) continue;\n    const v = extension[key];\n    if (typeof v === \"function\") {\n      v(value);\n      delete property[key];\n    }\n  }\n};\nvar createMacroManager = ({\n  globalHook,\n  localHook\n}) => (stackName) => (type, fn) => {\n  if (typeof type === \"function\")\n    type = {\n      fn: type\n    };\n  if (\"fn\" in type || Array.isArray(type)) {\n    if (!localHook[stackName]) localHook[stackName] = [];\n    if (typeof localHook[stackName] === \"function\")\n      localHook[stackName] = [localHook[stackName]];\n    if (Array.isArray(type))\n      localHook[stackName] = localHook[stackName].concat(type);\n    else localHook[stackName].push(type);\n    return;\n  }\n  const { insert = \"after\", stack = \"local\" } = type;\n  if (typeof fn === \"function\") fn = { fn };\n  if (stack === \"global\") {\n    if (!Array.isArray(fn)) {\n      if (insert === \"before\") {\n        ;\n        globalHook[stackName].unshift(fn);\n      } else {\n        ;\n        globalHook[stackName].push(fn);\n      }\n    } else {\n      if (insert === \"before\") {\n        globalHook[stackName] = fn.concat(\n          globalHook[stackName]\n        );\n      } else {\n        globalHook[stackName] = globalHook[stackName].concat(fn);\n      }\n    }\n  } else {\n    if (!localHook[stackName]) localHook[stackName] = [];\n    if (typeof localHook[stackName] === \"function\")\n      localHook[stackName] = [localHook[stackName]];\n    if (!Array.isArray(fn)) {\n      if (insert === \"before\") {\n        ;\n        localHook[stackName].unshift(fn);\n      } else {\n        ;\n        localHook[stackName].push(fn);\n      }\n    } else {\n      if (insert === \"before\") {\n        localHook[stackName] = fn.concat(localHook[stackName]);\n      } else {\n        localHook[stackName] = localHook[stackName].concat(fn);\n      }\n    }\n  }\n};\nvar parseNumericString = (message) => {\n  if (typeof message === \"number\") return message;\n  if (message.length < 16) {\n    if (message.trim().length === 0) return null;\n    const length = Number(message);\n    if (Number.isNaN(length)) return null;\n    return length;\n  }\n  if (message.length === 16) {\n    if (message.trim().length === 0) return null;\n    const number = Number(message);\n    if (Number.isNaN(number) || number.toString() !== message) return null;\n    return number;\n  }\n  return null;\n};\nvar isNumericString = (message) => parseNumericString(message) !== null;\nvar PromiseGroup = class {\n  constructor(onError = console.error) {\n    this.onError = onError;\n    this.root = null;\n    this.promises = [];\n  }\n  /**\n   * The number of promises still being awaited.\n   */\n  get size() {\n    return this.promises.length;\n  }\n  /**\n   * Add a promise to the group.\n   * @returns The promise that was added.\n   */\n  add(promise) {\n    this.promises.push(promise);\n    this.root ||= this.drain();\n    return promise;\n  }\n  async drain() {\n    while (this.promises.length > 0) {\n      try {\n        await this.promises[0];\n      } catch (error2) {\n        this.onError(error2);\n      }\n      this.promises.shift();\n    }\n    this.root = null;\n  }\n  // Allow the group to be awaited.\n  then(onfulfilled, onrejected) {\n    return (this.root ?? Promise.resolve()).then(onfulfilled, onrejected);\n  }\n};\nvar fnToContainer = (fn) => {\n  if (!fn) return fn;\n  if (!Array.isArray(fn)) {\n    if (typeof fn === \"function\") return { fn };\n    else if (\"fn\" in fn) return fn;\n  }\n  const fns = [];\n  for (const x of fn) {\n    if (typeof x === \"function\") fns.push({ fn: x });\n    else if (\"fn\" in x) fns.push(x);\n  }\n  return fns;\n};\nvar localHookToLifeCycleStore = (a) => {\n  return {\n    ...a,\n    start: fnToContainer(a?.start),\n    request: fnToContainer(a?.request),\n    parse: fnToContainer(a?.parse),\n    transform: fnToContainer(a?.transform),\n    beforeHandle: fnToContainer(a?.beforeHandle),\n    afterHandle: fnToContainer(a?.afterHandle),\n    mapResponse: fnToContainer(a?.mapResponse),\n    afterResponse: fnToContainer(a?.afterResponse),\n    trace: fnToContainer(a?.trace),\n    error: fnToContainer(a?.error),\n    stop: fnToContainer(a?.stop)\n  };\n};\nvar lifeCycleToFn = (a) => {\n  return {\n    ...a,\n    start: a.start?.map((x) => x.fn),\n    request: a.request?.map((x) => x.fn),\n    parse: a.parse?.map((x) => x.fn),\n    transform: a.transform?.map((x) => x.fn),\n    beforeHandle: a.beforeHandle?.map((x) => x.fn),\n    afterHandle: a.afterHandle?.map((x) => x.fn),\n    afterResponse: a.afterResponse?.map((x) => x.fn),\n    mapResponse: a.mapResponse?.map((x) => x.fn),\n    trace: a.trace?.map((x) => x.fn),\n    error: a.error?.map((x) => x.fn),\n    stop: a.stop?.map((x) => x.fn)\n  };\n};\nvar cloneInference = (inference) => ({\n  body: inference.body,\n  cookie: inference.cookie,\n  headers: inference.headers,\n  query: inference.query,\n  set: inference.set,\n  server: inference.server\n});\nvar redirect = (url, status = 302) => Response.redirect(url, status);\nvar ELYSIA_FORM_DATA = Symbol(\"ElysiaFormData\");\nvar ELYSIA_REQUEST_ID = Symbol(\"ElysiaRequestId\");\nvar form = (items) => {\n  const formData = new FormData();\n  for (const [key, value] of Object.entries(items)) {\n    if (Array.isArray(value)) {\n      for (const v of value) {\n        if (value instanceof File)\n          formData.append(key, value, value.name);\n        formData.append(key, v);\n      }\n      continue;\n    }\n    if (value instanceof File) formData.append(key, value, value.name);\n    formData.append(key, value);\n  }\n  return formData;\n};\nvar randomId = () => crypto.getRandomValues(new Uint32Array(1))[0];\nvar deduplicateChecksum = (array) => {\n  const hashes = [];\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (item.checksum) {\n      if (hashes.includes(item.checksum)) {\n        array.splice(i, 1);\n        i--;\n      }\n      hashes.push(item.checksum);\n    }\n  }\n  return array;\n};\nvar promoteEvent = (events, as = \"scoped\") => {\n  if (as === \"scoped\") {\n    for (const event of events)\n      if (\"scope\" in event && event.scope === \"local\")\n        event.scope = \"scoped\";\n    return;\n  }\n  for (const event of events) if (\"scope\" in event) event.scope = \"global\";\n};\n\n// src/error.ts\nvar env = typeof Bun !== \"undefined\" ? Bun.env : typeof process !== \"undefined\" ? process?.env : void 0;\nvar ERROR_CODE = Symbol(\"ElysiaErrorCode\");\nvar ELYSIA_RESPONSE = Symbol(\"ElysiaResponse\");\nvar isProduction = (env?.NODE_ENV ?? env?.ENV) === \"production\";\nvar error = (code, response) => {\n  const res = response ?? (code in InvertedStatusMap ? (\n    // @ts-expect-error Always correct\n    InvertedStatusMap[code]\n  ) : code);\n  return {\n    // @ts-expect-error trust me bro\n    [ELYSIA_RESPONSE]: StatusMap[code] ?? code,\n    response: res,\n    _type: void 0,\n    error: new Error(res)\n  };\n};\nvar InternalServerError = class extends Error {\n  constructor(message) {\n    super(message ?? \"INTERNAL_SERVER_ERROR\");\n    this.code = \"INTERNAL_SERVER_ERROR\";\n    this.status = 500;\n  }\n};\nvar NotFoundError = class extends Error {\n  constructor(message) {\n    super(message ?? \"NOT_FOUND\");\n    this.code = \"NOT_FOUND\";\n    this.status = 404;\n  }\n};\nvar ParseError = class extends Error {\n  constructor() {\n    super(\"Failed to parse body\");\n    this.code = \"PARSE\";\n    this.status = 400;\n  }\n};\nvar InvalidCookieSignature = class extends Error {\n  constructor(key, message) {\n    super(message ?? `\"${key}\" has invalid cookie signature`);\n    this.key = key;\n    this.code = \"INVALID_COOKIE_SIGNATURE\";\n    this.status = 400;\n  }\n};\nvar mapValueError = (error2) => {\n  const { message, path, value, type } = error2;\n  const property = path.slice(1).replaceAll(\"/\", \".\");\n  const isRoot = path === \"\";\n  switch (type) {\n    case 42:\n      return {\n        ...error2,\n        summary: isRoot ? `Value should not be provided` : `Property '${property}' should not be provided`\n      };\n    case 45:\n      return {\n        ...error2,\n        summary: isRoot ? `Value is missing` : `Property '${property}' is missing`\n      };\n    case 50:\n      const quoteIndex = message.indexOf(\"'\");\n      const format = message.slice(\n        quoteIndex + 1,\n        message.indexOf(\"'\", quoteIndex + 1)\n      );\n      return {\n        ...error2,\n        summary: isRoot ? `Value should be an email` : `Property '${property}' should be ${format}`\n      };\n    case 54:\n      return {\n        ...error2,\n        summary: `${message.slice(\n          0,\n          9\n        )} property '${property}' to be ${message.slice(\n          8\n        )} but found: ${value}`\n      };\n    case 62:\n      const union = error2.schema.anyOf.map((x) => `'${x?.format ?? x.type}'`).join(\", \");\n      return {\n        ...error2,\n        summary: isRoot ? `Value should be one of ${union}` : `Property '${property}' should be one of: ${union}`\n      };\n    default:\n      return { summary: message, ...error2 };\n  }\n};\nvar ValidationError = class _ValidationError extends Error {\n  constructor(type, validator, value) {\n    if (value && typeof value === \"object\" && ELYSIA_RESPONSE in value)\n      value = value.response;\n    const error2 = isProduction ? void 0 : \"Errors\" in validator ? validator.Errors(value).First() : Value3.Errors(validator, value).First();\n    const customError = error2?.schema.error !== void 0 ? typeof error2.schema.error === \"function\" ? error2.schema.error({\n      type,\n      validator,\n      value,\n      get errors() {\n        return [...validator.Errors(value)].map(\n          mapValueError\n        );\n      }\n    }) : error2.schema.error : void 0;\n    const accessor = error2?.path || \"root\";\n    let message = \"\";\n    if (customError !== void 0) {\n      message = typeof customError === \"object\" ? JSON.stringify(customError) : customError + \"\";\n    } else if (isProduction) {\n      message = JSON.stringify({\n        type: \"validation\",\n        on: type,\n        summary: mapValueError(error2).summary,\n        message: error2?.message,\n        found: value\n      });\n    } else {\n      const schema = validator?.schema ?? validator;\n      const errors = \"Errors\" in validator ? [...validator.Errors(value)].map(mapValueError) : [...Value3.Errors(validator, value)].map(mapValueError);\n      let expected;\n      try {\n        expected = Value3.Create(schema);\n      } catch (error3) {\n        expected = {\n          type: \"Could not create expected value\",\n          // @ts-expect-error\n          message: error3?.message,\n          error: error3\n        };\n      }\n      message = JSON.stringify(\n        {\n          type: \"validation\",\n          on: type,\n          summary: errors[0]?.summary,\n          property: accessor,\n          message: error2?.message,\n          expected,\n          found: value,\n          errors\n        },\n        null,\n        2\n      );\n    }\n    super(message);\n    this.type = type;\n    this.validator = validator;\n    this.value = value;\n    this.code = \"VALIDATION\";\n    this.status = 422;\n    Object.setPrototypeOf(this, _ValidationError.prototype);\n  }\n  get all() {\n    return \"Errors\" in this.validator ? [...this.validator.Errors(this.value)].map(mapValueError) : (\n      // @ts-ignore\n      [...Value3.Errors(this.validator, this.value)].map(mapValueError)\n    );\n  }\n  static simplifyModel(validator) {\n    const model = \"schema\" in validator ? validator.schema : validator;\n    try {\n      return Value3.Create(model);\n    } catch {\n      return model;\n    }\n  }\n  get model() {\n    return _ValidationError.simplifyModel(this.validator);\n  }\n  toResponse(headers) {\n    return new Response(this.message, {\n      status: 400,\n      headers: {\n        ...headers,\n        \"content-type\": \"application/json\"\n      }\n    });\n  }\n};\n\n// src/ws/index.ts\nvar websocket = {\n  open(ws) {\n    ws.data.open?.(ws);\n  },\n  message(ws, message) {\n    ws.data.message?.(ws, message);\n  },\n  drain(ws) {\n    ws.data.drain?.(ws);\n  },\n  close(ws, code, reason) {\n    ws.data.close?.(ws, code, reason);\n  }\n};\nvar ElysiaWS = class {\n  constructor(raw, data) {\n    this.raw = raw;\n    this.data = data;\n    this.validator = raw.data.validator;\n    if (raw.data.id) {\n      this.id = raw.data.id;\n    } else {\n      this.id = randomId().toString();\n    }\n  }\n  get id() {\n    return this.raw.data.id;\n  }\n  set id(newID) {\n    this.raw.data.id = newID;\n  }\n  get publish() {\n    return (topic, data = void 0, compress) => {\n      if (this.validator?.Check(data) === false)\n        throw new ValidationError(\"message\", this.validator, data);\n      if (typeof data === \"object\") data = JSON.stringify(data);\n      this.raw.publish(topic, data, compress);\n      return this;\n    };\n  }\n  get send() {\n    return (data) => {\n      if (this.validator?.Check(data) === false)\n        throw new ValidationError(\"message\", this.validator, data);\n      if (Buffer.isBuffer(data)) {\n        this.raw.send(data);\n        return this;\n      }\n      if (typeof data === \"object\") data = JSON.stringify(data);\n      this.raw.send(data);\n      return this;\n    };\n  }\n  get subscribe() {\n    return (room) => {\n      this.raw.subscribe(room);\n      return this;\n    };\n  }\n  get unsubscribe() {\n    return (room) => {\n      this.raw.unsubscribe(room);\n      return this;\n    };\n  }\n  get cork() {\n    return (callback) => {\n      this.raw.cork(callback);\n      return this;\n    };\n  }\n  get close() {\n    return () => {\n      this.raw.close();\n      return this;\n    };\n  }\n  get terminate() {\n    return this.raw.terminate.bind(this.raw);\n  }\n  get isSubscribed() {\n    return this.raw.isSubscribed.bind(this.raw);\n  }\n  get remoteAddress() {\n    return this.raw.remoteAddress;\n  }\n};\n\n// package.json\nvar version = \"1.1.7\";\n\n// src/compose.ts\nimport { Value as Value4 } from \"@sinclair/typebox/value\";\n\n// src/fast-querystring.ts\nimport fastDecode from \"fast-decode-uri-component\";\nvar plusRegex = /\\+/g;\nfunction parseQueryFromURL(input) {\n  const result = {};\n  if (typeof input !== \"string\") return result;\n  let key = \"\";\n  let value = \"\";\n  let startingIndex = -1;\n  let equalityIndex = -1;\n  let flags = 0;\n  const l = input.length;\n  for (let i = 0; i < l; i++) {\n    switch (input.charCodeAt(i)) {\n      case 38:\n        const hasBothKeyValuePair = equalityIndex > startingIndex;\n        if (!hasBothKeyValuePair) equalityIndex = i;\n        key = input.slice(startingIndex + 1, equalityIndex);\n        if (hasBothKeyValuePair || key.length > 0) {\n          if (flags & 1) key = key.replace(plusRegex, \" \");\n          if (flags & 2) key = fastDecode(key) || key;\n          if (!result[key]) {\n            if (hasBothKeyValuePair) {\n              value = input.slice(equalityIndex + 1, i);\n              if (flags & 4)\n                value = value.replace(plusRegex, \" \");\n              if (flags & 8)\n                value = fastDecode(value) || value;\n            }\n            result[key] = value;\n          }\n        }\n        key = \"\";\n        value = \"\";\n        startingIndex = i;\n        equalityIndex = i;\n        flags = 0;\n        break;\n      case 61:\n        if (equalityIndex <= startingIndex) equalityIndex = i;\n        else flags |= 8;\n        break;\n      case 43:\n        if (equalityIndex > startingIndex) flags |= 4;\n        else flags |= 1;\n        break;\n      case 37:\n        if (equalityIndex > startingIndex) flags |= 8;\n        else flags |= 2;\n        break;\n    }\n  }\n  if (startingIndex < l) {\n    const hasBothKeyValuePair = equalityIndex > startingIndex;\n    key = input.slice(\n      startingIndex + 1,\n      hasBothKeyValuePair ? equalityIndex : l\n    );\n    if (hasBothKeyValuePair || key.length > 0) {\n      if (flags & 1) key = key.replace(plusRegex, \" \");\n      if (flags & 2) key = fastDecode(key) || key;\n      if (!result[key]) {\n        if (hasBothKeyValuePair) {\n          value = input.slice(equalityIndex + 1, l);\n          if (flags & 4)\n            value = value.replace(plusRegex, \" \");\n          if (flags & 8) value = fastDecode(value) || value;\n        }\n        result[key] = value;\n      }\n    }\n  }\n  return result;\n}\nvar parseQuery = (input) => {\n  const result = {};\n  if (typeof input !== \"string\") return result;\n  const inputLength = input.length;\n  let key = \"\";\n  let value = \"\";\n  let startingIndex = -1;\n  let equalityIndex = -1;\n  let shouldDecodeKey = false;\n  let shouldDecodeValue = false;\n  let keyHasPlus = false;\n  let valueHasPlus = false;\n  let hasBothKeyValuePair = false;\n  let c = 0;\n  for (let i = 0; i < inputLength + 1; i++) {\n    if (i !== inputLength) c = input.charCodeAt(i);\n    else c = 38;\n    switch (c) {\n      case 38: {\n        hasBothKeyValuePair = equalityIndex > startingIndex;\n        if (!hasBothKeyValuePair) equalityIndex = i;\n        key = input.slice(startingIndex + 1, equalityIndex);\n        if (hasBothKeyValuePair || key.length > 0) {\n          if (keyHasPlus) key = key.replace(plusRegex, \" \");\n          if (shouldDecodeKey) key = fastDecode(key) || key;\n          if (hasBothKeyValuePair) {\n            value = input.slice(equalityIndex + 1, i);\n            if (valueHasPlus) value = value.replace(plusRegex, \" \");\n            if (shouldDecodeValue)\n              value = fastDecode(value) || value;\n          }\n          const currentValue = result[key];\n          if (currentValue === void 0)\n            result[key] = value;\n          else {\n            if (currentValue.pop) currentValue.push(value);\n            else result[key] = [currentValue, value];\n          }\n        }\n        value = \"\";\n        startingIndex = i;\n        equalityIndex = i;\n        shouldDecodeKey = false;\n        shouldDecodeValue = false;\n        keyHasPlus = false;\n        valueHasPlus = false;\n        break;\n      }\n      case 61:\n        if (equalityIndex <= startingIndex) equalityIndex = i;\n        else shouldDecodeValue = true;\n        break;\n      case 43:\n        if (equalityIndex > startingIndex) valueHasPlus = true;\n        else keyHasPlus = true;\n        break;\n      case 37:\n        if (equalityIndex > startingIndex) shouldDecodeValue = true;\n        else shouldDecodeKey = true;\n        break;\n    }\n  }\n  return result;\n};\n\n// src/compose.ts\nimport decodeURIComponent2 from \"fast-decode-uri-component\";\n\n// src/trace.ts\nvar ELYSIA_TRACE = Symbol(\"ElysiaTrace\");\nvar createProcess = () => {\n  const { promise, resolve } = Promise.withResolvers();\n  const { promise: end, resolve: resolveEnd } = Promise.withResolvers();\n  const { promise: error2, resolve: resolveError } = Promise.withResolvers();\n  const callbacks = [];\n  const callbacksEnd = [];\n  return [\n    (callback) => {\n      if (callback) callbacks.push(callback);\n      return promise;\n    },\n    (process2) => {\n      const processes = [];\n      const resolvers = [];\n      let groupError = null;\n      for (let i = 0; i < (process2.total ?? 0); i++) {\n        const { promise: promise2, resolve: resolve2 } = Promise.withResolvers();\n        const { promise: end2, resolve: resolveEnd2 } = Promise.withResolvers();\n        const { promise: error3, resolve: resolveError2 } = Promise.withResolvers();\n        const callbacks2 = [];\n        const callbacksEnd2 = [];\n        processes.push((callback) => {\n          if (callback) callbacks2.push(callback);\n          return promise2;\n        });\n        resolvers.push((process3) => {\n          const result2 = {\n            ...process3,\n            end: end2,\n            error: error3,\n            index: i,\n            onStop(callback) {\n              if (callback) callbacksEnd2.push(callback);\n              return end2;\n            }\n          };\n          resolve2(result2);\n          for (let i2 = 0; i2 < callbacks2.length; i2++)\n            callbacks2[i2](result2);\n          return (error4 = null) => {\n            const end3 = performance.now();\n            if (error4) groupError = error4;\n            const detail = {\n              end: end3,\n              error: error4,\n              get elapsed() {\n                return end3 - process3.begin;\n              }\n            };\n            for (let i2 = 0; i2 < callbacksEnd2.length; i2++)\n              callbacksEnd2[i2](detail);\n            resolveEnd2(end3);\n            resolveError2(error4);\n          };\n        });\n      }\n      const result = {\n        ...process2,\n        end,\n        error: error2,\n        onEvent(callback) {\n          for (let i = 0; i < processes.length; i++)\n            processes[i](callback);\n        },\n        onStop(callback) {\n          if (callback) callbacksEnd.push(callback);\n          return end;\n        }\n      };\n      resolve(result);\n      for (let i = 0; i < callbacks.length; i++) callbacks[i](result);\n      return {\n        resolveChild: resolvers,\n        resolve(error3 = null) {\n          const end2 = performance.now();\n          if (!error3 && groupError) error3 = groupError;\n          const detail = {\n            end: end2,\n            error: error3,\n            get elapsed() {\n              return end2 - process2.begin;\n            }\n          };\n          for (let i = 0; i < callbacksEnd.length; i++)\n            callbacksEnd[i](detail);\n          resolveEnd(end2);\n          resolveError(error3);\n        }\n      };\n    }\n  ];\n};\nvar createTracer = (traceListener) => {\n  return (context) => {\n    const [onRequest, resolveRequest] = createProcess();\n    const [onParse, resolveParse] = createProcess();\n    const [onTransform, resolveTransform] = createProcess();\n    const [onBeforeHandle, resolveBeforeHandle] = createProcess();\n    const [onHandle, resolveHandle] = createProcess();\n    const [onAfterHandle, resolveAfterHandle] = createProcess();\n    const [onError, resolveError] = createProcess();\n    const [onMapResponse, resolveMapResponse] = createProcess();\n    const [onAfterResponse, resolveAfterResponse] = createProcess();\n    traceListener({\n      // @ts-ignore\n      id: context[ELYSIA_REQUEST_ID],\n      context,\n      set: context.set,\n      // @ts-ignore\n      onRequest,\n      // @ts-ignore\n      onParse,\n      // @ts-ignore\n      onTransform,\n      // @ts-ignore\n      onBeforeHandle,\n      // @ts-ignore\n      onHandle,\n      // @ts-ignore\n      onAfterHandle,\n      // @ts-ignore\n      onMapResponse,\n      // @ts-ignore\n      onAfterResponse,\n      // @ts-ignore\n      onError\n    });\n    return {\n      request: resolveRequest,\n      parse: resolveParse,\n      transform: resolveTransform,\n      beforeHandle: resolveBeforeHandle,\n      handle: resolveHandle,\n      afterHandle: resolveAfterHandle,\n      error: resolveError,\n      mapResponse: resolveMapResponse,\n      afterResponse: resolveAfterResponse\n    };\n  };\n};\n\n// src/compose.ts\nvar headersHasToJSON = new Headers().toJSON;\nvar TypeBoxSymbol = {\n  optional: Symbol.for(\"TypeBox.Optional\"),\n  kind: Symbol.for(\"TypeBox.Kind\")\n};\nvar isOptional = (validator) => {\n  if (!validator) return false;\n  const schema = validator?.schema;\n  return !!schema && TypeBoxSymbol.optional in schema;\n};\nvar hasAdditionalProperties = (_schema) => {\n  if (!_schema) return false;\n  const schema = _schema?.schema ?? _schema;\n  if (schema.anyOf) return schema.anyOf.some(hasAdditionalProperties);\n  if (schema.someOf) return schema.someOf.some(hasAdditionalProperties);\n  if (schema.allOf) return schema.allOf.some(hasAdditionalProperties);\n  if (schema.not) return schema.not.some(hasAdditionalProperties);\n  if (schema.type === \"object\") {\n    const properties = schema.properties;\n    if (\"additionalProperties\" in schema) return schema.additionalProperties;\n    for (const key of Object.keys(properties)) {\n      const property = properties[key];\n      if (property.type === \"object\") {\n        if (hasAdditionalProperties(property)) return true;\n      } else if (property.anyOf) {\n        for (let i = 0; i < property.anyOf.length; i++)\n          if (hasAdditionalProperties(property.anyOf[i])) return true;\n      }\n      return property.additionalProperties;\n    }\n    return false;\n  }\n  return false;\n};\nvar createReport = ({\n  context = \"c\",\n  trace,\n  addFn\n}) => {\n  if (!trace.length)\n    return () => {\n      return {\n        resolveChild() {\n          return () => {\n          };\n        },\n        resolve() {\n        }\n      };\n    };\n  for (let i = 0; i < trace.length; i++)\n    addFn(\n      `let report${i}, reportChild${i}, reportErr${i}, reportErrChild${i}; let trace${i} = ${context}[ELYSIA_TRACE]?.[${i}] ?? trace[${i}](${context});\n`\n    );\n  return (event, {\n    name,\n    total = 0\n  } = {}) => {\n    if (!name) name = \"anonymous\";\n    const reporter = event === \"error\" ? \"reportErr\" : \"report\";\n    for (let i = 0; i < trace.length; i++)\n      addFn(\n        `\n${reporter}${i} = trace${i}.${event}({id,event: '${event}',name: '${name}',begin: performance.now(),total: ${total}})\n`\n      );\n    return {\n      resolve() {\n        for (let i = 0; i < trace.length; i++)\n          addFn(`\n${reporter}${i}.resolve()\n`);\n      },\n      resolveChild(name2) {\n        for (let i = 0; i < trace.length; i++)\n          addFn(\n            `${reporter}Child${i} = ${reporter}${i}.resolveChild?.shift()?.({id,event: '${event}',name: '${name2}',begin: performance.now()})\n`\n          );\n        return (binding) => {\n          for (let i = 0; i < trace.length; i++) {\n            if (binding)\n              addFn(`\n                             \tif (${binding} instanceof Error)\n                    \t\t\t\t${reporter}Child${i}?.(${binding})\n                           \t\telse\n                             \t\t${reporter}Child${i}?.()\n`);\n            else addFn(`${reporter}Child${i}?.()\n`);\n          }\n        };\n      }\n    };\n  };\n};\nvar composeValidationFactory = ({\n  injectResponse = \"\",\n  normalize = false,\n  validator\n}) => ({\n  composeValidation: (type, value = `c.${type}`) => `c.set.status = 422; throw new ValidationError('${type}', validator.${type}, ${value})`,\n  composeResponseValidation: (name = \"r\") => {\n    let code = \"\\n\" + injectResponse + \"\\n\";\n    code += `if(typeof ${name} === \"object\" && ${name} && ELYSIA_RESPONSE in ${name}) {\n\t\t\tc.set.status = ${name}[ELYSIA_RESPONSE]\n\t\t\t${name} = ${name}.response\n\t\t}\n\n\t\tconst isResponse = ${name} instanceof Response\n\n`;\n    code += `switch(c.set.status) {\n`;\n    for (const [status, value] of Object.entries(\n      validator.response\n    )) {\n      code += `\tcase ${status}:\n\t\t\t\tif (!isResponse) {\n`;\n      if (normalize && \"Clean\" in value && !hasAdditionalProperties(value))\n        code += `${name} = validator.response['${status}'].Clean(${name})\n`;\n      code += `if(validator.response['${status}'].Check(${name}) === false) {\n\t\t\t\t\tc.set.status = 422\n\n\t\t\t\t\tthrow new ValidationError('response', validator.response['${status}'], ${name})\n\t\t\t\t}\n\n\t\t\t\tc.set.status = ${status}\n\t\t\t}\n\n\t\t\tbreak\n\n`;\n    }\n    code += \"\\n}\\n\";\n    return code;\n  }\n});\nvar KindSymbol = Symbol.for(\"TypeBox.Kind\");\nvar hasProperty = (expectedProperty, schema) => {\n  if (!schema) return;\n  if (schema.type === \"object\") {\n    const properties = schema.properties;\n    if (!properties) return false;\n    for (const key of Object.keys(properties)) {\n      const property = properties[key];\n      if (expectedProperty in property) return true;\n      if (property.type === \"object\") {\n        if (hasProperty(expectedProperty, property)) return true;\n      } else if (property.anyOf) {\n        for (let i = 0; i < property.anyOf.length; i++) {\n          if (hasProperty(expectedProperty, property.anyOf[i]))\n            return true;\n        }\n      }\n    }\n    return false;\n  }\n  return expectedProperty in schema;\n};\nvar TransformSymbol = Symbol.for(\"TypeBox.Transform\");\nvar hasTransform = (schema) => {\n  if (!schema) return;\n  if (schema.type === \"object\" && schema.properties) {\n    const properties = schema.properties;\n    for (const key of Object.keys(properties)) {\n      const property = properties[key];\n      if (property.type === \"object\") {\n        if (hasTransform(property)) return true;\n      } else if (property.anyOf) {\n        for (let i = 0; i < property.anyOf.length; i++)\n          if (hasTransform(property.anyOf[i])) return true;\n      }\n      const hasTransformSymbol = TransformSymbol in property;\n      if (hasTransformSymbol) return true;\n    }\n    return false;\n  }\n  return TransformSymbol in schema || schema.properties && TransformSymbol in schema.properties;\n};\nvar matchFnReturn = /(?:return|=>) \\S+\\(/g;\nvar isAsyncName = (v) => {\n  const fn = v?.fn ?? v;\n  return fn.constructor.name === \"AsyncFunction\";\n};\nvar isAsync = (v) => {\n  const fn = v?.fn ?? v;\n  if (fn.constructor.name === \"AsyncFunction\") return true;\n  const literal = fn.toString();\n  if (literal.includes(\"=> response.clone(\")) return false;\n  if (literal.includes(\"await\")) return true;\n  if (literal.includes(\"async\")) return true;\n  return !!literal.match(matchFnReturn);\n};\nvar isGenerator = (v) => {\n  const fn = v?.fn ?? v;\n  return fn.constructor.name === \"AsyncGeneratorFunction\" || fn.constructor.name === \"GeneratorFunction\";\n};\nvar composeHandler = ({\n  app,\n  path,\n  method,\n  localHook,\n  hooks,\n  validator,\n  handler,\n  allowMeta = false,\n  inference\n}) => {\n  const isHandleFn = typeof handler === \"function\";\n  if (!isHandleFn)\n    handler = mapResponse(handler, {\n      // @ts-expect-error private property\n      headers: app.setHeaders ?? {}\n    });\n  const handle = isHandleFn ? `handler(c)` : `handler`;\n  const hasAfterResponse = hooks.afterResponse.length > 0;\n  const hasTrace = hooks.trace.length > 0;\n  let fnLiteral = \"\";\n  inference = sucrose(\n    Object.assign(localHook, {\n      handler\n    }),\n    inference\n  );\n  if (inference.server)\n    fnLiteral += `\nObject.defineProperty(c, 'server', {\n\t\t\tget: function() { return getServer() }\n\t\t})\n`;\n  if (inference.body) fnLiteral += `let isParsing = false\n`;\n  validator.createBody?.();\n  validator.createQuery?.();\n  validator.createHeaders?.();\n  validator.createParams?.();\n  validator.createCookie?.();\n  validator.createResponse?.();\n  const hasQuery = inference.query || !!validator.query;\n  const hasBody = method !== \"$INTERNALWS\" && method !== \"GET\" && method !== \"HEAD\" && (inference.body || !!validator.body || hooks.parse.length);\n  const defaultHeaders = app.setHeaders;\n  const hasDefaultHeaders = defaultHeaders && !!Object.keys(defaultHeaders).length;\n  const hasHeaders = inference.headers || validator.headers;\n  const hasCookie = inference.cookie || !!validator.cookie;\n  const cookieValidator = hasCookie ? getCookieValidator({\n    validator: validator.cookie,\n    defaultConfig: app.config.cookie,\n    dynamic: !!app.config.aot,\n    // @ts-expect-error\n    config: validator.cookie?.config ?? {},\n    // @ts-expect-error\n    models: app.definitions.type\n  }) : void 0;\n  const cookieMeta = cookieValidator?.config;\n  let encodeCookie = \"\";\n  if (cookieMeta?.sign) {\n    if (!cookieMeta.secrets)\n      throw new Error(\n        `t.Cookie required secret which is not set in (${method}) ${path}.`\n      );\n    const secret = !cookieMeta.secrets ? void 0 : typeof cookieMeta.secrets === \"string\" ? cookieMeta.secrets : cookieMeta.secrets[0];\n    encodeCookie += `const _setCookie = c.set.cookie\n\t\tif(_setCookie) {`;\n    if (cookieMeta.sign === true) {\n      encodeCookie += `for(const [key, cookie] of Object.entries(_setCookie)) {\n\t\t\t\tc.set.cookie[key].value = await signCookie(cookie.value, '${secret}')\n\t\t\t}`;\n    } else\n      for (const name of cookieMeta.sign) {\n        encodeCookie += `if(_setCookie['${name}']?.value) { c.set.cookie['${name}'].value = await signCookie(_setCookie['${name}'].value, '${secret}') }\n`;\n      }\n    encodeCookie += \"}\\n\";\n  }\n  const normalize = app.config.normalize;\n  const { composeValidation, composeResponseValidation } = composeValidationFactory({\n    normalize,\n    validator\n  });\n  if (hasHeaders) {\n    fnLiteral += headersHasToJSON ? `c.headers = c.request.headers.toJSON()\n` : `c.headers = {}\n                for (const [key, value] of c.request.headers.entries())\n\t\t\t\t\tc.headers[key] = value\n\t\t\t\t`;\n  }\n  if (hasCookie) {\n    const get = (name, defaultValue) => {\n      const value = cookieMeta?.[name] ?? defaultValue;\n      if (!value)\n        return typeof defaultValue === \"string\" ? `${name}: \"${defaultValue}\",` : `${name}: ${defaultValue},`;\n      if (typeof value === \"string\") return `${name}: '${value}',`;\n      if (value instanceof Date)\n        return `${name}: new Date(${value.getTime()}),`;\n      return `${name}: ${value},`;\n    };\n    const options = cookieMeta ? `{\n\t\t\tsecrets: ${cookieMeta.secrets !== void 0 ? typeof cookieMeta.secrets === \"string\" ? `'${cookieMeta.secrets}'` : \"[\" + cookieMeta.secrets.reduce(\n      (a, b) => a + `'${b}',`,\n      \"\"\n    ) + \"]\" : \"undefined\"},\n\t\t\tsign: ${cookieMeta.sign === true ? true : cookieMeta.sign !== void 0 ? \"[\" + cookieMeta.sign.reduce(\n      (a, b) => a + `'${b}',`,\n      \"\"\n    ) + \"]\" : \"undefined\"},\n\t\t\t${get(\"domain\")}\n\t\t\t${get(\"expires\")}\n\t\t\t${get(\"httpOnly\")}\n\t\t\t${get(\"maxAge\")}\n\t\t\t${get(\"path\", \"/\")}\n\t\t\t${get(\"priority\")}\n\t\t\t${get(\"sameSite\")}\n\t\t\t${get(\"secure\")}\n\t\t}` : \"undefined\";\n    if (hasHeaders)\n      fnLiteral += `\nc.cookie = await parseCookie(c.set, c.headers.cookie, ${options})\n`;\n    else\n      fnLiteral += `\nc.cookie = await parseCookie(c.set, c.request.headers.get('cookie'), ${options})\n`;\n  }\n  if (hasQuery) {\n    const destructured = [];\n    if (validator.query && validator.query.schema.type === \"object\") {\n      const properties = validator.query.schema.properties;\n      if (!hasAdditionalProperties(validator.query))\n        for (let [key, _value] of Object.entries(properties)) {\n          let value = _value;\n          if (value && TypeBoxSymbol.optional in value && value.type === \"array\" && value.items)\n            value = value.items;\n          const { type, anyOf } = value;\n          const isArray = type === \"array\" || anyOf?.some(\n            (v) => v.type === \"string\" && v.format === \"ArrayString\"\n          );\n          destructured.push({\n            key,\n            isArray,\n            isNestedObjectArray: isArray && value.items?.type === \"object\" || !!value.items?.anyOf?.some(\n              // @ts-expect-error\n              (x) => x.type === \"object\" || x.type === \"array\"\n            ),\n            isObject: type === \"object\" || anyOf?.some(\n              (v) => v.type === \"string\" && v.format === \"ArrayString\"\n            ),\n            anyOf: !!anyOf\n          });\n        }\n    }\n    if (!destructured.length) {\n      fnLiteral += `if(c.qi === -1) {\n\t\t\t\tc.query = {}\n\t\t\t} else {\n\t\t\t\tc.query = parseQueryFromURL(c.url.slice(c.qi + 1))\n\t\t\t}`;\n    } else {\n      fnLiteral += `if(c.qi !== -1) {\n\t\t\t\tlet url = '&' + c.url.slice(c.qi + 1)\n\n\t\t\t\t${destructured.map(\n        ({\n          key,\n          isArray,\n          isObject: isObject2,\n          isNestedObjectArray,\n          anyOf\n        }, index) => {\n          const init = `${index === 0 ? \"let\" : \"\"} memory = url.indexOf('&${key}=')\n\t\t\t\t\t\t\tlet a${index}\n`;\n          if (isArray)\n            return init + (isNestedObjectArray ? `while (memory !== -1) {\n\t\t\t\t\t\t\t\t\t\t\tconst start = memory + ${key.length + 2}\n\t\t\t\t\t\t\t\t\t\t\tmemory = url.indexOf('&', start)\n\n\t\t\t\t\t\t\t\t\t\t\tif(a${index} === undefined)\n\t\t\t\t\t\t\t\t\t\t\t\ta${index} = ''\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\ta${index} += ','\n\n\t\t\t\t\t\t\t\t\t\t\tlet temp\n\n\t\t\t\t\t\t\t\t\t\t\tif(memory === -1) temp = decodeURIComponent(url.slice(start))\n\t\t\t\t\t\t\t\t\t\t\telse temp = decodeURIComponent(url.slice(start, memory))\n\n\t\t\t\t\t\t\t\t\t\t\tconst charCode = temp.charCodeAt(0)\n\t\t\t\t\t\t\t\t\t\t\tif(charCode !== 91 && charCode !== 123)\n\t\t\t\t\t\t\t\t\t\t\t\ttemp = '\"' + temp + '\"'\n\n\t\t\t\t\t\t\t\t\t\t\ta${index} += temp\n\n\t\t\t\t\t\t\t\t\t\t\tif(memory === -1) break\n\n\t\t\t\t\t\t\t\t\t\t\tmemory = url.indexOf('&${key}=', memory)\n\t\t\t\t\t\t\t\t\t\t\tif(memory === -1) break\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t    if(a${index}.charCodeAt(0) === 91)\n\t\t\t\t\t\t\t\t\t\t\t\ta${index} = JSON.parse(a${index})\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\ta${index} = JSON.parse('[' + a${index} + ']')\n\t\t\t\t\t\t\t\t\t\t} catch {}\n` : `while (memory !== -1) {\n\t\t\t\t\t\t\t\t\t\t\tconst start = memory + ${key.length + 2}\n\t\t\t\t\t\t\t\t\t\t\tmemory = url.indexOf('&', start)\n\n\t\t\t\t\t\t\t\t\t\t\tif(a${index} === undefined)\n\t\t\t\t\t\t\t\t\t\t\t\ta${index} = []\n\n\t\t\t\t\t\t\t\t\t\t\tif(memory === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\ta${index}.push(decodeURIComponent(url.slice(start)))\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse a${index}.push(decodeURIComponent(url.slice(start, memory)))\n\n\t\t\t\t\t\t\t\t\t\t\tmemory = url.indexOf('&${key}=', memory)\n\t\t\t\t\t\t\t\t\t\t\tif(memory === -1) break\n\t\t\t\t\t\t\t\t\t\t}\n`);\n          if (isObject2)\n            return init + `if (memory !== -1) {\n\t\t\t\t\t\t\t\t\t\tconst start = memory + ${key.length + 2}\n\t\t\t\t\t\t\t\t\t\tmemory = url.indexOf('&', start)\n\n\t\t\t\t\t\t\t\t\t\tif(memory === -1) a${index} = decodeURIComponent(url.slice(start))\n\t\t\t\t\t\t\t\t\t\telse a${index} = decodeURIComponent(url.slice(start, memory))\n\n\t\t\t\t\t\t\t\t\t\tif (a${index} !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\ta${index} = JSON.parse(a${index})\n\t\t\t\t\t\t\t\t\t\t\t} catch {}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}`;\n          return init + `if (memory !== -1) {\n\t\t\t\t\t\t\t\t\t\tconst start = memory + ${key.length + 2}\n\t\t\t\t\t\t\t\t\t\tmemory = url.indexOf('&', start)\n\n\t\t\t\t\t\t\t\t\t\tif(memory === -1) a${index} = decodeURIComponent(url.slice(start))\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\ta${index} = decodeURIComponent(url.slice(start, memory))\n\n\t\t\t\t\t\t\t\t\t\t\t${anyOf ? `\n\t\t\t\t\t\t\t\t\t\t\tlet deepMemory = url.indexOf('&${key}=', memory)\n\n\t\t\t\t\t\t\t\t\t\t\tif(deepMemory !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\ta${index} = [a${index}]\n\t\t\t\t\t\t\t\t\t\t\t\tlet first = true\n\n\t\t\t\t\t\t\t\t\t\t\t\twhile(true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst start = deepMemory + ${key.length + 2}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(first)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfirst = false\n\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeepMemory = url.indexOf('&', start)\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet value\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(deepMemory === -1) value = decodeURIComponent(url.slice(start))\n\t\t\t\t\t\t\t\t\t\t\t\t\telse value = decodeURIComponent(url.slice(start, deepMemory))\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst vStart = value.charCodeAt(0)\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst vEnd = value.charCodeAt(value.length - 1)\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif((vStart === 91 && vEnd === 93) || (vStart === 123 && vEnd === 125))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ta${index}.push(JSON.parse(value))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t \ta${index}.push(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(deepMemory === -1) break\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t` : \"\"}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}`;\n        }\n      ).join(\"\\n\")}\n\n\t\t\t\tc.query = {\n\t\t\t\t\t${destructured.map(({ key }, index) => `'${key}': a${index}`).join(\", \")}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tc.query = {}\n\t\t\t}`;\n    }\n  }\n  if (hasTrace) fnLiteral += \"\\nconst id = c[ELYSIA_REQUEST_ID]\\n\";\n  const report = createReport({\n    trace: hooks.trace,\n    addFn: (word) => {\n      fnLiteral += word;\n    }\n  });\n  fnLiteral += \"\\ntry {\\n\";\n  const isAsyncHandler = typeof handler === \"function\" && isAsync(handler);\n  const saveResponse = hasTrace || hooks.afterResponse.length > 0 ? \"c.response = \" : \"\";\n  const maybeAsync = hasCookie || hasBody || isAsyncHandler || hooks.parse.length > 0 || hooks.afterHandle.some(isAsync) || hooks.beforeHandle.some(isAsync) || hooks.transform.some(isAsync) || hooks.mapResponse.some(isAsync);\n  const maybeStream = (typeof handler === \"function\" ? isGenerator(handler) : false) || hooks.beforeHandle.some(isGenerator) || hooks.afterHandle.some(isGenerator) || hooks.transform.some(isGenerator);\n  const hasSet = inference.cookie || inference.set || hasHeaders || hasTrace || validator.response || isHandleFn && hasDefaultHeaders || maybeStream;\n  const requestMapper = `, c.request`;\n  fnLiteral += `c.route = \\`${path}\\`\n`;\n  const parseReporter = report(\"parse\", {\n    total: hooks.parse.length\n  });\n  if (hasBody) {\n    const hasBodyInference = hooks.parse.length || inference.body || validator.body;\n    fnLiteral += \"isParsing = true\\n\";\n    if (hooks.type && !hooks.parse.length) {\n      switch (hooks.type) {\n        case \"json\":\n        case \"application/json\":\n          fnLiteral += `c.body = await c.request.json()`;\n          break;\n        case \"text\":\n        case \"text/plain\":\n          fnLiteral += `c.body = await c.request.text()\n`;\n          break;\n        case \"urlencoded\":\n        case \"application/x-www-form-urlencoded\":\n          fnLiteral += `c.body = parseQuery(await c.request.text())\n`;\n          break;\n        case \"arrayBuffer\":\n        case \"application/octet-stream\":\n          fnLiteral += `c.body = await c.request.arrayBuffer()\n`;\n          break;\n        case \"formdata\":\n        case \"multipart/form-data\":\n          fnLiteral += `c.body = {}\n\n\t\t\t\t\t\tconst form = await c.request.formData()\n\t\t\t\t\t\tfor (const key of form.keys()) {\n\t\t\t\t\t\t\tif (c.body[key])\n\t\t\t\t\t\t\t\tcontinue\n\n\t\t\t\t\t\t\tconst value = form.getAll(key)\n\t\t\t\t\t\t\tif (value.length === 1)\n\t\t\t\t\t\t\t\tc.body[key] = value[0]\n\t\t\t\t\t\t\telse c.body[key] = value\n\t\t\t\t\t\t}\n`;\n          break;\n      }\n    } else if (hasBodyInference) {\n      fnLiteral += \"\\n\";\n      fnLiteral += hasHeaders ? `let contentType = c.headers['content-type']` : `let contentType = c.request.headers.get('content-type')`;\n      fnLiteral += `\n\t\t\t\tif (contentType) {\n\t\t\t\t\tconst index = contentType.indexOf(';')\n\t\t\t\t\tif (index !== -1) contentType = contentType.substring(0, index)\n\n\t\t\t\t\tc.contentType = contentType\n`;\n      if (hooks.parse.length) {\n        fnLiteral += `let used = false\n`;\n        const reporter = report(\"parse\", {\n          total: hooks.parse.length\n        });\n        for (let i = 0; i < hooks.parse.length; i++) {\n          const endUnit = reporter.resolveChild(\n            hooks.parse[i].fn.name\n          );\n          const name = `bo${i}`;\n          if (i !== 0) fnLiteral += `if(!used) {\n`;\n          fnLiteral += `let ${name} = parse[${i}](c, contentType)\n`;\n          fnLiteral += `if(${name} instanceof Promise) ${name} = await ${name}\n`;\n          fnLiteral += `if(${name} !== undefined) { c.body = ${name}; used = true }\n`;\n          endUnit();\n          if (i !== 0) fnLiteral += `}`;\n        }\n        reporter.resolve();\n      }\n      fnLiteral += \"\\ndelete c.contentType\\n\";\n      if (hooks.parse.length) fnLiteral += `if (!used) {`;\n      if (hooks.type && !Array.isArray(hooks.type)) {\n        switch (hooks.type) {\n          case \"json\":\n          case \"application/json\":\n            fnLiteral += `c.body = await c.request.json()`;\n            break;\n          case \"text\":\n          case \"text/plain\":\n            fnLiteral += `c.body = await c.request.text()\n`;\n            break;\n          case \"urlencoded\":\n          case \"application/x-www-form-urlencoded\":\n            fnLiteral += `c.body = parseQuery(await c.request.text())\n`;\n            break;\n          case \"arrayBuffer\":\n          case \"application/octet-stream\":\n            fnLiteral += `c.body = await c.request.arrayBuffer()\n`;\n            break;\n          case \"formdata\":\n          case \"multipart/form-data\":\n            fnLiteral += `c.body = {}\n\n\t\t\t\t\t\t\tconst form = await c.request.formData()\n\t\t\t\t\t\t\tfor (const key of form.keys()) {\n\t\t\t\t\t\t\t\tif (c.body[key])\n\t\t\t\t\t\t\t\t\tcontinue\n\n\t\t\t\t\t\t\t\tconst value = form.getAll(key)\n\t\t\t\t\t\t\t\tif (value.length === 1)\n\t\t\t\t\t\t\t\t\tc.body[key] = value[0]\n\t\t\t\t\t\t\t\telse c.body[key] = value\n\t\t\t\t\t\t\t}\n`;\n            break;\n        }\n      } else {\n        fnLiteral += `\n\t\t\t\t\tswitch (contentType) {\n\t\t\t\t\t\tcase 'application/json':\n\t\t\t\t\t\t\tc.body = await c.request.json()\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase 'text/plain':\n\t\t\t\t\t\t\tc.body = await c.request.text()\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase 'application/x-www-form-urlencoded':\n\t\t\t\t\t\t\tc.body = parseQuery(await c.request.text())\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase 'application/octet-stream':\n\t\t\t\t\t\t\tc.body = await c.request.arrayBuffer();\n\t\t\t\t\t\t\tbreak\n\n\t\t\t\t\t\tcase 'multipart/form-data':\n\t\t\t\t\t\t\tc.body = {}\n\n\t\t\t\t\t\t\tconst form = await c.request.formData()\n\t\t\t\t\t\t\tfor (const key of form.keys()) {\n\t\t\t\t\t\t\t\tif (c.body[key])\n\t\t\t\t\t\t\t\t\tcontinue\n\n\t\t\t\t\t\t\t\tconst value = form.getAll(key)\n\t\t\t\t\t\t\t\tif (value.length === 1)\n\t\t\t\t\t\t\t\t\tc.body[key] = value[0]\n\t\t\t\t\t\t\t\telse c.body[key] = value\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}`;\n      }\n      if (hooks.parse.length) fnLiteral += `}`;\n      fnLiteral += \"}\\n\";\n    }\n    fnLiteral += \"\\nisParsing = false\\n\";\n  }\n  parseReporter.resolve();\n  if (hooks?.transform) {\n    const reporter = report(\"transform\", {\n      total: hooks.transform.length\n    });\n    if (hooks.transform.length) fnLiteral += \"\\nlet transformed\\n\";\n    for (let i = 0; i < hooks.transform.length; i++) {\n      const transform = hooks.transform[i];\n      const endUnit = reporter.resolveChild(transform.fn.name);\n      fnLiteral += isAsync(transform) ? `transformed = await transform[${i}](c)\n` : `transformed = transform[${i}](c)\n`;\n      if (transform.subType === \"mapDerive\")\n        fnLiteral += `if(transformed?.[ELYSIA_RESPONSE])\n\t\t\t\t\tthrow transformed\n\t\t\t\telse {\n\t\t\t\t\ttransformed.request = c.request\n\t\t\t\t\ttransformed.store = c.store\n\t\t\t\t\ttransformed.qi = c.qi\n\t\t\t\t\ttransformed.path = c.path\n\t\t\t\t\ttransformed.url = c.url\n\t\t\t\t\ttransformed.redirect = c.redirect\n\t\t\t\t\ttransformed.set = c.set\n\t\t\t\t\ttransformed.error = c.error\n\n\t\t\t\t\tc = transformed\n\t\t\t}`;\n      else\n        fnLiteral += `if(transformed?.[ELYSIA_RESPONSE])\n\t\t\t\t\tthrow transformed\n\t\t\t\telse\n\t\t\t\t\tObject.assign(c, transformed)\n`;\n      endUnit();\n    }\n    reporter.resolve();\n  }\n  if (validator) {\n    fnLiteral += \"\\n\";\n    if (validator.headers) {\n      if (normalize && \"Clean\" in validator.headers && !hasAdditionalProperties(validator.headers))\n        fnLiteral += \"c.headers = validator.headers.Clean(c.headers);\\n\";\n      if (hasProperty(\"default\", validator.headers.schema))\n        for (const [key, value] of Object.entries(\n          Value4.Default(\n            // @ts-ignore\n            validator.headers.schema,\n            {}\n          )\n        )) {\n          const parsed = typeof value === \"object\" ? JSON.stringify(value) : typeof value === \"string\" ? `'${value}'` : value;\n          if (parsed !== void 0)\n            fnLiteral += `c.headers['${key}'] ??= ${parsed}\n`;\n        }\n      if (isOptional(validator.headers))\n        fnLiteral += `if(isNotEmpty(c.headers)) {`;\n      fnLiteral += `if(validator.headers.Check(c.headers) === false) {\n\t\t\t\t${composeValidation(\"headers\")}\n\t\t\t}`;\n      if (hasTransform(validator.headers.schema))\n        fnLiteral += `c.headers = validator.headers.Decode(c.headers)\n`;\n      if (isOptional(validator.headers)) fnLiteral += \"}\";\n    }\n    if (validator.params) {\n      if (hasProperty(\"default\", validator.params.schema))\n        for (const [key, value] of Object.entries(\n          Value4.Default(\n            // @ts-ignore\n            validator.params.schema,\n            {}\n          )\n        )) {\n          const parsed = typeof value === \"object\" ? JSON.stringify(value) : typeof value === \"string\" ? `'${value}'` : value;\n          if (parsed !== void 0)\n            fnLiteral += `c.params['${key}'] ??= ${parsed}\n`;\n        }\n      fnLiteral += `if(validator.params.Check(c.params) === false) {\n\t\t\t\t${composeValidation(\"params\")}\n\t\t\t}`;\n      if (hasTransform(validator.params.schema))\n        fnLiteral += `\nc.params = validator.params.Decode(c.params)\n`;\n    }\n    if (validator.query) {\n      if (normalize && \"Clean\" in validator.query && !hasAdditionalProperties(validator.query))\n        fnLiteral += \"c.query = validator.query.Clean(c.query);\\n\";\n      if (hasProperty(\"default\", validator.query.schema))\n        for (const [key, value] of Object.entries(\n          Value4.Default(\n            // @ts-ignore\n            validator.query.schema,\n            {}\n          )\n        )) {\n          const parsed = typeof value === \"object\" ? JSON.stringify(value) : typeof value === \"string\" ? `'${value}'` : value;\n          if (parsed !== void 0)\n            fnLiteral += `if(c.query['${key}'] === undefined) c.query['${key}'] = ${parsed}\n`;\n        }\n      if (isOptional(validator.query))\n        fnLiteral += `if(isNotEmpty(c.query)) {`;\n      fnLiteral += `if(validator.query.Check(c.query) === false) {\n          \t\t${composeValidation(\"query\")}\n\t\t\t}`;\n      if (hasTransform(validator.query.schema))\n        fnLiteral += `\nc.query = validator.query.Decode(Object.assign({}, c.query))\n`;\n      if (isOptional(validator.query)) fnLiteral += `}`;\n    }\n    if (validator.body) {\n      if (normalize && \"Clean\" in validator.body && !hasAdditionalProperties(validator.body))\n        fnLiteral += \"c.body = validator.body.Clean(c.body);\\n\";\n      const doesHaveTransform = hasTransform(validator.body.schema);\n      if (doesHaveTransform || isOptional(validator.body))\n        fnLiteral += `\nconst isNotEmptyObject = c.body && (typeof c.body === \"object\" && isNotEmpty(c.body))\n`;\n      if (hasProperty(\"default\", validator.body.schema)) {\n        const value = Value4.Default(\n          // @ts-expect-error private property\n          validator.body.schema,\n          // @ts-expect-error private property\n          validator.body.schema.type === \"object\" ? {} : void 0\n        );\n        const parsed = typeof value === \"object\" ? JSON.stringify(value) : typeof value === \"string\" ? `'${value}'` : value;\n        fnLiteral += `if(validator.body.Check(c.body) === false) {\n\t\t\t\t\tif (typeof c.body === 'object') {\n\t\t\t\t\t\tc.body = Object.assign(${parsed}, c.body)\n\t\t\t\t\t} else { c.body = ${parsed} }`;\n        if (isOptional(validator.body))\n          fnLiteral += `\n\t\t\t\t\t    if(isNotEmptyObject && validator.body.Check(c.body) === false) {\n            \t\t\t\t${composeValidation(\"body\")}\n             \t\t\t}\n                    }`;\n        else\n          fnLiteral += `\n    \t\t\t\tif(validator.body.Check(c.body) === false) {\n        \t\t\t\t${composeValidation(\"body\")}\n         \t\t\t}\n                }`;\n      } else {\n        if (isOptional(validator.body))\n          fnLiteral += `if(isNotEmptyObject && validator.body.Check(c.body) === false) {\n         \t\t\t${composeValidation(\"body\")}\n          \t\t}`;\n        else\n          fnLiteral += `if(validator.body.Check(c.body) === false) {\n         \t\t\t${composeValidation(\"body\")}\n          \t\t}`;\n      }\n      if (doesHaveTransform)\n        fnLiteral += `\nif(isNotEmptyObject) c.body = validator.body.Decode(c.body)\n`;\n    }\n    if (isNotEmpty(\n      // @ts-ignore\n      cookieValidator?.schema?.properties ?? // @ts-ignore\n      cookieValidator?.schema?.schema ?? {}\n    )) {\n      fnLiteral += `const cookieValue = {}\n    \t\t\tfor(const [key, value] of Object.entries(c.cookie))\n    \t\t\t\tcookieValue[key] = value.value\n`;\n      if (hasProperty(\"default\", cookieValidator.schema))\n        for (const [key, value] of Object.entries(\n          Value4.Default(\n            // @ts-ignore\n            cookieValidator.schema,\n            {}\n          )\n        )) {\n          fnLiteral += `cookieValue['${key}'] = ${typeof value === \"object\" ? JSON.stringify(value) : value}\n`;\n        }\n      if (isOptional(validator.cookie))\n        fnLiteral += `if(isNotEmpty(c.cookie)) {`;\n      fnLiteral += `if(validator.cookie.Check(cookieValue) === false) {\n\t\t\t\t${composeValidation(\"cookie\", \"cookieValue\")}\n\t\t\t}`;\n      if (hasTransform(validator.cookie.schema))\n        fnLiteral += `\nfor(const [key, value] of Object.entries(validator.cookie.Decode(cookieValue)))\n\t\t\t\t\tc.cookie[key].value = value\n`;\n      if (isOptional(validator.cookie)) fnLiteral += `}`;\n    }\n  }\n  if (hooks?.beforeHandle) {\n    const reporter = report(\"beforeHandle\", {\n      total: hooks.beforeHandle.length\n    });\n    let hasResolve = false;\n    for (let i = 0; i < hooks.beforeHandle.length; i++) {\n      const beforeHandle = hooks.beforeHandle[i];\n      const endUnit = reporter.resolveChild(beforeHandle.fn.name);\n      const returning = hasReturn(beforeHandle);\n      const isResolver = beforeHandle.subType === \"resolve\" || beforeHandle.subType === \"mapResolve\";\n      if (isResolver) {\n        if (!hasResolve) {\n          hasResolve = true;\n          fnLiteral += \"\\nlet resolved\\n\";\n        }\n        fnLiteral += isAsync(beforeHandle) ? `resolved = await beforeHandle[${i}](c);\n` : `resolved = beforeHandle[${i}](c);\n`;\n        if (beforeHandle.subType === \"mapResolve\")\n          fnLiteral += `if(resolved[ELYSIA_RESPONSE])\n\t\t\t\t\t\tthrow resolved\n\t\t\t\t\telse {\n\t\t\t\t\t\tresolved.request = c.request\n\t\t\t\t\t\tresolved.store = c.store\n\t\t\t\t\t\tresolved.qi = c.qi\n\t\t\t\t\t\tresolved.path = c.path\n\t\t\t\t\t\tresolved.url = c.url\n\t\t\t\t\t\tresolved.redirect = c.redirect\n\t\t\t\t\t\tresolved.set = c.set\n\t\t\t\t\t\tresolved.error = c.error\n\n\t\t\t\t\t\tc = resolved\n\t\t\t\t\t}`;\n        else\n          fnLiteral += `if(resolved[ELYSIA_RESPONSE])\n\t\t\t\t\t\tthrow resolved\n\t\t\t\t\telse\n\t\t\t\t\t\tObject.assign(c, resolved)\n`;\n      } else if (!returning) {\n        fnLiteral += isAsync(beforeHandle) ? `await beforeHandle[${i}](c);\n` : `beforeHandle[${i}](c);\n`;\n        endUnit();\n      } else {\n        fnLiteral += isAsync(beforeHandle) ? `be = await beforeHandle[${i}](c);\n` : `be = beforeHandle[${i}](c);\n`;\n        endUnit(\"be\");\n        fnLiteral += `if(be !== undefined) {\n`;\n        reporter.resolve();\n        if (hooks.afterHandle?.length) {\n          report(\"handle\", {\n            name: isHandleFn ? handler.name : void 0\n          }).resolve();\n          const reporter2 = report(\"afterHandle\", {\n            total: hooks.afterHandle.length\n          });\n          for (let i2 = 0; i2 < hooks.afterHandle.length; i2++) {\n            const hook = hooks.afterHandle[i2];\n            const returning2 = hasReturn(hook);\n            const endUnit2 = reporter2.resolveChild(hook.fn.name);\n            fnLiteral += `c.response = be\n`;\n            if (!returning2) {\n              fnLiteral += isAsync(hook.fn) ? `await afterHandle[${i2}](c, be)\n` : `afterHandle[${i2}](c, be)\n`;\n            } else {\n              fnLiteral += isAsync(hook.fn) ? `af = await afterHandle[${i2}](c)\n` : `af = afterHandle[${i2}](c)\n`;\n              fnLiteral += `if(af !== undefined) { c.response = be = af }\n`;\n            }\n            endUnit2(\"af\");\n          }\n          reporter2.resolve();\n        }\n        if (validator.response)\n          fnLiteral += composeResponseValidation(\"be\");\n        const mapResponseReporter = report(\"mapResponse\", {\n          total: hooks.mapResponse.length\n        });\n        if (hooks.mapResponse.length) {\n          fnLiteral += `\nc.response = be\n`;\n          for (let i2 = 0; i2 < hooks.mapResponse.length; i2++) {\n            const mapResponse2 = hooks.mapResponse[i2];\n            const endUnit2 = mapResponseReporter.resolveChild(\n              mapResponse2.fn.name\n            );\n            fnLiteral += `\nif(mr === undefined) {\n\t\t\t\t\t\t\tmr = ${isAsyncName(mapResponse2) ? \"await\" : \"\"} onMapResponse[${i2}](c)\n\t\t\t\t\t\t\tif(mr !== undefined) be = c.response = mr\n\t\t\t\t\t\t}\n`;\n            endUnit2();\n          }\n        }\n        mapResponseReporter.resolve();\n        fnLiteral += encodeCookie;\n        fnLiteral += `return mapEarlyResponse(${saveResponse} be, c.set ${requestMapper})}\n`;\n      }\n    }\n    reporter.resolve();\n  }\n  if (hooks?.afterHandle.length) {\n    const handleReporter = report(\"handle\", {\n      name: isHandleFn ? handler.name : void 0\n    });\n    if (hooks.afterHandle.length)\n      fnLiteral += isAsyncHandler ? `let r = c.response = await ${handle};\n` : `let r = c.response = ${handle};\n`;\n    else\n      fnLiteral += isAsyncHandler ? `let r = await ${handle};\n` : `let r = ${handle};\n`;\n    handleReporter.resolve();\n    const reporter = report(\"afterHandle\", {\n      total: hooks.afterHandle.length\n    });\n    for (let i = 0; i < hooks.afterHandle.length; i++) {\n      const hook = hooks.afterHandle[i];\n      const returning = hasReturn(hook);\n      const endUnit = reporter.resolveChild(hook.fn.name);\n      if (!returning) {\n        fnLiteral += isAsync(hook.fn) ? `await afterHandle[${i}](c)\n` : `afterHandle[${i}](c)\n`;\n        endUnit();\n      } else {\n        fnLiteral += isAsync(hook.fn) ? `af = await afterHandle[${i}](c)\n` : `af = afterHandle[${i}](c)\n`;\n        endUnit(\"af\");\n        if (validator.response) {\n          fnLiteral += `if(af !== undefined) {`;\n          reporter.resolve();\n          fnLiteral += composeResponseValidation(\"af\");\n          fnLiteral += `c.response = af }`;\n        } else {\n          fnLiteral += `if(af !== undefined) {`;\n          reporter.resolve();\n          fnLiteral += `c.response = af}\n`;\n        }\n      }\n    }\n    reporter.resolve();\n    fnLiteral += `r = c.response\n`;\n    if (validator.response) fnLiteral += composeResponseValidation();\n    fnLiteral += encodeCookie;\n    const mapResponseReporter = report(\"mapResponse\", {\n      total: hooks.mapResponse.length\n    });\n    if (hooks.mapResponse.length) {\n      for (let i = 0; i < hooks.mapResponse.length; i++) {\n        const mapResponse2 = hooks.mapResponse[i];\n        const endUnit = mapResponseReporter.resolveChild(\n          mapResponse2.fn.name\n        );\n        fnLiteral += `\nmr = ${isAsyncName(mapResponse2) ? \"await\" : \"\"} onMapResponse[${i}](c)\n\t\t\t\tif(mr !== undefined) r = c.response = mr\n`;\n        endUnit();\n      }\n    }\n    mapResponseReporter.resolve();\n    if (hasSet)\n      fnLiteral += `return mapResponse(${saveResponse} r, c.set ${requestMapper})\n`;\n    else\n      fnLiteral += `return mapCompactResponse(${saveResponse} r ${requestMapper})\n`;\n  } else {\n    const handleReporter = report(\"handle\", {\n      name: isHandleFn ? handler.name : void 0\n    });\n    if (validator.response || hooks.mapResponse.length) {\n      fnLiteral += isAsyncHandler ? `let r = await ${handle};\n` : `let r = ${handle};\n`;\n      handleReporter.resolve();\n      if (validator.response) fnLiteral += composeResponseValidation();\n      report(\"afterHandle\").resolve();\n      const mapResponseReporter = report(\"mapResponse\", {\n        total: hooks.mapResponse.length\n      });\n      if (hooks.mapResponse.length) {\n        fnLiteral += \"\\nc.response = r\\n\";\n        for (let i = 0; i < hooks.mapResponse.length; i++) {\n          const mapResponse2 = hooks.mapResponse[i];\n          const endUnit = mapResponseReporter.resolveChild(\n            mapResponse2.fn.name\n          );\n          fnLiteral += `\nif(mr === undefined) {\n\t\t\t\t\t\tmr = ${isAsyncName(mapResponse2) ? \"await\" : \"\"} onMapResponse[${i}](c)\n    \t\t\t\t\tif(mr !== undefined) r = c.response = mr\n\t\t\t\t\t}\n`;\n          endUnit();\n        }\n      }\n      mapResponseReporter.resolve();\n      fnLiteral += encodeCookie;\n      if (handler instanceof Response) {\n        fnLiteral += inference.set ? `if(\n\t\t\t\t\tisNotEmpty(c.set.headers) ||\n\t\t\t\t\tc.set.status !== 200 ||\n\t\t\t\t\tc.set.redirect ||\n\t\t\t\t\tc.set.cookie\n\t\t\t\t)\n\t\t\t\t\treturn mapResponse(${saveResponse} ${handle}.clone(), c.set ${requestMapper})\n\t\t\t\telse\n\t\t\t\t\treturn ${handle}.clone()` : `return ${handle}.clone()`;\n        fnLiteral += \"\\n\";\n      } else if (hasSet)\n        fnLiteral += `return mapResponse(${saveResponse} r, c.set ${requestMapper})\n`;\n      else\n        fnLiteral += `return mapCompactResponse(${saveResponse} r ${requestMapper})\n`;\n    } else if (hasCookie || hasTrace) {\n      fnLiteral += isAsyncHandler ? `let r = await ${handle};\n` : `let r = ${handle};\n`;\n      handleReporter.resolve();\n      report(\"afterHandle\").resolve();\n      const mapResponseReporter = report(\"mapResponse\", {\n        total: hooks.mapResponse.length\n      });\n      if (hooks.mapResponse.length) {\n        fnLiteral += \"\\nc.response = r\\n\";\n        for (let i = 0; i < hooks.mapResponse.length; i++) {\n          const mapResponse2 = hooks.mapResponse[i];\n          const endUnit = mapResponseReporter.resolveChild(\n            mapResponse2.fn.name\n          );\n          fnLiteral += `\nif(mr === undefined) {\n\t\t\t\t\t\t\tmr = ${isAsyncName(mapResponse2) ? \"await\" : \"\"} onMapResponse[${i}](c)\n    \t\t\t\t\t\tif(mr !== undefined) r = c.response = mr\n\t\t\t\t\t\t}\n`;\n          endUnit();\n        }\n      }\n      mapResponseReporter.resolve();\n      fnLiteral += encodeCookie;\n      if (hasSet)\n        fnLiteral += `return mapResponse(${saveResponse} r, c.set ${requestMapper})\n`;\n      else\n        fnLiteral += `return mapCompactResponse(${saveResponse} r ${requestMapper})\n`;\n    } else {\n      handleReporter.resolve();\n      const handled = isAsyncHandler ? `await ${handle}` : handle;\n      report(\"afterHandle\").resolve();\n      if (handler instanceof Response) {\n        fnLiteral += inference.set ? `if(\n\t\t\t\t\tisNotEmpty(c.set.headers) ||\n\t\t\t\t\tc.set.status !== 200 ||\n\t\t\t\t\tc.set.redirect ||\n\t\t\t\t\tc.set.cookie\n\t\t\t\t)\n\t\t\t\t\treturn mapResponse(${saveResponse} ${handle}.clone(), c.set ${requestMapper})\n\t\t\t\telse\n\t\t\t\t\treturn ${handle}.clone()` : `return ${handle}.clone()`;\n        fnLiteral += \"\\n\";\n      } else if (hasSet)\n        fnLiteral += `return mapResponse(${saveResponse} ${handled}, c.set ${requestMapper})\n`;\n      else\n        fnLiteral += `return mapCompactResponse(${saveResponse} ${handled} ${requestMapper})\n`;\n    }\n  }\n  fnLiteral += `\n} catch(error) {`;\n  if (hasBody) fnLiteral += `\nif(isParsing) error = new ParseError()\n`;\n  if (!maybeAsync) fnLiteral += `\nreturn (async () => {\n`;\n  fnLiteral += `\nconst set = c.set\nif (!set.status || set.status < 300) set.status = error?.status || 500\n`;\n  if (hasTrace)\n    for (let i = 0; i < hooks.trace.length; i++)\n      fnLiteral += `report${i}?.resolve(error);reportChild${i}?.(error);\n`;\n  const errorReporter = report(\"error\", {\n    total: hooks.error.length\n  });\n  if (hooks.error.length) {\n    fnLiteral += `\n\t\t\t\tc.error = error\n\t\t\t\tc.code = error.code ?? error[ERROR_CODE] ?? \"UNKNOWN\"\n\t\t\t\tlet er\n\t\t\t`;\n    for (let i = 0; i < hooks.error.length; i++) {\n      const endUnit = errorReporter.resolveChild(hooks.error[i].fn.name);\n      if (isAsync(hooks.error[i]))\n        fnLiteral += `\ner = await handleErrors[${i}](c)\n`;\n      else\n        fnLiteral += `\ner = handleErrors[${i}](c)\nif (er instanceof Promise) er = await er\n`;\n      endUnit();\n      const mapResponseReporter = report(\"mapResponse\", {\n        total: hooks.mapResponse.length\n      });\n      if (hooks.mapResponse.length) {\n        for (let i2 = 0; i2 < hooks.mapResponse.length; i2++) {\n          const mapResponse2 = hooks.mapResponse[i2];\n          const endUnit2 = mapResponseReporter.resolveChild(\n            mapResponse2.fn.name\n          );\n          fnLiteral += `\nc.response = er\n\n\t\t\t\t\t\t\ter = ${isAsyncName(mapResponse2) ? \"await\" : \"\"} onMapResponse[${i2}](c)\n\t\t\t\t\t\t\tif(er instanceof Promise) er = await er\n`;\n          endUnit2();\n        }\n      }\n      mapResponseReporter.resolve();\n      fnLiteral += `er = mapEarlyResponse(er, set ${requestMapper})\n`;\n      fnLiteral += `if (er) {`;\n      if (hasTrace) {\n        for (let i2 = 0; i2 < hooks.trace.length; i2++)\n          fnLiteral += `\nreport${i2}.resolve()\n`;\n        errorReporter.resolve();\n      }\n      fnLiteral += `return er\n}\n`;\n    }\n  }\n  errorReporter.resolve();\n  fnLiteral += `return handleError(c, error, true)\n`;\n  if (!maybeAsync) fnLiteral += \"})()\";\n  fnLiteral += \"}\";\n  if (hasAfterResponse || hasTrace) {\n    fnLiteral += ` finally { `;\n    if (!maybeAsync) fnLiteral += \";(async () => {\";\n    const reporter = report(\"afterResponse\", {\n      total: hooks.afterResponse.length\n    });\n    if (hasAfterResponse) {\n      for (let i = 0; i < hooks.afterResponse.length; i++) {\n        const endUnit = reporter.resolveChild(\n          hooks.afterResponse[i].fn.name\n        );\n        fnLiteral += `\nawait afterResponse[${i}](c);\n`;\n        endUnit();\n      }\n    }\n    reporter.resolve();\n    if (!maybeAsync) fnLiteral += \"})();\";\n    fnLiteral += `}`;\n  }\n  fnLiteral = `const {\n\t\thandler,\n\t\thandleError,\n\t\thooks: {\n\t\t\ttransform,\n\t\t\tresolve,\n\t\t\tbeforeHandle,\n\t\t\tafterHandle,\n\t\t\tmapResponse: onMapResponse,\n\t\t\tparse,\n\t\t\terror: handleErrors,\n\t\t\tafterResponse,\n\t\t\ttrace: _trace\n\t\t},\n\t\tvalidator,\n\t\tutils: {\n\t\t\tmapResponse,\n\t\t\tmapCompactResponse,\n\t\t\tmapEarlyResponse,\n\t\t\tparseQuery,\n\t\t\tparseQueryFromURL,\n\t\t\tisNotEmpty\n\t\t},\n\t\terror: {\n\t\t\tNotFoundError,\n\t\t\tValidationError,\n\t\t\tInternalServerError,\n\t\t\tParseError\n\t\t},\n\t\tschema,\n\t\tdefinitions,\n\t\tERROR_CODE,\n\t\tparseCookie,\n\t\tsignCookie,\n\t\tdecodeURIComponent,\n\t\tELYSIA_RESPONSE,\n\t\tELYSIA_TRACE,\n\t\tELYSIA_REQUEST_ID,\n\t\tgetServer\n\t} = hooks\n\n\tconst trace = _trace.map(x => typeof x === 'function' ? x : x.fn)\n\n\treturn ${maybeAsync ? \"async\" : \"\"} function handle(c) {\n\t\t${hooks.beforeHandle.length ? \"let be\" : \"\"}\n\t\t${hooks.afterHandle.length ? \"let af\" : \"\"}\n\t\t${hooks.mapResponse.length ? \"let mr\" : \"\"}\n\n\t\t${allowMeta ? \"c.schema = schema; c.defs = definitions\" : \"\"}\n\t\t${fnLiteral}\n\t}`;\n  try {\n    return Function(\n      \"hooks\",\n      fnLiteral\n    )({\n      handler,\n      hooks: lifeCycleToFn(hooks),\n      validator,\n      // @ts-expect-error\n      handleError: app.handleError,\n      utils: {\n        mapResponse,\n        mapCompactResponse,\n        mapEarlyResponse,\n        parseQuery,\n        parseQueryFromURL,\n        isNotEmpty\n      },\n      error: {\n        NotFoundError,\n        ValidationError,\n        InternalServerError,\n        ParseError\n      },\n      schema: app.router.history,\n      // @ts-expect-error\n      definitions: app.definitions.type,\n      ERROR_CODE,\n      parseCookie,\n      signCookie,\n      decodeURIComponent: decodeURIComponent2,\n      ELYSIA_RESPONSE,\n      ELYSIA_TRACE,\n      ELYSIA_REQUEST_ID,\n      // @ts-expect-error private property\n      getServer: () => app.getServer()\n    });\n  } catch {\n    const debugHooks = lifeCycleToFn(hooks);\n    console.log(\"[Composer] failed to generate optimized handler\");\n    console.log(\n      \"Please report the following to SaltyAom privately as it may include sensitive information about your codebase:\"\n    );\n    console.log(\"---\");\n    console.log({\n      handler: typeof handler === \"function\" ? handler.toString() : handler,\n      hooks: {\n        ...debugHooks,\n        // @ts-expect-error\n        transform: debugHooks?.transform?.map?.((x) => x.toString()),\n        // @ts-expect-error\n        resolve: debugHooks?.resolve?.map?.((x) => x.toString()),\n        // @ts-expect-error\n        beforeHandle: debugHooks?.beforeHandle?.map?.(\n          (x) => x.toString()\n        ),\n        // @ts-expect-error\n        afterHandle: debugHooks?.afterHandle?.map?.(\n          (x) => x.toString()\n        ),\n        // @ts-expect-error\n        mapResponse: debugHooks?.mapResponse?.map?.(\n          (x) => x.toString()\n        ),\n        // @ts-expect-error\n        parse: debugHooks?.parse?.map?.((x) => x.toString()),\n        // @ts-expect-error\n        error: debugHooks?.error?.map?.((x) => x.toString()),\n        // @ts-expect-error\n        afterResponse: debugHooks?.afterResponse?.map?.(\n          (x) => x.toString()\n        ),\n        // @ts-expect-error\n        stop: debugHooks?.stop?.map?.((x) => x.toString())\n      },\n      validator,\n      // @ts-expect-error\n      definitions: app.definitions.type\n    });\n    console.log(\"---\");\n    process.exit(1);\n  }\n};\nvar composeGeneralHandler = (app) => {\n  let decoratorsLiteral = \"\";\n  let fnLiteral = \"\";\n  const defaultHeaders = app.setHeaders;\n  for (const key of Object.keys(app.singleton.decorator))\n    decoratorsLiteral += `,${key}: app.singleton.decorator.${key}`;\n  const router = app.router;\n  const hasTrace = app.event.trace.length > 0;\n  let findDynamicRoute = `\n\tconst route = router.find(request.method, path) ${router.http.root.ALL ? '?? router.find(\"ALL\", path)' : \"\"}\n\n\tif (route === null)\n\t\treturn ${app.event.error.length ? `app.handleError(ctx, notFound)` : app.event.request.length ? `new Response(error404Message, {\n\t\t\t\t\tstatus: ctx.set.status === 200 ? 404 : ctx.set.status,\n\t\t\t\t\theaders: ctx.set.headers\n\t\t\t\t})` : `error404.clone()`}\n\n\tctx.params = route.params\n`;\n  findDynamicRoute += `if(route.store.handler) return route.store.handler(ctx)\n\treturn (route.store.handler = route.store.compile())(ctx)\n`;\n  let switchMap = ``;\n  for (const [path, { code, all }] of Object.entries(router.static.http.map))\n    switchMap += `case '${path}':\nswitch(request.method) {\n${code}\n${all ?? `default: break map`}}\n\n`;\n  const maybeAsync = app.event.request.some(isAsync);\n  fnLiteral += `const {\n\t\tapp,\n\t\tmapEarlyResponse,\n\t\tNotFoundError,\n\t\trandomId,\n\t\thandleError,\n\t\terror,\n\t\tredirect,\n\t\tELYSIA_TRACE,\n\t\tELYSIA_REQUEST_ID,\n\t\tgetServer\n\t} = data\n\n\tconst store = app.singleton.store\n\tconst staticRouter = app.router.static.http\n\tconst st = staticRouter.handlers\n\tconst wsRouter = app.router.ws\n\tconst router = app.router.http\n\tconst trace = app.event.trace.map(x => typeof x === 'function' ? x : x.fn)\n\n\tconst notFound = new NotFoundError()\n\tconst hoc = app.extender.higherOrderFunctions.map(x => x.fn)\n\n\t${app.event.request.length ? `const onRequest = app.event.request.map(x => x.fn)` : \"\"}\n\t${app.event.error.length ? \"\" : `\nconst error404Message = notFound.message.toString()\n\tconst error404 = new Response(error404Message, { status: 404 });\n`}\n\n\t${app.event.trace.length ? `const ${app.event.trace.map((_, i) => `tr${i} = app.event.trace[${i}].fn`).join(\",\")}` : \"\"}\n\n\t${maybeAsync ? \"async\" : \"\"} function map(request) {\n`;\n  if (app.event.request.length) fnLiteral += `let re`;\n  fnLiteral += `\nconst url = request.url\n\t\tconst s = url.indexOf('/', 11)\n\t\tconst qi = url.indexOf('?', s + 1)\n\t\tlet path\n\t\tif(qi === -1)\n\t\t\tpath = url.substring(s)\n\t\telse\n\t\t\tpath = url.substring(s, qi)\n`;\n  fnLiteral += `${hasTrace ? \"const id = randomId()\" : \"\"}\n\t\tconst ctx = {\n\t\t\trequest,\n\t\t\tstore,\n\t\t\tqi,\n\t\t\tpath,\n\t\t\turl,\n\t\t\tredirect,\n\t\t\tset: {\n\t\t\t\theaders: ${Object.keys(defaultHeaders ?? {}).length ? \"Object.assign({}, app.setHeaders)\" : \"{}\"},\n\t\t\t\tstatus: 200\n\t\t\t},\n\t\t\terror\n\t\t\t${// @ts-expect-error private property\n  app.inference.server ? `, get server() {\n\t\t\t\t\t\t\treturn getServer()\n\t\t\t\t\t\t}` : \"\"}\n\t\t\t${hasTrace ? \",[ELYSIA_REQUEST_ID]: id\" : \"\"}\n\t\t\t${decoratorsLiteral}\n\t\t}\n`;\n  if (app.event.trace.length)\n    fnLiteral += `\nctx[ELYSIA_TRACE] = [${app.event.trace.map((_, i) => `tr${i}(ctx)`).join(\",\")}]\n`;\n  const report = createReport({\n    context: \"ctx\",\n    trace: app.event.trace,\n    addFn: (word) => {\n      fnLiteral += word;\n    }\n  });\n  const reporter = report(\"request\", {\n    attribute: \"ctx\",\n    total: app.event.request.length\n  });\n  if (app.event.request.length) {\n    fnLiteral += `\n try {\n`;\n    for (let i = 0; i < app.event.request.length; i++) {\n      const hook = app.event.request[i];\n      const withReturn = hasReturn(hook);\n      const maybeAsync2 = isAsync(hook);\n      const endUnit = reporter.resolveChild(app.event.request[i].fn.name);\n      if (withReturn) {\n        fnLiteral += `re = mapEarlyResponse(\n\t\t\t\t\t${maybeAsync2 ? \"await\" : \"\"} onRequest[${i}](ctx),\n\t\t\t\t\tctx.set,\n\t\t\t\t\trequest\n\t\t\t\t)\n`;\n        endUnit(\"re\");\n        fnLiteral += `if(re !== undefined) return re\n`;\n      } else {\n        fnLiteral += `${maybeAsync2 ? \"await\" : \"\"} onRequest[${i}](ctx)\n`;\n        endUnit();\n      }\n    }\n    fnLiteral += `} catch (error) {\n\t\t\treturn app.handleError(ctx, error)\n\t\t}`;\n  }\n  reporter.resolve();\n  const wsPaths = app.router.static.ws;\n  const wsRouter = app.router.ws;\n  if (Object.keys(wsPaths).length || wsRouter.history.length) {\n    fnLiteral += `\n\t\t\tif(request.method === 'GET') {\n\t\t\t\tswitch(path) {`;\n    for (const [path, index] of Object.entries(wsPaths)) {\n      fnLiteral += `\n\t\t\t\t\tcase '${path}':\n\t\t\t\t\t\tif(request.headers.get('upgrade') === 'websocket')\n\t\t\t\t\t\t\treturn st[${index}](ctx)\n\n\t\t\t\t\t\tbreak`;\n    }\n    fnLiteral += `\n\t\t\t\tdefault:\n\t\t\t\t\tif(request.headers.get('upgrade') === 'websocket') {\n\t\t\t\t\t\tconst route = wsRouter.find('ws', path)\n\n\t\t\t\t\t\tif(route) {\n\t\t\t\t\t\t\tctx.params = route.params\n\n\t\t\t\t\t\t\tif(route.store.handler)\n\t\t\t\t\t\t\t    return route.store.handler(ctx)\n\n\t\t\t\t\t\t\treturn (route.store.handler = route.store.compile())(ctx)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n`;\n  }\n  fnLiteral += `\n\t\tmap: switch(path) {\n\t\t\t${switchMap}\n\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\n\t\t${findDynamicRoute}\n\t}\n`;\n  if (app.extender.higherOrderFunctions.length) {\n    let handler = \"map\";\n    for (let i = 0; i < app.extender.higherOrderFunctions.length; i++)\n      handler = `hoc[${i}](${handler}, request)`;\n    fnLiteral += `return function hocMap(request) { return ${handler}(request) }`;\n  } else fnLiteral += `return map`;\n  const handleError = composeErrorHandler(app);\n  app.handleError = handleError;\n  return Function(\n    \"data\",\n    fnLiteral\n  )({\n    app,\n    mapEarlyResponse,\n    NotFoundError,\n    randomId,\n    handleError,\n    error,\n    redirect,\n    ELYSIA_TRACE,\n    ELYSIA_REQUEST_ID,\n    // @ts-expect-error private property\n    getServer: () => app.getServer()\n  });\n};\nvar composeErrorHandler = (app) => {\n  const hooks = app.event;\n  let fnLiteral = \"\";\n  fnLiteral += `const {\n\t\tapp: { event: { error: onErrorContainer, afterResponse: resContainer, mapResponse: _onMapResponse, trace: _trace } },\n\t\tmapResponse,\n\t\tERROR_CODE,\n\t\tELYSIA_RESPONSE,\n\t\tELYSIA_TRACE,\n\t\tELYSIA_REQUEST_ID\n\t} = inject\n\n\tconst trace = _trace.map(x => typeof x === 'function' ? x : x.fn)\n\tconst onMapResponse = []\n\n\tfor(let i = 0; i < _onMapResponse.length; i++)\n\t\tonMapResponse.push(_onMapResponse[i].fn ?? _onMapResponse[i])\n\n\tdelete _onMapResponse\n\n\tconst onError = onErrorContainer.map(x => x.fn)\n\tconst res = resContainer.map(x => x.fn)\n\n\treturn ${app.event.error.find(isAsync) || app.event.mapResponse.find(isAsync) ? \"async\" : \"\"} function(context, error, skipGlobal) {`;\n  const hasTrace = app.event.trace.length > 0;\n  if (hasTrace) fnLiteral += \"\\nconst id = context[ELYSIA_REQUEST_ID]\\n\";\n  const report = createReport({\n    context: \"context\",\n    trace: hooks.trace,\n    addFn: (word) => {\n      fnLiteral += word;\n    }\n  });\n  fnLiteral += `\n\t\tconst set = context.set\n\t\tlet r\n\n\t\tif(!context.code)\n\t\t\tcontext.code = error.code ?? error[ERROR_CODE]\n\n\t\tif(!context.error)\n\t\t\tcontext.error = error\n\n\t\tif(typeof error === \"object\" && error && ELYSIA_RESPONSE in error) {\n\t\t\terror.status = error[ELYSIA_RESPONSE]\n\t\t\terror.message = error.response\n\t\t}\n`;\n  const saveResponse = hasTrace || hooks.afterResponse.length > 0 || hooks.afterResponse.length > 0 ? \"context.response = \" : \"\";\n  for (let i = 0; i < app.event.error.length; i++) {\n    const handler = app.event.error[i];\n    const response = `${isAsync(handler) ? \"await \" : \"\"}onError[${i}](context)`;\n    fnLiteral += \"\\nif(skipGlobal !== true) {\\n\";\n    if (hasReturn(handler)) {\n      fnLiteral += `r = ${response}; if(r !== undefined) {\n\t\t\t\tif(r instanceof Response) return r\n\n\t\t\t\tif(r[ELYSIA_RESPONSE]) {\n\t\t\t\t\terror.status = error[ELYSIA_RESPONSE]\n\t\t\t\t\terror.message = error.response\n\t\t\t\t}\n\n\t\t\t\tif(set.status === 200) set.status = error.status\n`;\n      const mapResponseReporter2 = report(\"mapResponse\", {\n        total: hooks.mapResponse.length,\n        name: \"context\"\n      });\n      if (hooks.mapResponse.length) {\n        for (let i2 = 0; i2 < hooks.mapResponse.length; i2++) {\n          const mapResponse2 = hooks.mapResponse[i2];\n          const endUnit = mapResponseReporter2.resolveChild(\n            mapResponse2.fn.name\n          );\n          fnLiteral += `\ncontext.response = r\n\t\t\t\t\t\tr = ${isAsyncName(mapResponse2) ? \"await\" : \"\"} onMapResponse[${i2}](context)\n`;\n          endUnit();\n        }\n      }\n      mapResponseReporter2.resolve();\n      fnLiteral += `return mapResponse(${saveResponse} r, set, context.request)}\n`;\n    } else fnLiteral += response + \"\\n\";\n    fnLiteral += \"\\n}\\n\";\n  }\n  fnLiteral += `if(error.constructor.name === \"ValidationError\" || error.constructor.name === \"TransformDecodeError\") {\n\t\tset.status = error.status ?? 422\n\t\treturn new Response(\n\t\t\terror.message,\n\t\t\t{\n\t\t\t\theaders: Object.assign(\n\t\t\t\t\t{ 'content-type': 'application/json'},\n\t\t\t\t\tset.headers\n\t\t\t\t),\n\t\t\t\tstatus: set.status\n\t\t\t}\n\t\t)\n\t} else {\n\t\tif(error.code && typeof error.status === \"number\")\n\t\t\treturn new Response(\n\t\t\t\terror.message,\n\t\t\t\t{ headers: set.headers, status: error.status }\n\t\t\t)\n`;\n  const mapResponseReporter = report(\"mapResponse\", {\n    total: hooks.mapResponse.length,\n    name: \"context\"\n  });\n  if (hooks.mapResponse.length) {\n    for (let i = 0; i < hooks.mapResponse.length; i++) {\n      const mapResponse2 = hooks.mapResponse[i];\n      const endUnit = mapResponseReporter.resolveChild(\n        mapResponse2.fn.name\n      );\n      fnLiteral += `\ncontext.response = error\n\t\t\terror = ${isAsyncName(mapResponse2) ? \"await\" : \"\"} onMapResponse[${i}](context)\n`;\n      endUnit();\n    }\n  }\n  mapResponseReporter.resolve();\n  fnLiteral += `\nreturn mapResponse(${saveResponse} error, set, context.request)\n}\n}`;\n  return Function(\n    \"inject\",\n    fnLiteral\n  )({\n    app,\n    mapResponse,\n    ERROR_CODE,\n    ELYSIA_RESPONSE,\n    ELYSIA_TRACE,\n    ELYSIA_REQUEST_ID\n  });\n};\n\n// src/dynamic-handle.ts\nvar createDynamicHandler = (app) => async (request) => {\n  const url = request.url, s = url.indexOf(\"/\", 11), qi = url.indexOf(\"?\", s + 1), path = qi === -1 ? url.substring(s) : url.substring(s, qi);\n  const set = {\n    cookie: {},\n    status: 200,\n    headers: {}\n  };\n  const context = Object.assign(\n    {},\n    // @ts-expect-error\n    app.singleton.decorator,\n    {\n      set,\n      // @ts-expect-error\n      store: app.singleton.store,\n      request,\n      path,\n      qi,\n      redirect\n    }\n  );\n  try {\n    for (let i = 0; i < app.event.request.length; i++) {\n      const onRequest = app.event.request[i].fn;\n      let response2 = onRequest(context);\n      if (response2 instanceof Promise) response2 = await response2;\n      response2 = mapEarlyResponse(response2, set);\n      if (response2) return context.response = response2;\n    }\n    const handler = app.router.dynamic.find(request.method, path) ?? app.router.dynamic.find(\"ALL\", path);\n    if (!handler) throw new NotFoundError();\n    const { handle, hooks, validator, content } = handler.store;\n    let body;\n    if (request.method !== \"GET\" && request.method !== \"HEAD\") {\n      if (content) {\n        switch (content) {\n          case \"application/json\":\n            body = await request.json();\n            break;\n          case \"text/plain\":\n            body = await request.text();\n            break;\n          case \"application/x-www-form-urlencoded\":\n            body = parseQuery(await request.text());\n            break;\n          case \"application/octet-stream\":\n            body = await request.arrayBuffer();\n            break;\n          case \"multipart/form-data\":\n            body = {};\n            const form2 = await request.formData();\n            for (const key of form2.keys()) {\n              if (body[key]) continue;\n              const value = form2.getAll(key);\n              if (value.length === 1) body[key] = value[0];\n              else body[key] = value;\n            }\n            break;\n        }\n      } else {\n        let contentType = request.headers.get(\"content-type\");\n        if (contentType) {\n          const index = contentType.indexOf(\";\");\n          if (index !== -1)\n            contentType = contentType.slice(0, index);\n          context.contentType = contentType;\n          for (let i = 0; i < hooks.parse.length; i++) {\n            const hook = hooks.parse[i].fn;\n            let temp = hook(context, contentType);\n            if (temp instanceof Promise) temp = await temp;\n            if (temp) {\n              body = temp;\n              break;\n            }\n          }\n          delete context.contentType;\n          if (body === void 0) {\n            switch (contentType) {\n              case \"application/json\":\n                body = await request.json();\n                break;\n              case \"text/plain\":\n                body = await request.text();\n                break;\n              case \"application/x-www-form-urlencoded\":\n                body = parseQuery(await request.text());\n                break;\n              case \"application/octet-stream\":\n                body = await request.arrayBuffer();\n                break;\n              case \"multipart/form-data\":\n                body = {};\n                const form2 = await request.formData();\n                for (const key of form2.keys()) {\n                  if (body[key]) continue;\n                  const value = form2.getAll(key);\n                  if (value.length === 1)\n                    body[key] = value[0];\n                  else body[key] = value;\n                }\n                break;\n            }\n          }\n        }\n      }\n    }\n    context.body = body;\n    context.params = handler?.params || void 0;\n    context.query = qi === -1 ? {} : parseQueryFromURL(url.substring(qi + 1));\n    context.headers = {};\n    for (const [key, value] of request.headers.entries())\n      context.headers[key] = value;\n    const cookieMeta = Object.assign(\n      {},\n      app.config?.cookie,\n      // @ts-expect-error\n      validator?.cookie?.config\n    );\n    const cookieHeaderValue = request.headers.get(\"cookie\");\n    context.cookie = await parseCookie(\n      context.set,\n      cookieHeaderValue,\n      cookieMeta ? {\n        secrets: cookieMeta.secrets !== void 0 ? typeof cookieMeta.secrets === \"string\" ? cookieMeta.secrets : cookieMeta.secrets.join(\",\") : void 0,\n        sign: cookieMeta.sign === true ? true : cookieMeta.sign !== void 0 ? typeof cookieMeta.sign === \"string\" ? cookieMeta.sign : cookieMeta.sign.join(\",\") : void 0\n      } : void 0\n    );\n    for (let i = 0; i < hooks.transform.length; i++) {\n      const hook = hooks.transform[i];\n      const operation = hook.fn(context);\n      if (hook.subType === \"derive\") {\n        if (operation instanceof Promise)\n          Object.assign(context, await operation);\n        else Object.assign(context, operation);\n      } else if (operation instanceof Promise) await operation;\n    }\n    if (validator) {\n      if (validator.createHeaders?.()) {\n        const _header = {};\n        for (const key in request.headers)\n          _header[key] = request.headers.get(key);\n        if (validator.headers.Check(_header) === false)\n          throw new ValidationError(\n            \"header\",\n            validator.headers,\n            _header\n          );\n      }\n      if (validator.createParams?.()?.Check(context.params) === false)\n        throw new ValidationError(\n          \"params\",\n          validator.params,\n          context.params\n        );\n      if (validator.createQuery?.()?.Check(context.query) === false)\n        throw new ValidationError(\n          \"query\",\n          validator.query,\n          context.query\n        );\n      if (validator.createCookie?.()) {\n        const cookieValue = {};\n        for (const [key, value] of Object.entries(context.cookie))\n          cookieValue[key] = value.value;\n        if (validator.cookie.Check(cookieValue) === false)\n          throw new ValidationError(\n            \"cookie\",\n            validator.cookie,\n            cookieValue\n          );\n      }\n      if (validator.createBody?.()?.Check(body) === false)\n        throw new ValidationError(\"body\", validator.body, body);\n    }\n    for (let i = 0; i < hooks.beforeHandle.length; i++) {\n      let response2 = hooks.beforeHandle[i].fn(context);\n      if (response2 instanceof Promise) response2 = await response2;\n      if (response2 !== void 0) {\n        ;\n        context.response = response2;\n        for (let i2 = 0; i2 < hooks.afterHandle.length; i2++) {\n          let newResponse = hooks.afterHandle[i2].fn(\n            context\n          );\n          if (newResponse instanceof Promise)\n            newResponse = await newResponse;\n          if (newResponse) response2 = newResponse;\n        }\n        const result = mapEarlyResponse(response2, context.set);\n        if (result) return context.response = result;\n      }\n    }\n    let response = handle(context);\n    if (response instanceof Promise) response = await response;\n    if (!hooks.afterHandle.length) {\n      const status = response?.[ELYSIA_RESPONSE] ?? (set.status ? typeof set.status === \"string\" ? StatusMap[set.status] : set.status : 200);\n      const responseValidator = validator?.createResponse?.()?.[status];\n      if (responseValidator?.Check(response) === false)\n        throw new ValidationError(\n          \"response\",\n          responseValidator,\n          response\n        );\n    } else {\n      ;\n      context.response = response;\n      for (let i = 0; i < hooks.afterHandle.length; i++) {\n        let newResponse = hooks.afterHandle[i].fn(\n          context\n        );\n        if (newResponse instanceof Promise)\n          newResponse = await newResponse;\n        const result = mapEarlyResponse(newResponse, context.set);\n        if (result !== void 0) {\n          const responseValidator = validator?.response?.[result.status];\n          if (responseValidator?.Check(result) === false)\n            throw new ValidationError(\n              \"response\",\n              responseValidator,\n              result\n            );\n          return context.response = result;\n        }\n      }\n    }\n    if (context.set.cookie && cookieMeta?.sign) {\n      const secret = !cookieMeta.secrets ? void 0 : typeof cookieMeta.secrets === \"string\" ? cookieMeta.secrets : cookieMeta.secrets[0];\n      if (cookieMeta.sign === true)\n        for (const [key, cookie] of Object.entries(\n          context.set.cookie\n        ))\n          context.set.cookie[key].value = await signCookie(\n            cookie.value,\n            \"${secret}\"\n          );\n      else {\n        const properties = validator?.cookie?.schema?.properties;\n        for (const name of cookieMeta.sign) {\n          if (!(name in properties)) continue;\n          if (context.set.cookie[name]?.value) {\n            context.set.cookie[name].value = await signCookie(\n              context.set.cookie[name].value,\n              secret\n            );\n          }\n        }\n      }\n    }\n    return context.response = mapResponse(response, context.set);\n  } catch (error2) {\n    if (error2.status)\n      set.status = error2.status;\n    return app.handleError(context, error2);\n  } finally {\n    for (const afterResponse of app.event.afterResponse)\n      await afterResponse.fn(context);\n  }\n};\nvar createDynamicErrorHandler = (app) => async (context, error2) => {\n  const errorContext = Object.assign(context, { error: error2, code: error2.code });\n  errorContext.set = context.set;\n  for (let i = 0; i < app.event.error.length; i++) {\n    const hook = app.event.error[i];\n    let response = hook.fn(errorContext);\n    if (response instanceof Promise) response = await response;\n    if (response !== void 0 && response !== null)\n      return context.response = mapResponse(response, context.set);\n  }\n  return new Response(\n    typeof error2.cause === \"string\" ? error2.cause : error2.message,\n    {\n      headers: context.set.headers,\n      status: error2.status ?? 500\n    }\n  );\n};\n\n// src/index.ts\nvar Elysia = class _Elysia {\n  constructor(config) {\n    this.server = null;\n    this.dependencies = {};\n    this._routes = {};\n    this._types = {\n      Prefix: \"\",\n      Scoped: false,\n      Singleton: {},\n      Definitions: {},\n      Metadata: {}\n    };\n    this._ephemeral = {};\n    this._volatile = {};\n    this.version = version;\n    this.singleton = {\n      decorator: {},\n      store: {},\n      derive: {},\n      resolve: {}\n    };\n    this.definitions = {\n      type: {},\n      error: {}\n    };\n    this.extender = {\n      macros: [],\n      higherOrderFunctions: []\n    };\n    this.validator = {\n      global: null,\n      scoped: null,\n      local: null,\n      getCandidate() {\n        return mergeSchemaValidator(\n          mergeSchemaValidator(this.global, this.scoped),\n          this.local\n        );\n      }\n    };\n    this.event = {\n      start: [],\n      request: [],\n      parse: [],\n      transform: [],\n      beforeHandle: [],\n      afterHandle: [],\n      mapResponse: [],\n      afterResponse: [],\n      trace: [],\n      error: [],\n      stop: []\n    };\n    this.telemetry = {\n      stack: void 0\n    };\n    this.router = {\n      http: new Memoirist(),\n      ws: new Memoirist(),\n      // Use in non-AOT mode\n      dynamic: new Memoirist(),\n      static: {\n        http: {\n          handlers: [],\n          map: {},\n          all: \"\"\n        },\n        // Static WS Router is consists of pathname and websocket handler index to compose\n        ws: {}\n      },\n      history: []\n    };\n    this.routeTree = /* @__PURE__ */ new Map();\n    this.inference = {\n      body: false,\n      cookie: false,\n      headers: false,\n      query: false,\n      set: false,\n      server: false\n    };\n    this.handle = async (request) => this.fetch(request);\n    /**\n     * Use handle can be either sync or async to save performance.\n     *\n     * Beside benchmark purpose, please use 'handle' instead.\n     */\n    this.fetch = (request) => {\n      return (this.fetch = this.config.aot ? composeGeneralHandler(this) : createDynamicHandler(this))(request);\n    };\n    this.handleError = async (context, error2) => (this.handleError = this.config.aot ? composeErrorHandler(this) : createDynamicErrorHandler(this))(context, error2);\n    this.outerErrorHandler = (error2) => new Response(error2.message || error2.name || \"Error\", {\n      // @ts-ignore\n      status: error2?.status ?? 500\n    });\n    /**\n     * ### listen\n     * Assign current instance to port and start serving\n     *\n     * ---\n     * @example\n     * ```typescript\n     * new Elysia()\n     *     .get(\"/\", () => 'hi')\n     *     .listen(3000)\n     * ```\n     */\n    this.listen = (options, callback) => {\n      if (typeof Bun === \"undefined\")\n        throw new Error(\n          \".listen() is designed to run on Bun only. If you are running Elysia in other environment please use a dedicated plugin or export the handler via Elysia.fetch\"\n        );\n      this.compile();\n      if (typeof options === \"string\") {\n        if (!isNumericString(options))\n          throw new Error(\"Port must be a numeric value\");\n        options = parseInt(options);\n      }\n      const fetch = this.fetch;\n      const serve = typeof options === \"object\" ? {\n        development: !isProduction,\n        reusePort: true,\n        ...this.config.serve || {},\n        ...options || {},\n        websocket: {\n          ...this.config.websocket || {},\n          ...websocket || {}\n        },\n        fetch,\n        error: this.outerErrorHandler\n      } : {\n        development: !isProduction,\n        reusePort: true,\n        ...this.config.serve || {},\n        websocket: {\n          ...this.config.websocket || {},\n          ...websocket || {}\n        },\n        port: options,\n        fetch,\n        error: this.outerErrorHandler\n      };\n      this.server = Bun?.serve(serve);\n      for (let i = 0; i < this.event.start.length; i++)\n        this.event.start[i].fn(this);\n      if (callback) callback(this.server);\n      process.on(\"beforeExit\", () => {\n        if (this.server) {\n          this.server.stop();\n          this.server = null;\n          for (let i = 0; i < this.event.stop.length; i++)\n            this.event.stop[i].fn(this);\n        }\n      });\n      this.promisedModules.then(() => {\n        Bun?.gc(false);\n      });\n      return this;\n    };\n    /**\n     * ### stop\n     * Stop server from serving\n     *\n     * ---\n     * @example\n     * ```typescript\n     * const app = new Elysia()\n     *     .get(\"/\", () => 'hi')\n     *     .listen(3000)\n     *\n     * // Sometime later\n     * app.stop()\n     * ```\n     */\n    this.stop = async () => {\n      if (!this.server)\n        throw new Error(\n          \"Elysia isn't running. Call `app.listen` to start the server.\"\n        );\n      if (this.server) {\n        this.server.stop();\n        this.server = null;\n        if (this.event.stop.length)\n          for (let i = 0; i < this.event.stop.length; i++)\n            this.event.stop[i].fn(this);\n      }\n    };\n    if (config?.tags) {\n      if (!config.detail)\n        config.detail = {\n          tags: config.tags\n        };\n      else config.detail.tags = config.tags;\n    }\n    this.config = {};\n    this.applyConfig(config ?? {});\n    if (config?.analytic && (config?.name || config?.seed !== void 0))\n      this.telemetry.stack = new Error().stack;\n  }\n  static {\n    this.version = version;\n  }\n  get store() {\n    return this.singleton.store;\n  }\n  get decorator() {\n    return this.singleton.decorator;\n  }\n  get _scoped() {\n    return this.config.scoped;\n  }\n  get routes() {\n    return this.router.history;\n  }\n  getGlobalRoutes() {\n    return this.router.history;\n  }\n  getServer() {\n    return this.server;\n  }\n  get promisedModules() {\n    if (!this._promisedModules) this._promisedModules = new PromiseGroup();\n    return this._promisedModules;\n  }\n  env(model, env2 = Bun?.env ?? process.env) {\n    const validator = getSchemaValidator(model, {\n      dynamic: true,\n      additionalProperties: true,\n      coerce: true\n    });\n    if (validator.Check(env2) === false) {\n      const error2 = new ValidationError(\"env\", model, env2);\n      throw new Error(error2.all.map((x) => x.summary).join(\"\\n\"));\n    }\n    return this;\n  }\n  /**\n   * @private DO_NOT_USE_OR_YOU_WILL_BE_FIRE\n   *\n   * ! Do not use unless you now exactly what you are doing\n   * ? Add Higher order function to Elysia.fetch\n   */\n  wrap(fn) {\n    this.extender.higherOrderFunctions.push({\n      checksum: checksum(\n        JSON.stringify({\n          name: this.config.name,\n          seed: this.config.seed,\n          content: fn.toString()\n        })\n      ),\n      fn\n    });\n    return this;\n  }\n  applyMacro(localHook) {\n    if (this.extender.macros.length) {\n      const manage = createMacroManager({\n        globalHook: this.event,\n        localHook\n      });\n      const manager = {\n        events: {\n          global: this.event,\n          local: localHook\n        },\n        onParse: manage(\"parse\"),\n        onTransform: manage(\"transform\"),\n        onBeforeHandle: manage(\"beforeHandle\"),\n        onAfterHandle: manage(\"afterHandle\"),\n        mapResponse: manage(\"mapResponse\"),\n        onAfterResponse: manage(\"afterResponse\"),\n        onError: manage(\"error\")\n      };\n      for (const macro of this.extender.macros)\n        traceBackMacro(macro.fn(manager), localHook);\n    }\n  }\n  applyConfig(config) {\n    this.config = {\n      prefix: \"\",\n      aot: true,\n      strictPath: false,\n      global: false,\n      analytic: false,\n      normalize: true,\n      ...config,\n      cookie: {\n        path: \"/\",\n        ...config?.cookie\n      },\n      experimental: config?.experimental ?? {},\n      seed: config?.seed === void 0 ? \"\" : config?.seed\n    };\n    return this;\n  }\n  get models() {\n    const models = {};\n    for (const [name, schema] of Object.entries(this.definitions.type))\n      models[name] = getSchemaValidator(\n        schema\n      );\n    return models;\n  }\n  add(method, path, handle, localHook, { allowMeta = false, skipPrefix = false } = {\n    allowMeta: false,\n    skipPrefix: false\n  }) {\n    localHook = localHookToLifeCycleStore(localHook);\n    if (path !== \"\" && path.charCodeAt(0) !== 47) path = \"/\" + path;\n    if (this.config.prefix && !skipPrefix && !this.config.scoped)\n      path = this.config.prefix + path;\n    if (localHook?.type)\n      switch (localHook.type) {\n        case \"text\":\n          localHook.type = \"text/plain\";\n          break;\n        case \"json\":\n          localHook.type = \"application/json\";\n          break;\n        case \"formdata\":\n          localHook.type = \"multipart/form-data\";\n          break;\n        case \"urlencoded\":\n          localHook.type = \"application/x-www-form-urlencoded\";\n          break;\n        case \"arrayBuffer\":\n          localHook.type = \"application/octet-stream\";\n          break;\n        default:\n          break;\n      }\n    const models = this.definitions.type;\n    const dynamic = !this.config.aot;\n    const instanceValidator = { ...this.validator.getCandidate() };\n    const cloned = {\n      body: localHook?.body ?? instanceValidator?.body,\n      headers: localHook?.headers ?? instanceValidator?.headers,\n      params: localHook?.params ?? instanceValidator?.params,\n      query: localHook?.query ?? instanceValidator?.query,\n      cookie: localHook?.cookie ?? instanceValidator?.cookie,\n      response: localHook?.response ?? instanceValidator?.response\n    };\n    const cookieValidator = () => cloned.cookie ? getCookieValidator({\n      validator: cloned.cookie,\n      defaultConfig: this.config.cookie,\n      config: cloned.cookie?.config ?? {},\n      dynamic,\n      models\n    }) : void 0;\n    const normalize = this.config.normalize;\n    const validator = this.config.precompile === true || typeof this.config.precompile === \"object\" && this.config.precompile.schema === true ? {\n      body: getSchemaValidator(cloned.body, {\n        dynamic,\n        models,\n        normalize\n      }),\n      headers: getSchemaValidator(cloned.headers, {\n        dynamic,\n        models,\n        additionalProperties: !this.config.normalize,\n        coerce: true,\n        additionalCoerce: stringToStructureCoercions()\n      }),\n      params: getSchemaValidator(cloned.params, {\n        dynamic,\n        models,\n        coerce: true,\n        additionalCoerce: stringToStructureCoercions()\n      }),\n      query: getSchemaValidator(cloned.query, {\n        dynamic,\n        models,\n        normalize,\n        coerce: true,\n        additionalCoerce: stringToStructureCoercions()\n      }),\n      cookie: cookieValidator(),\n      response: getResponseSchemaValidator(cloned.response, {\n        dynamic,\n        models,\n        normalize\n      })\n    } : {\n      createBody() {\n        if (this.body) return this.body;\n        return this.body = getSchemaValidator(\n          cloned.body,\n          {\n            dynamic,\n            models,\n            normalize\n          }\n        );\n      },\n      createHeaders() {\n        if (this.headers) return this.headers;\n        return this.headers = getSchemaValidator(\n          cloned.headers,\n          {\n            dynamic,\n            models,\n            additionalProperties: !normalize,\n            coerce: true,\n            additionalCoerce: stringToStructureCoercions()\n          }\n        );\n      },\n      createParams() {\n        if (this.params) return this.params;\n        return this.params = getSchemaValidator(\n          cloned.params,\n          {\n            dynamic,\n            models,\n            coerce: true,\n            additionalCoerce: stringToStructureCoercions()\n          }\n        );\n      },\n      createQuery() {\n        if (this.query) return this.query;\n        return this.query = getSchemaValidator(\n          cloned.query,\n          {\n            dynamic,\n            models,\n            coerce: true,\n            additionalCoerce: stringToStructureCoercions()\n          }\n        );\n      },\n      createCookie() {\n        if (this.cookie) return this.cookie;\n        return this.cookie = cookieValidator();\n      },\n      createResponse() {\n        if (this.response) return this.response;\n        return this.response = getResponseSchemaValidator(\n          cloned.response,\n          {\n            dynamic,\n            models,\n            normalize\n          }\n        );\n      }\n    };\n    const loosePath = path.endsWith(\"/\") ? path.slice(0, path.length - 1) : path + \"/\";\n    localHook = mergeHook(localHook, instanceValidator);\n    if (localHook.tags) {\n      if (!localHook.detail)\n        localHook.detail = {\n          tags: localHook.tags\n        };\n      else localHook.detail.tags = localHook.tags;\n    }\n    if (isNotEmpty(this.config.detail))\n      localHook.detail = mergeDeep(\n        Object.assign({}, this.config.detail),\n        localHook.detail\n      );\n    this.applyMacro(localHook);\n    const hooks = mergeHook(this.event, localHook);\n    if (this.config.aot === false) {\n      this.router.dynamic.add(method, path, {\n        validator,\n        hooks,\n        content: localHook?.type,\n        handle\n      });\n      if (this.config.strictPath === false) {\n        this.router.dynamic.add(method, loosePath, {\n          validator,\n          hooks,\n          content: localHook?.type,\n          handle\n        });\n      }\n      this.router.history.push({\n        method,\n        path,\n        composed: null,\n        handler: handle,\n        hooks\n      });\n      return;\n    }\n    const shouldPrecompile = this.config.precompile === true || typeof this.config.precompile === \"object\" && this.config.precompile.compose === true;\n    const inference = cloneInference(this.inference);\n    const compile = () => composeHandler({\n      app: this,\n      path,\n      method,\n      localHook: mergeHook(localHook),\n      hooks,\n      validator,\n      handler: handle,\n      allowMeta,\n      inference\n    });\n    const mainHandler = shouldPrecompile ? compile() : (context) => {\n      return compile()(context);\n    };\n    const routeIndex = this.router.history.length;\n    if (this.routeTree.has(method + path))\n      for (let i = 0; i < this.router.history.length; i++) {\n        const route = this.router.history[i];\n        if (route.path === path && route.method === method) {\n          const removed = this.router.history.splice(i, 1)[0];\n          if (removed && this.routeTree.has(removed?.method + removed?.path))\n            this.routeTree.delete(removed.method + removed.path);\n        }\n      }\n    else this.routeTree.set(method + path, routeIndex);\n    this.router.history.push({\n      method,\n      path,\n      composed: mainHandler,\n      handler: handle,\n      hooks\n    });\n    const staticRouter = this.router.static.http;\n    const handler = {\n      handler: shouldPrecompile ? mainHandler : void 0,\n      compile\n    };\n    if (method === \"$INTERNALWS\") {\n      const loose = this.config.strictPath ? void 0 : path.endsWith(\"/\") ? path.slice(0, path.length - 1) : path + \"/\";\n      if (path.indexOf(\":\") === -1 && path.indexOf(\"*\") === -1) {\n        const index = staticRouter.handlers.length;\n        staticRouter.handlers.push(\n          (ctx) => (staticRouter.handlers[index] = compile())(ctx)\n        );\n        this.router.static.ws[path] = index;\n        if (loose) this.router.static.ws[loose] = index;\n      } else {\n        this.router.ws.add(\"ws\", path, handler);\n        if (loose) this.router.ws.add(\"ws\", loose, handler);\n      }\n      return;\n    }\n    if (path.indexOf(\":\") === -1 && path.indexOf(\"*\") === -1) {\n      const index = staticRouter.handlers.length;\n      staticRouter.handlers.push(\n        (ctx) => (staticRouter.handlers[index] = compile())(\n          ctx\n        )\n      );\n      if (!staticRouter.map[path])\n        staticRouter.map[path] = {\n          code: \"\"\n        };\n      if (method === \"ALL\")\n        staticRouter.map[path].all = `default: return st[${index}](ctx)\n`;\n      else\n        staticRouter.map[path].code = `case '${method}': return st[${index}](ctx)\n${staticRouter.map[path].code}`;\n      if (!this.config.strictPath) {\n        if (!staticRouter.map[loosePath])\n          staticRouter.map[loosePath] = {\n            code: \"\"\n          };\n        if (method === \"ALL\")\n          staticRouter.map[loosePath].all = `default: return st[${index}](ctx)\n`;\n        else\n          staticRouter.map[loosePath].code = `case '${method}': return st[${index}](ctx)\n${staticRouter.map[loosePath].code}`;\n      }\n    } else {\n      this.router.http.add(method, path, handler);\n      if (!this.config.strictPath)\n        this.router.http.add(\n          method,\n          path.endsWith(\"/\") ? path.slice(0, path.length - 1) : path + \"/\",\n          handler\n        );\n    }\n  }\n  headers(header) {\n    if (!header) return this;\n    if (!this.setHeaders) this.setHeaders = {};\n    this.setHeaders = mergeDeep(this.setHeaders, header);\n    return this;\n  }\n  /**\n   * ### start | Life cycle event\n   * Called after server is ready for serving\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onStart(({ url, port }) => {\n   *         console.log(\"Running at ${url}:${port}\")\n   *     })\n   *     .listen(3000)\n   * ```\n   */\n  onStart(handler) {\n    this.on(\"start\", handler);\n    return this;\n  }\n  /**\n   * ### request | Life cycle event\n   * Called on every new request is accepted\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onRequest(({ method, url }) => {\n   *         saveToAnalytic({ method, url })\n   *     })\n   * ```\n   */\n  onRequest(handler) {\n    this.on(\"request\", handler);\n    return this;\n  }\n  onParse(options, handler) {\n    if (!handler) return this.on(\"parse\", options);\n    return this.on(\n      options,\n      \"parse\",\n      handler\n    );\n  }\n  onTransform(options, handler) {\n    if (!handler) return this.on(\"transform\", options);\n    return this.on(\n      options,\n      \"transform\",\n      handler\n    );\n  }\n  resolve(optionsOrResolve, resolve) {\n    if (!resolve) {\n      resolve = optionsOrResolve;\n      optionsOrResolve = { as: \"local\" };\n    }\n    const hook = {\n      subType: \"resolve\",\n      fn: resolve\n    };\n    return this.onBeforeHandle(optionsOrResolve, hook);\n  }\n  mapResolve(optionsOrResolve, mapper) {\n    if (!mapper) {\n      mapper = optionsOrResolve;\n      optionsOrResolve = { as: \"local\" };\n    }\n    const hook = {\n      subType: \"mapResolve\",\n      fn: mapper\n    };\n    return this.onBeforeHandle(optionsOrResolve, hook);\n  }\n  onBeforeHandle(options, handler) {\n    if (!handler) return this.on(\"beforeHandle\", options);\n    return this.on(\n      options,\n      \"beforeHandle\",\n      handler\n    );\n  }\n  onAfterHandle(options, handler) {\n    if (!handler) return this.on(\"afterHandle\", options);\n    return this.on(\n      options,\n      \"afterHandle\",\n      handler\n    );\n  }\n  mapResponse(options, handler) {\n    if (!handler) return this.on(\"mapResponse\", options);\n    return this.on(\n      options,\n      \"mapResponse\",\n      handler\n    );\n  }\n  onAfterResponse(options, handler) {\n    if (!handler) return this.on(\"afterResponse\", options);\n    return this.on(\n      options,\n      \"afterResponse\",\n      handler\n    );\n  }\n  /**\n   * ### After Handle | Life cycle event\n   * Intercept request **after** main handler is called.\n   *\n   * If truthy value is returned, will be assigned as `Response`\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onAfterHandle((context, response) => {\n   *         if(typeof response === \"object\")\n   *             return JSON.stringify(response)\n   *     })\n   * ```\n   */\n  trace(options, handler) {\n    if (!handler) {\n      handler = options;\n      options = { as: \"local\" };\n    }\n    if (!Array.isArray(handler)) handler = [handler];\n    for (const fn of handler)\n      this.on(\n        options,\n        \"trace\",\n        createTracer(fn)\n      );\n    return this;\n  }\n  error(name, error2) {\n    switch (typeof name) {\n      case \"string\":\n        error2.prototype[ERROR_CODE] = name;\n        this.definitions.error[name] = error2;\n        return this;\n      case \"function\":\n        this.definitions.error = name(this.definitions.error);\n        return this;\n    }\n    for (const [code, error3] of Object.entries(name)) {\n      error3.prototype[ERROR_CODE] = code;\n      this.definitions.error[code] = error3;\n    }\n    return this;\n  }\n  /**\n   * ### Error | Life cycle event\n   * Called when error is thrown during processing request\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onError(({ code }) => {\n   *         if(code === \"NOT_FOUND\")\n   *             return \"Path not found :(\"\n   *     })\n   * ```\n   */\n  onError(options, handler) {\n    if (!handler) return this.on(\"error\", options);\n    return this.on(\n      options,\n      \"error\",\n      handler\n    );\n  }\n  /**\n   * ### stop | Life cycle event\n   * Called after server stop serving request\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onStop((app) => {\n   *         cleanup()\n   *     })\n   * ```\n   */\n  onStop(handler) {\n    this.on(\"stop\", handler);\n    return this;\n  }\n  on(optionsOrType, typeOrHandlers, handlers) {\n    let type;\n    switch (typeof optionsOrType) {\n      case \"string\":\n        type = optionsOrType;\n        handlers = typeOrHandlers;\n        break;\n      case \"object\":\n        type = typeOrHandlers;\n        if (!Array.isArray(typeOrHandlers) && typeof typeOrHandlers === \"object\")\n          handlers = typeOrHandlers;\n        break;\n    }\n    if (Array.isArray(handlers)) handlers = fnToContainer(handlers);\n    else {\n      if (typeof handlers === \"function\")\n        handlers = [\n          {\n            fn: handlers\n          }\n        ];\n      else handlers = [handlers];\n    }\n    const handles = handlers;\n    for (const handle of handles)\n      handle.scope = typeof optionsOrType === \"string\" ? \"local\" : optionsOrType?.as ?? \"local\";\n    if (type !== \"trace\")\n      sucrose(\n        {\n          [type]: handles.map((x) => x.fn)\n        },\n        this.inference\n      );\n    for (const handle of handles) {\n      const fn = asHookType(handle, \"global\", { skipIfHasType: true });\n      switch (type) {\n        case \"start\":\n          this.event.start.push(fn);\n          break;\n        case \"request\":\n          this.event.request.push(fn);\n          break;\n        case \"parse\":\n          this.event.parse.push(fn);\n          break;\n        case \"transform\":\n          this.event.transform.push(fn);\n          break;\n        case \"beforeHandle\":\n          this.event.beforeHandle.push(fn);\n          break;\n        case \"afterHandle\":\n          this.event.afterHandle.push(fn);\n          break;\n        case \"mapResponse\":\n          this.event.mapResponse.push(fn);\n          break;\n        case \"afterResponse\":\n          this.event.afterResponse.push(fn);\n          break;\n        case \"trace\":\n          this.event.trace.push(fn);\n          break;\n        case \"error\":\n          this.event.error.push(fn);\n          break;\n        case \"stop\":\n          this.event.stop.push(fn);\n          break;\n      }\n    }\n    return this;\n  }\n  /**\n   * @deprecated use `Elysia.as` instead\n   *\n   * Will be removed in Elysia 1.2\n   */\n  propagate() {\n    promoteEvent(this.event.parse);\n    promoteEvent(this.event.transform);\n    promoteEvent(this.event.beforeHandle);\n    promoteEvent(this.event.afterHandle);\n    promoteEvent(this.event.mapResponse);\n    promoteEvent(this.event.afterResponse);\n    promoteEvent(this.event.trace);\n    promoteEvent(this.event.error);\n    return this;\n  }\n  as(type) {\n    const castType = { plugin: \"scoped\", global: \"global\" }[type];\n    promoteEvent(this.event.parse, castType);\n    promoteEvent(this.event.transform, castType);\n    promoteEvent(this.event.beforeHandle, castType);\n    promoteEvent(this.event.afterHandle, castType);\n    promoteEvent(this.event.mapResponse, castType);\n    promoteEvent(this.event.afterResponse, castType);\n    promoteEvent(this.event.trace, castType);\n    promoteEvent(this.event.error, castType);\n    if (type === \"plugin\") {\n      this.validator.scoped = mergeSchemaValidator(\n        this.validator.scoped,\n        this.validator.local\n      );\n      this.validator.local = null;\n    } else if (type === \"global\") {\n      this.validator.global = mergeSchemaValidator(\n        this.validator.global,\n        mergeSchemaValidator(\n          this.validator.scoped,\n          this.validator.local\n        )\n      );\n      this.validator.scoped = null;\n      this.validator.local = null;\n    }\n    return this;\n  }\n  /**\n   * ### group\n   * Encapsulate and group path with prefix\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .group('/v1', app => app\n   *         .get('/', () => 'Hi')\n   *         .get('/name', () => 'Elysia')\n   *     })\n   * ```\n   */\n  group(prefix, schemaOrRun, run) {\n    const instance = new _Elysia({\n      ...this.config,\n      prefix: \"\"\n    });\n    instance.singleton = { ...this.singleton };\n    instance.definitions = { ...this.definitions };\n    instance.getServer = () => this.getServer();\n    instance.inference = cloneInference(this.inference);\n    instance.extender = { ...this.extender };\n    const isSchema = typeof schemaOrRun === \"object\";\n    const sandbox = (isSchema ? run : schemaOrRun)(instance);\n    this.singleton = mergeDeep(this.singleton, instance.singleton);\n    this.definitions = mergeDeep(this.definitions, instance.definitions);\n    if (sandbox.event.request.length)\n      this.event.request = [\n        ...this.event.request || [],\n        ...sandbox.event.request || []\n      ];\n    if (sandbox.event.mapResponse.length)\n      this.event.mapResponse = [\n        ...this.event.mapResponse || [],\n        ...sandbox.event.mapResponse || []\n      ];\n    this.model(sandbox.definitions.type);\n    Object.values(instance.router.history).forEach(\n      ({ method, path, handler, hooks }) => {\n        path = (isSchema ? \"\" : this.config.prefix) + prefix + path;\n        if (isSchema) {\n          const hook = schemaOrRun;\n          const localHook = hooks;\n          this.add(\n            method,\n            path,\n            handler,\n            mergeHook(hook, {\n              ...localHook || {},\n              error: !localHook.error ? sandbox.event.error : Array.isArray(localHook.error) ? [\n                ...localHook.error || {},\n                ...sandbox.event.error || {}\n              ] : [\n                localHook.error,\n                ...sandbox.event.error || {}\n              ]\n            })\n          );\n        } else {\n          this.add(\n            method,\n            path,\n            handler,\n            mergeHook(\n              hooks,\n              {\n                error: sandbox.event.error\n              }\n            ),\n            {\n              skipPrefix: true\n            }\n          );\n        }\n      }\n    );\n    return this;\n  }\n  /**\n   * ### guard\n   * Encapsulate and pass hook into all child handler\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { t } from 'elysia'\n   *\n   * new Elysia()\n   *     .guard({\n   *          schema: {\n   *              body: t.Object({\n   *                  username: t.String(),\n   *                  password: t.String()\n   *              })\n   *          }\n   *     }, app => app\n   *         .get(\"/\", () => 'Hi')\n   *         .get(\"/name\", () => 'Elysia')\n   *     })\n   * ```\n   */\n  guard(hook, run) {\n    if (!run) {\n      if (typeof hook === \"object\") {\n        this.applyMacro(hook);\n        const type = hook.as ?? \"local\";\n        this.validator[type] = {\n          body: hook.body ?? this.validator[type]?.body,\n          headers: hook.headers ?? this.validator[type]?.headers,\n          params: hook.params ?? this.validator[type]?.params,\n          query: hook.query ?? this.validator[type]?.query,\n          response: hook.response ?? this.validator[type]?.response,\n          cookie: hook.cookie ?? this.validator[type]?.cookie\n        };\n        if (hook.parse) this.on({ as: type }, \"parse\", hook.parse);\n        if (hook.transform)\n          this.on({ as: type }, \"transform\", hook.transform);\n        if (hook.beforeHandle)\n          this.on({ as: type }, \"beforeHandle\", hook.beforeHandle);\n        if (hook.afterHandle)\n          this.on({ as: type }, \"afterHandle\", hook.afterHandle);\n        if (hook.mapResponse)\n          this.on({ as: type }, \"mapResponse\", hook.mapResponse);\n        if (hook.afterResponse)\n          this.on({ as: type }, \"afterResponse\", hook.afterResponse);\n        if (hook.error) this.on({ as: type }, \"error\", hook.error);\n        if (hook.detail) {\n          if (this.config.detail)\n            this.config.detail = mergeDeep(\n              Object.assign({}, this.config.detail),\n              hook.detail\n            );\n          else this.config.detail = hook.detail;\n        }\n        if (hook?.tags) {\n          if (!this.config.detail)\n            this.config.detail = {\n              tags: hook.tags\n            };\n          else this.config.detail.tags = hook.tags;\n        }\n        return this;\n      }\n      return this.guard({}, hook);\n    }\n    const instance = new _Elysia({\n      ...this.config,\n      prefix: \"\"\n    });\n    instance.singleton = { ...this.singleton };\n    instance.definitions = { ...this.definitions };\n    instance.inference = cloneInference(this.inference);\n    instance.extender = { ...this.extender };\n    const sandbox = run(instance);\n    this.singleton = mergeDeep(this.singleton, instance.singleton);\n    this.definitions = mergeDeep(this.definitions, instance.definitions);\n    sandbox.getServer = () => this.server;\n    if (sandbox.event.request.length)\n      this.event.request = [\n        ...this.event.request || [],\n        ...sandbox.event.request || []\n      ];\n    if (sandbox.event.mapResponse.length)\n      this.event.mapResponse = [\n        ...this.event.mapResponse || [],\n        ...sandbox.event.mapResponse || []\n      ];\n    this.model(sandbox.definitions.type);\n    Object.values(instance.router.history).forEach(\n      ({ method, path, handler, hooks: localHook }) => {\n        this.add(\n          method,\n          path,\n          handler,\n          mergeHook(hook, {\n            ...localHook || {},\n            error: !localHook.error ? sandbox.event.error : Array.isArray(localHook.error) ? [\n              ...localHook.error || {},\n              ...sandbox.event.error || []\n            ] : [\n              localHook.error,\n              ...sandbox.event.error || []\n            ]\n          })\n        );\n      }\n    );\n    return this;\n  }\n  /**\n   * ### use\n   * Merge separate logic of Elysia with current\n   *\n   * ---\n   * @example\n   * ```typescript\n   * const plugin = (app: Elysia) => app\n   *     .get('/plugin', () => 'hi')\n   *\n   * new Elysia()\n   *     .use(plugin)\n   * ```\n   */\n  use(plugin, options) {\n    if (options?.scoped)\n      return this.guard({}, (app) => app.use(plugin));\n    if (Array.isArray(plugin)) {\n      let current = this;\n      for (const p of plugin) current = this.use(p);\n      return current;\n    }\n    if (plugin instanceof Promise) {\n      this.promisedModules.add(\n        plugin.then((plugin2) => {\n          if (typeof plugin2 === \"function\") return plugin2(this);\n          if (plugin2 instanceof _Elysia) return this._use(plugin2);\n          if (typeof plugin2.default === \"function\")\n            return plugin2.default(this);\n          if (plugin2.default instanceof _Elysia)\n            return this._use(plugin2.default);\n          throw new Error(\n            'Invalid plugin type. Expected Elysia instance, function, or module with \"default\" as Elysia instance or function that returns Elysia instance.'\n          );\n        }).then((x) => x.compile())\n      );\n      return this;\n    }\n    return this._use(plugin);\n  }\n  _use(plugin) {\n    if (typeof plugin === \"function\") {\n      const instance = plugin(this);\n      if (instance instanceof Promise) {\n        this.promisedModules.add(\n          instance.then((plugin2) => {\n            if (plugin2 instanceof _Elysia) {\n              this.compile();\n              for (const {\n                method,\n                path,\n                handler,\n                hooks\n              } of Object.values(plugin2.router.history)) {\n                this.add(\n                  method,\n                  path,\n                  handler,\n                  mergeHook(\n                    hooks,\n                    {\n                      error: plugin2.event.error\n                    }\n                  )\n                );\n              }\n              return plugin2;\n            }\n            if (typeof plugin2 === \"function\")\n              return plugin2(\n                this\n              );\n            if (typeof plugin2.default === \"function\")\n              return plugin2.default(\n                this\n              );\n            return this._use(plugin2);\n          }).then((x) => x.compile())\n        );\n        return this;\n      }\n      return instance;\n    }\n    if (plugin.promisedModules.size) {\n      this.promisedModules.add(\n        plugin.modules.then(() => this._use(plugin)).then((x) => x.compile())\n      );\n      return this;\n    }\n    const { name, seed } = plugin.config;\n    plugin.getServer = () => this.getServer();\n    plugin.getGlobalRoutes = () => this.getGlobalRoutes();\n    plugin.model(this.definitions.type);\n    plugin.error(this.definitions.error);\n    const isScoped = plugin.config.scoped;\n    if (isScoped) {\n      if (name) {\n        if (!(name in this.dependencies)) this.dependencies[name] = [];\n        const current = seed !== void 0 ? checksum(name + JSON.stringify(seed)) : 0;\n        if (this.dependencies[name].some(\n          ({ checksum: checksum2 }) => current === checksum2\n        ))\n          return this;\n        this.dependencies[name].push(\n          !this.config?.analytic ? {\n            name: plugin.config.name,\n            seed: plugin.config.seed,\n            checksum: current,\n            dependencies: plugin.dependencies\n          } : {\n            name: plugin.config.name,\n            seed: plugin.config.seed,\n            checksum: current,\n            dependencies: plugin.dependencies,\n            stack: plugin.telemetry.stack,\n            routes: plugin.router.history,\n            decorators: plugin.singleton.decorator,\n            store: plugin.singleton.store,\n            type: plugin.definitions.type,\n            error: plugin.definitions.error,\n            derive: plugin.event.transform.filter((x) => x.subType === \"derive\").map((x) => ({\n              fn: x.fn.toString(),\n              stack: new Error().stack ?? \"\"\n            })),\n            resolve: plugin.event.transform.filter((x) => x.subType === \"derive\").map((x) => ({\n              fn: x.fn.toString(),\n              stack: new Error().stack ?? \"\"\n            }))\n          }\n        );\n      }\n      plugin.extender.macros = this.extender.macros.concat(\n        plugin.extender.macros\n      );\n      const macroHashes = [];\n      for (let i = 0; i < plugin.extender.macros.length; i++) {\n        const macro = this.extender.macros[i];\n        if (macroHashes.includes(macro.checksum)) {\n          plugin.extender.macros.splice(i, 1);\n          i--;\n        }\n        macroHashes.push(macro.checksum);\n      }\n      plugin.onRequest((context) => {\n        Object.assign(context, this.singleton.decorator);\n        Object.assign(context.store, this.singleton.store);\n      });\n      if (plugin.event.trace.length)\n        plugin.event.trace.push(...plugin.event.trace);\n      if (!plugin.config.prefix)\n        console.warn(\n          \"It's recommended to use scoped instance with a prefix to prevent collision routing with other instance.\"\n        );\n      if (plugin.event.error.length)\n        plugin.event.error.push(...this.event.error);\n      if (plugin.config.aot) plugin.compile();\n      if (isScoped === true && plugin.config.prefix) {\n        this.mount(plugin.config.prefix + \"/\", plugin.fetch);\n        for (const route of plugin.router.history) {\n          this.routeTree.set(\n            route.method + `${plugin.config.prefix}${route.path}`,\n            this.router.history.length\n          );\n          this.router.history.push({\n            ...route,\n            path: `${plugin.config.prefix}${route.path}`,\n            hooks: mergeHook(route.hooks, {\n              error: this.event.error\n            })\n          });\n        }\n      } else {\n        this.mount(plugin.fetch);\n        for (const route of plugin.router.history) {\n          this.routeTree.set(\n            route.method + `${plugin.config.prefix}${route.path}`,\n            this.router.history.length\n          );\n          this.router.history.push({\n            ...route,\n            path: `${plugin.config.prefix}${route.path}`,\n            hooks: mergeHook(route.hooks, {\n              error: this.event.error\n            })\n          });\n        }\n      }\n      return this;\n    } else {\n      this.headers(plugin.setHeaders);\n      if (name) {\n        if (!(name in this.dependencies)) this.dependencies[name] = [];\n        const current = seed !== void 0 ? checksum(name + JSON.stringify(seed)) : 0;\n        if (!this.dependencies[name].some(\n          ({ checksum: checksum2 }) => current === checksum2\n        )) {\n          this.extender.macros = this.extender.macros.concat(\n            plugin.extender.macros\n          );\n          this.extender.higherOrderFunctions = this.extender.higherOrderFunctions.concat(\n            plugin.extender.higherOrderFunctions\n          );\n        }\n      } else {\n        this.extender.macros = this.extender.macros.concat(\n          plugin.extender.macros\n        );\n        this.extender.higherOrderFunctions = this.extender.higherOrderFunctions.concat(\n          plugin.extender.higherOrderFunctions\n        );\n      }\n      deduplicateChecksum(this.extender.macros);\n      deduplicateChecksum(this.extender.higherOrderFunctions);\n      const hofHashes = [];\n      for (let i = 0; i < this.extender.higherOrderFunctions.length; i++) {\n        const hof = this.extender.higherOrderFunctions[i];\n        if (hof.checksum) {\n          if (hofHashes.includes(hof.checksum)) {\n            this.extender.higherOrderFunctions.splice(i, 1);\n            i--;\n          }\n          hofHashes.push(hof.checksum);\n        }\n      }\n      this.inference = {\n        body: this.inference.body || plugin.inference.body,\n        cookie: this.inference.cookie || plugin.inference.cookie,\n        headers: this.inference.headers || plugin.inference.headers,\n        query: this.inference.query || plugin.inference.query,\n        set: this.inference.set || plugin.inference.set,\n        server: this.inference.server || plugin.inference.server\n      };\n    }\n    this.decorate(plugin.singleton.decorator);\n    this.state(plugin.singleton.store);\n    this.model(plugin.definitions.type);\n    this.error(plugin.definitions.error);\n    plugin.extender.macros = this.extender.macros.concat(\n      plugin.extender.macros\n    );\n    for (const { method, path, handler, hooks } of Object.values(\n      plugin.router.history\n    )) {\n      this.add(\n        method,\n        path,\n        handler,\n        mergeHook(\n          hooks,\n          {\n            error: plugin.event.error\n          }\n        )\n      );\n    }\n    if (!isScoped)\n      if (name) {\n        if (!(name in this.dependencies)) this.dependencies[name] = [];\n        const current = seed !== void 0 ? checksum(name + JSON.stringify(seed)) : 0;\n        if (this.dependencies[name].some(\n          ({ checksum: checksum2 }) => current === checksum2\n        ))\n          return this;\n        this.dependencies[name].push(\n          !this.config?.analytic ? {\n            name: plugin.config.name,\n            seed: plugin.config.seed,\n            checksum: current,\n            dependencies: plugin.dependencies\n          } : {\n            name: plugin.config.name,\n            seed: plugin.config.seed,\n            checksum: current,\n            dependencies: plugin.dependencies,\n            stack: plugin.telemetry.stack,\n            routes: plugin.router.history,\n            decorators: plugin.singleton,\n            store: plugin.singleton.store,\n            type: plugin.definitions.type,\n            error: plugin.definitions.error,\n            derive: plugin.event.transform.filter((x) => x?.subType === \"derive\").map((x) => ({\n              fn: x.toString(),\n              stack: new Error().stack ?? \"\"\n            })),\n            resolve: plugin.event.transform.filter((x) => x?.subType === \"resolve\").map((x) => ({\n              fn: x.toString(),\n              stack: new Error().stack ?? \"\"\n            }))\n          }\n        );\n        this.event = mergeLifeCycle(\n          this.event,\n          filterGlobalHook(plugin.event),\n          current\n        );\n      } else {\n        this.event = mergeLifeCycle(\n          this.event,\n          filterGlobalHook(plugin.event)\n        );\n      }\n    this.validator.global = mergeHook(this.validator.global, {\n      ...plugin.validator.global\n    });\n    this.validator.local = mergeHook(this.validator.local, {\n      ...plugin.validator.scoped\n    });\n    return this;\n  }\n  macro(macro) {\n    const hook = {\n      checksum: checksum(\n        JSON.stringify({\n          name: this.config.name,\n          seed: this.config.seed,\n          content: macro.toString()\n        })\n      ),\n      fn: macro\n    };\n    this.extender.macros.push(hook);\n    return this;\n  }\n  mount(path, handle) {\n    if (path instanceof _Elysia || typeof path === \"function\" || path.length === 0 || path === \"/\") {\n      const run = typeof path === \"function\" ? path : path instanceof _Elysia ? path.compile().fetch : handle instanceof _Elysia ? handle.compile().fetch : handle;\n      const handler2 = async ({ request, path: path2 }) => run(\n        new Request(\n          replaceUrlPath(request.url, path2 || \"/\"),\n          request\n        )\n      );\n      this.all(\n        \"/*\",\n        handler2,\n        {\n          type: \"none\"\n        }\n      );\n      return this;\n    }\n    const length = path.length;\n    if (handle instanceof _Elysia) handle = handle.compile().fetch;\n    const handler = async ({ request, path: path2 }) => handle(\n      new Request(\n        replaceUrlPath(request.url, path2.slice(length) || \"/\"),\n        request\n      )\n    );\n    this.all(\n      path,\n      handler,\n      {\n        type: \"none\"\n      }\n    );\n    this.all(\n      path + (path.endsWith(\"/\") ? \"*\" : \"/*\"),\n      handler,\n      {\n        type: \"none\"\n      }\n    );\n    return this;\n  }\n  /**\n   * ### get\n   * Register handler for path with method [GET]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .get('/', () => 'hi')\n   *     .get('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  get(path, handler, hook) {\n    this.add(\"GET\", path, handler, hook);\n    return this;\n  }\n  /**\n   * ### post\n   * Register handler for path with method [POST]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .post('/', () => 'hi')\n   *     .post('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  post(path, handler, hook) {\n    this.add(\"POST\", path, handler, hook);\n    return this;\n  }\n  /**\n   * ### put\n   * Register handler for path with method [PUT]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .put('/', () => 'hi')\n   *     .put('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  put(path, handler, hook) {\n    this.add(\"PUT\", path, handler, hook);\n    return this;\n  }\n  /**\n   * ### patch\n   * Register handler for path with method [PATCH]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .patch('/', () => 'hi')\n   *     .patch('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  patch(path, handler, hook) {\n    this.add(\"PATCH\", path, handler, hook);\n    return this;\n  }\n  /**\n   * ### delete\n   * Register handler for path with method [DELETE]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .delete('/', () => 'hi')\n   *     .delete('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  delete(path, handler, hook) {\n    this.add(\"DELETE\", path, handler, hook);\n    return this;\n  }\n  /**\n   * ### options\n   * Register handler for path with method [POST]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .options('/', () => 'hi')\n   *     .options('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  options(path, handler, hook) {\n    this.add(\"OPTIONS\", path, handler, hook);\n    return this;\n  }\n  /**\n   * ### all\n   * Register handler for path with method [ALL]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .all('/', () => 'hi')\n   *     .all('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  all(path, handler, hook) {\n    this.add(\"ALL\", path, handler, hook);\n    return this;\n  }\n  /**\n   * ### head\n   * Register handler for path with method [HEAD]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .head('/', () => 'hi')\n   *     .head('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  head(path, handler, hook) {\n    this.add(\"HEAD\", path, handler, hook);\n    return this;\n  }\n  /**\n   * ### connect\n   * Register handler for path with method [CONNECT]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .connect('/', () => 'hi')\n   *     .connect('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  connect(path, handler, hook) {\n    this.add(\"CONNECT\", path, handler, hook);\n    return this;\n  }\n  /**\n   * ### route\n   * Register handler for path with method [ROUTE]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .route('/', () => 'hi')\n   *     .route('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  route(method, path, handler, hook) {\n    this.add(method.toUpperCase(), path, handler, hook, hook?.config);\n    return this;\n  }\n  /**\n   * ### ws\n   * Register handler for path with method [ws]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .ws('/', {\n   *         message(ws, message) {\n   *             ws.send(message)\n   *         }\n   *     })\n   * ```\n   */\n  ws(path, options) {\n    const transform = options.transformMessage ? Array.isArray(options.transformMessage) ? options.transformMessage : [options.transformMessage] : void 0;\n    let server = null;\n    const validateMessage = getSchemaValidator(options?.body, {\n      models: this.definitions.type,\n      normalize: this.config.normalize\n    });\n    const validateResponse = getSchemaValidator(options?.response, {\n      models: this.definitions.type,\n      normalize: this.config.normalize\n    });\n    const parseMessage = (message) => {\n      if (typeof message === \"string\") {\n        const start = message?.charCodeAt(0);\n        if (start === 47 || start === 123)\n          try {\n            message = JSON.parse(message);\n          } catch {\n          }\n        else if (isNumericString(message)) message = +message;\n      }\n      if (transform?.length)\n        for (let i = 0; i < transform.length; i++) {\n          const temp = transform[i](message);\n          if (temp !== void 0) message = temp;\n        }\n      return message;\n    };\n    this.route(\n      \"$INTERNALWS\",\n      path,\n      // @ts-expect-error\n      (context) => {\n        const { set, path: path2, qi, headers, query, params } = context;\n        if (server === null) server = this.getServer();\n        if (server?.upgrade(context.request, {\n          headers: typeof options.upgrade === \"function\" ? options.upgrade(context) : options.upgrade,\n          data: {\n            validator: validateResponse,\n            open(ws) {\n              options.open?.(new ElysiaWS(ws, context));\n            },\n            message: (ws, msg) => {\n              const message = parseMessage(msg);\n              if (validateMessage?.Check(message) === false)\n                return void ws.send(\n                  new ValidationError(\n                    \"message\",\n                    validateMessage,\n                    message\n                  ).message\n                );\n              options.message?.(\n                new ElysiaWS(ws, context),\n                message\n              );\n            },\n            drain(ws) {\n              options.drain?.(\n                new ElysiaWS(ws, context)\n              );\n            },\n            close(ws, code, reason) {\n              options.close?.(\n                new ElysiaWS(ws, context),\n                code,\n                reason\n              );\n            }\n          }\n        }))\n          return;\n        set.status = 400;\n        return \"Expected a websocket connection\";\n      },\n      {\n        beforeHandle: options.beforeHandle,\n        transform: options.transform,\n        headers: options.headers,\n        params: options.params,\n        query: options.query\n      }\n    );\n    return this;\n  }\n  /**\n   * ### state\n   * Assign global mutatable state accessible for all handler\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .state('counter', 0)\n   *     .get('/', (({ counter }) => ++counter)\n   * ```\n   */\n  state(options, name, value) {\n    if (name === void 0) {\n      value = options;\n      options = { as: \"append\" };\n      name = \"\";\n    } else if (value === void 0) {\n      if (typeof options === \"string\") {\n        value = name;\n        name = options;\n        options = { as: \"append\" };\n      } else if (typeof options === \"object\") {\n        value = name;\n        name = \"\";\n      }\n    }\n    const { as } = options;\n    if (typeof name !== \"string\") return this;\n    switch (typeof value) {\n      case \"object\":\n        if (name) {\n          if (name in this.singleton.store)\n            this.singleton.store[name] = mergeDeep(\n              this.singleton.store[name],\n              value,\n              {\n                override: as === \"override\"\n              }\n            );\n          else this.singleton.store[name] = value;\n          return this;\n        }\n        if (value === null) return this;\n        this.singleton.store = mergeDeep(this.singleton.store, value, {\n          override: as === \"override\"\n        });\n        return this;\n      case \"function\":\n        if (name) {\n          if (as === \"override\" || !(name in this.singleton.store))\n            this.singleton.store[name] = value;\n        } else this.singleton.store = value(this.singleton.store);\n        return this;\n      default:\n        if (as === \"override\" || !(name in this.singleton.store))\n          this.singleton.store[name] = value;\n        return this;\n    }\n  }\n  /**\n   * ### decorate\n   * Define custom method to `Context` accessible for all handler\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .decorate('getDate', () => Date.now())\n   *     .get('/', (({ getDate }) => getDate())\n   * ```\n   */\n  decorate(options, name, value) {\n    if (name === void 0) {\n      value = options;\n      options = { as: \"append\" };\n      name = \"\";\n    } else if (value === void 0) {\n      if (typeof options === \"string\") {\n        value = name;\n        name = options;\n        options = { as: \"append\" };\n      } else if (typeof options === \"object\") {\n        value = name;\n        name = \"\";\n      }\n    }\n    const { as } = options;\n    if (typeof name !== \"string\") return this;\n    switch (typeof value) {\n      case \"object\":\n        if (name) {\n          if (name in this.singleton.decorator)\n            this.singleton.decorator[name] = mergeDeep(\n              this.singleton.decorator[name],\n              value,\n              {\n                override: as === \"override\"\n              }\n            );\n          else this.singleton.decorator[name] = value;\n          return this;\n        }\n        if (value === null) return this;\n        this.singleton.decorator = mergeDeep(\n          this.singleton.decorator,\n          value,\n          {\n            override: as === \"override\"\n          }\n        );\n        return this;\n      case \"function\":\n        if (name) {\n          if (as === \"override\" || !(name in this.singleton.decorator))\n            this.singleton.decorator[name] = value;\n        } else\n          this.singleton.decorator = value(this.singleton.decorator);\n        return this;\n      default:\n        if (as === \"override\" || !(name in this.singleton.decorator))\n          this.singleton.decorator[name] = value;\n        return this;\n    }\n  }\n  derive(optionsOrTransform, transform) {\n    if (!transform) {\n      transform = optionsOrTransform;\n      optionsOrTransform = { as: \"local\" };\n    }\n    const hook = {\n      subType: \"derive\",\n      fn: transform\n    };\n    return this.onTransform(optionsOrTransform, hook);\n  }\n  model(name, model) {\n    switch (typeof name) {\n      case \"object\":\n        Object.entries(name).forEach(([key, value]) => {\n          if (!(key in this.definitions.type))\n            this.definitions.type[key] = value;\n        });\n        return this;\n      case \"function\":\n        this.definitions.type = name(this.definitions.type);\n        return this;\n    }\n    ;\n    this.definitions.type[name] = model;\n    return this;\n  }\n  mapDerive(optionsOrDerive, mapper) {\n    if (!mapper) {\n      mapper = optionsOrDerive;\n      optionsOrDerive = { as: \"local\" };\n    }\n    const hook = {\n      subType: \"mapDerive\",\n      fn: mapper\n    };\n    return this.onTransform(optionsOrDerive, hook);\n  }\n  affix(base, type, word) {\n    if (word === \"\") return this;\n    const delimieter = [\"_\", \"-\", \" \"];\n    const capitalize = (word2) => word2[0].toUpperCase() + word2.slice(1);\n    const joinKey = base === \"prefix\" ? (prefix, word2) => delimieter.includes(prefix.at(-1) ?? \"\") ? prefix + word2 : prefix + capitalize(word2) : delimieter.includes(word.at(-1) ?? \"\") ? (suffix, word2) => word2 + suffix : (suffix, word2) => word2 + capitalize(suffix);\n    const remap = (type2) => {\n      const store = {};\n      switch (type2) {\n        case \"decorator\":\n          for (const key in this.singleton.decorator) {\n            store[joinKey(word, key)] = this.singleton.decorator[key];\n          }\n          this.singleton.decorator = store;\n          break;\n        case \"state\":\n          for (const key in this.singleton.store)\n            store[joinKey(word, key)] = this.singleton.store[key];\n          this.singleton.store = store;\n          break;\n        case \"model\":\n          for (const key in this.definitions.type)\n            store[joinKey(word, key)] = this.definitions.type[key];\n          this.definitions.type = store;\n          break;\n        case \"error\":\n          for (const key in this.definitions.error)\n            store[joinKey(word, key)] = this.definitions.error[key];\n          this.definitions.error = store;\n          break;\n      }\n    };\n    const types = Array.isArray(type) ? type : [type];\n    for (const type2 of types.some((x) => x === \"all\") ? [\"decorator\", \"state\", \"model\", \"error\"] : types)\n      remap(type2);\n    return this;\n  }\n  prefix(type, word) {\n    return this.affix(\"prefix\", type, word);\n  }\n  suffix(type, word) {\n    return this.affix(\"suffix\", type, word);\n  }\n  compile() {\n    this.fetch = this.config.aot ? composeGeneralHandler(this) : createDynamicHandler(this);\n    if (typeof this.server?.reload === \"function\")\n      this.server.reload({\n        ...this.server || {},\n        fetch: this.fetch\n      });\n    return this;\n  }\n  /**\n   * Wait until all lazy loaded modules all load is fully\n   */\n  get modules() {\n    return Promise.all(this.promisedModules.promises);\n  }\n};\nexport {\n  Cookie,\n  ELYSIA_FORM_DATA,\n  ELYSIA_REQUEST_ID,\n  ELYSIA_RESPONSE,\n  ELYSIA_TRACE,\n  ERROR_CODE,\n  Elysia,\n  InternalServerError,\n  InvalidCookieSignature,\n  InvertedStatusMap,\n  NotFoundError,\n  ParseError,\n  StatusMap,\n  ValidationError,\n  checksum,\n  cloneInference,\n  deduplicateChecksum,\n  Elysia as default,\n  error,\n  form,\n  getResponseSchemaValidator,\n  getSchemaValidator,\n  mapCompactResponse,\n  mapEarlyResponse,\n  mapResponse,\n  mapValueError,\n  mergeHook,\n  mergeObjectArray,\n  redirect,\n  replaceSchemaType,\n  replaceUrlPath,\n  t\n};\n/**\n * @license\n * \n * MIT License\n * \n * Copyright (c) 2020 Evgeny Poberezkin\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n", "// ------------------------------------------------------------------\n// Errors (re-export)\n// ------------------------------------------------------------------\nexport { ValueErrorType, ValueErrorIterator } from '../errors/index.mjs';\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nexport * from './guard/index.mjs';\n// ------------------------------------------------------------------\n// Operators\n// ------------------------------------------------------------------\nexport * from './cast/index.mjs';\nexport * from './check/index.mjs';\nexport * from './clean/index.mjs';\nexport * from './clone/index.mjs';\nexport * from './convert/index.mjs';\nexport * from './create/index.mjs';\nexport * from './default/index.mjs';\nexport * from './delta/index.mjs';\nexport * from './equal/index.mjs';\nexport * from './hash/index.mjs';\nexport * from './mutate/index.mjs';\nexport * from './pointer/index.mjs';\nexport * from './transform/index.mjs';\n// ------------------------------------------------------------------\n// Namespace\n// ------------------------------------------------------------------\nexport { Value } from './value/index.mjs';\n", "export * from './errors.mjs';\nexport * from './function.mjs';\n", "import { TypeSystemPolicy } from '../system/index.mjs';\nimport { KeyOfPattern } from '../type/keyof/index.mjs';\nimport { TypeRegistry, FormatRegistry } from '../type/registry/index.mjs';\nimport { ExtendsUndefinedCheck } from '../type/extends/extends-undefined.mjs';\nimport { GetErrorFunction } from './function.mjs';\nimport { TypeBoxError } from '../type/error/index.mjs';\nimport { Deref } from '../value/deref/index.mjs';\nimport { Hash } from '../value/hash/index.mjs';\nimport { Kind } from '../type/symbols/index.mjs';\nimport { Never } from '../type/never/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\n// prettier-ignore\nimport { IsArray, IsUint8Array, IsDate, IsPromise, IsFunction, IsAsyncIterator, IsIterator, IsBoolean, IsNumber, IsBigInt, IsString, IsSymbol, IsInteger, IsNull, IsUndefined } from '../value/guard/index.mjs';\n// ------------------------------------------------------------------\n// ValueErrorType\n// ------------------------------------------------------------------\nexport var ValueErrorType;\n(function (ValueErrorType) {\n    ValueErrorType[ValueErrorType[\"ArrayContains\"] = 0] = \"ArrayContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMaxContains\"] = 1] = \"ArrayMaxContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMaxItems\"] = 2] = \"ArrayMaxItems\";\n    ValueErrorType[ValueErrorType[\"ArrayMinContains\"] = 3] = \"ArrayMinContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMinItems\"] = 4] = \"ArrayMinItems\";\n    ValueErrorType[ValueErrorType[\"ArrayUniqueItems\"] = 5] = \"ArrayUniqueItems\";\n    ValueErrorType[ValueErrorType[\"Array\"] = 6] = \"Array\";\n    ValueErrorType[ValueErrorType[\"AsyncIterator\"] = 7] = \"AsyncIterator\";\n    ValueErrorType[ValueErrorType[\"BigIntExclusiveMaximum\"] = 8] = \"BigIntExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"BigIntExclusiveMinimum\"] = 9] = \"BigIntExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"BigIntMaximum\"] = 10] = \"BigIntMaximum\";\n    ValueErrorType[ValueErrorType[\"BigIntMinimum\"] = 11] = \"BigIntMinimum\";\n    ValueErrorType[ValueErrorType[\"BigIntMultipleOf\"] = 12] = \"BigIntMultipleOf\";\n    ValueErrorType[ValueErrorType[\"BigInt\"] = 13] = \"BigInt\";\n    ValueErrorType[ValueErrorType[\"Boolean\"] = 14] = \"Boolean\";\n    ValueErrorType[ValueErrorType[\"DateExclusiveMaximumTimestamp\"] = 15] = \"DateExclusiveMaximumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateExclusiveMinimumTimestamp\"] = 16] = \"DateExclusiveMinimumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMaximumTimestamp\"] = 17] = \"DateMaximumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMinimumTimestamp\"] = 18] = \"DateMinimumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMultipleOfTimestamp\"] = 19] = \"DateMultipleOfTimestamp\";\n    ValueErrorType[ValueErrorType[\"Date\"] = 20] = \"Date\";\n    ValueErrorType[ValueErrorType[\"Function\"] = 21] = \"Function\";\n    ValueErrorType[ValueErrorType[\"IntegerExclusiveMaximum\"] = 22] = \"IntegerExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"IntegerExclusiveMinimum\"] = 23] = \"IntegerExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"IntegerMaximum\"] = 24] = \"IntegerMaximum\";\n    ValueErrorType[ValueErrorType[\"IntegerMinimum\"] = 25] = \"IntegerMinimum\";\n    ValueErrorType[ValueErrorType[\"IntegerMultipleOf\"] = 26] = \"IntegerMultipleOf\";\n    ValueErrorType[ValueErrorType[\"Integer\"] = 27] = \"Integer\";\n    ValueErrorType[ValueErrorType[\"IntersectUnevaluatedProperties\"] = 28] = \"IntersectUnevaluatedProperties\";\n    ValueErrorType[ValueErrorType[\"Intersect\"] = 29] = \"Intersect\";\n    ValueErrorType[ValueErrorType[\"Iterator\"] = 30] = \"Iterator\";\n    ValueErrorType[ValueErrorType[\"Kind\"] = 31] = \"Kind\";\n    ValueErrorType[ValueErrorType[\"Literal\"] = 32] = \"Literal\";\n    ValueErrorType[ValueErrorType[\"Never\"] = 33] = \"Never\";\n    ValueErrorType[ValueErrorType[\"Not\"] = 34] = \"Not\";\n    ValueErrorType[ValueErrorType[\"Null\"] = 35] = \"Null\";\n    ValueErrorType[ValueErrorType[\"NumberExclusiveMaximum\"] = 36] = \"NumberExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"NumberExclusiveMinimum\"] = 37] = \"NumberExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"NumberMaximum\"] = 38] = \"NumberMaximum\";\n    ValueErrorType[ValueErrorType[\"NumberMinimum\"] = 39] = \"NumberMinimum\";\n    ValueErrorType[ValueErrorType[\"NumberMultipleOf\"] = 40] = \"NumberMultipleOf\";\n    ValueErrorType[ValueErrorType[\"Number\"] = 41] = \"Number\";\n    ValueErrorType[ValueErrorType[\"ObjectAdditionalProperties\"] = 42] = \"ObjectAdditionalProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectMaxProperties\"] = 43] = \"ObjectMaxProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectMinProperties\"] = 44] = \"ObjectMinProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectRequiredProperty\"] = 45] = \"ObjectRequiredProperty\";\n    ValueErrorType[ValueErrorType[\"Object\"] = 46] = \"Object\";\n    ValueErrorType[ValueErrorType[\"Promise\"] = 47] = \"Promise\";\n    ValueErrorType[ValueErrorType[\"RegExp\"] = 48] = \"RegExp\";\n    ValueErrorType[ValueErrorType[\"StringFormatUnknown\"] = 49] = \"StringFormatUnknown\";\n    ValueErrorType[ValueErrorType[\"StringFormat\"] = 50] = \"StringFormat\";\n    ValueErrorType[ValueErrorType[\"StringMaxLength\"] = 51] = \"StringMaxLength\";\n    ValueErrorType[ValueErrorType[\"StringMinLength\"] = 52] = \"StringMinLength\";\n    ValueErrorType[ValueErrorType[\"StringPattern\"] = 53] = \"StringPattern\";\n    ValueErrorType[ValueErrorType[\"String\"] = 54] = \"String\";\n    ValueErrorType[ValueErrorType[\"Symbol\"] = 55] = \"Symbol\";\n    ValueErrorType[ValueErrorType[\"TupleLength\"] = 56] = \"TupleLength\";\n    ValueErrorType[ValueErrorType[\"Tuple\"] = 57] = \"Tuple\";\n    ValueErrorType[ValueErrorType[\"Uint8ArrayMaxByteLength\"] = 58] = \"Uint8ArrayMaxByteLength\";\n    ValueErrorType[ValueErrorType[\"Uint8ArrayMinByteLength\"] = 59] = \"Uint8ArrayMinByteLength\";\n    ValueErrorType[ValueErrorType[\"Uint8Array\"] = 60] = \"Uint8Array\";\n    ValueErrorType[ValueErrorType[\"Undefined\"] = 61] = \"Undefined\";\n    ValueErrorType[ValueErrorType[\"Union\"] = 62] = \"Union\";\n    ValueErrorType[ValueErrorType[\"Void\"] = 63] = \"Void\";\n})(ValueErrorType || (ValueErrorType = {}));\n// ------------------------------------------------------------------\n// ValueErrors\n// ------------------------------------------------------------------\nexport class ValueErrorsUnknownTypeError extends TypeBoxError {\n    constructor(schema) {\n        super('Unknown type');\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// EscapeKey\n// ------------------------------------------------------------------\nfunction EscapeKey(key) {\n    return key.replace(/~/g, '~0').replace(/\\//g, '~1'); // RFC6901 Path\n}\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nfunction IsDefined(value) {\n    return value !== undefined;\n}\n// ------------------------------------------------------------------\n// ValueErrorIterator\n// ------------------------------------------------------------------\nexport class ValueErrorIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator;\n    }\n    /** Returns the first value error or undefined if no errors */\n    First() {\n        const next = this.iterator.next();\n        return next.done ? undefined : next.value;\n    }\n}\n// --------------------------------------------------------------------------\n// Create\n// --------------------------------------------------------------------------\nfunction Create(errorType, schema, path, value) {\n    return { type: errorType, schema, path, value, message: GetErrorFunction()({ errorType, path, schema, value }) };\n}\n// --------------------------------------------------------------------------\n// Types\n// --------------------------------------------------------------------------\nfunction* FromAny(schema, references, path, value) { }\nfunction* FromArray(schema, references, path, value) {\n    if (!IsArray(value)) {\n        return yield Create(ValueErrorType.Array, schema, path, value);\n    }\n    if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {\n        yield Create(ValueErrorType.ArrayMinItems, schema, path, value);\n    }\n    if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {\n        yield Create(ValueErrorType.ArrayMaxItems, schema, path, value);\n    }\n    for (let i = 0; i < value.length; i++) {\n        yield* Visit(schema.items, references, `${path}/${i}`, value[i]);\n    }\n    // prettier-ignore\n    if (schema.uniqueItems === true && !((function () { const set = new Set(); for (const element of value) {\n        const hashed = Hash(element);\n        if (set.has(hashed)) {\n            return false;\n        }\n        else {\n            set.add(hashed);\n        }\n    } return true; })())) {\n        yield Create(ValueErrorType.ArrayUniqueItems, schema, path, value);\n    }\n    // contains\n    if (!(IsDefined(schema.contains) || IsDefined(schema.minContains) || IsDefined(schema.maxContains))) {\n        return;\n    }\n    const containsSchema = IsDefined(schema.contains) ? schema.contains : Never();\n    const containsCount = value.reduce((acc, value, index) => (Visit(containsSchema, references, `${path}${index}`, value).next().done === true ? acc + 1 : acc), 0);\n    if (containsCount === 0) {\n        yield Create(ValueErrorType.ArrayContains, schema, path, value);\n    }\n    if (IsNumber(schema.minContains) && containsCount < schema.minContains) {\n        yield Create(ValueErrorType.ArrayMinContains, schema, path, value);\n    }\n    if (IsNumber(schema.maxContains) && containsCount > schema.maxContains) {\n        yield Create(ValueErrorType.ArrayMaxContains, schema, path, value);\n    }\n}\nfunction* FromAsyncIterator(schema, references, path, value) {\n    if (!IsAsyncIterator(value))\n        yield Create(ValueErrorType.AsyncIterator, schema, path, value);\n}\nfunction* FromBigInt(schema, references, path, value) {\n    if (!IsBigInt(value))\n        return yield Create(ValueErrorType.BigInt, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.BigIntExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.BigIntExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.BigIntMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.BigIntMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {\n        yield Create(ValueErrorType.BigIntMultipleOf, schema, path, value);\n    }\n}\nfunction* FromBoolean(schema, references, path, value) {\n    if (!IsBoolean(value))\n        yield Create(ValueErrorType.Boolean, schema, path, value);\n}\nfunction* FromConstructor(schema, references, path, value) {\n    yield* Visit(schema.returns, references, path, value.prototype);\n}\nfunction* FromDate(schema, references, path, value) {\n    if (!IsDate(value))\n        return yield Create(ValueErrorType.Date, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {\n        yield Create(ValueErrorType.DateExclusiveMaximumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {\n        yield Create(ValueErrorType.DateExclusiveMinimumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {\n        yield Create(ValueErrorType.DateMaximumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {\n        yield Create(ValueErrorType.DateMinimumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {\n        yield Create(ValueErrorType.DateMultipleOfTimestamp, schema, path, value);\n    }\n}\nfunction* FromFunction(schema, references, path, value) {\n    if (!IsFunction(value))\n        yield Create(ValueErrorType.Function, schema, path, value);\n}\nfunction* FromInteger(schema, references, path, value) {\n    if (!IsInteger(value))\n        return yield Create(ValueErrorType.Integer, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.IntegerExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.IntegerExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.IntegerMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.IntegerMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        yield Create(ValueErrorType.IntegerMultipleOf, schema, path, value);\n    }\n}\nfunction* FromIntersect(schema, references, path, value) {\n    for (const inner of schema.allOf) {\n        const next = Visit(inner, references, path, value).next();\n        if (!next.done) {\n            yield Create(ValueErrorType.Intersect, schema, path, value);\n            yield next.value;\n        }\n    }\n    if (schema.unevaluatedProperties === false) {\n        const keyCheck = new RegExp(KeyOfPattern(schema));\n        for (const valueKey of Object.getOwnPropertyNames(value)) {\n            if (!keyCheck.test(valueKey)) {\n                yield Create(ValueErrorType.IntersectUnevaluatedProperties, schema, `${path}/${valueKey}`, value);\n            }\n        }\n    }\n    if (typeof schema.unevaluatedProperties === 'object') {\n        const keyCheck = new RegExp(KeyOfPattern(schema));\n        for (const valueKey of Object.getOwnPropertyNames(value)) {\n            if (!keyCheck.test(valueKey)) {\n                const next = Visit(schema.unevaluatedProperties, references, `${path}/${valueKey}`, value[valueKey]).next();\n                if (!next.done)\n                    yield next.value; // yield interior\n            }\n        }\n    }\n}\nfunction* FromIterator(schema, references, path, value) {\n    if (!IsIterator(value))\n        yield Create(ValueErrorType.Iterator, schema, path, value);\n}\nfunction* FromLiteral(schema, references, path, value) {\n    if (!(value === schema.const))\n        yield Create(ValueErrorType.Literal, schema, path, value);\n}\nfunction* FromNever(schema, references, path, value) {\n    yield Create(ValueErrorType.Never, schema, path, value);\n}\nfunction* FromNot(schema, references, path, value) {\n    if (Visit(schema.not, references, path, value).next().done === true)\n        yield Create(ValueErrorType.Not, schema, path, value);\n}\nfunction* FromNull(schema, references, path, value) {\n    if (!IsNull(value))\n        yield Create(ValueErrorType.Null, schema, path, value);\n}\nfunction* FromNumber(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsNumberLike(value))\n        return yield Create(ValueErrorType.Number, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.NumberExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.NumberExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.NumberMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.NumberMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        yield Create(ValueErrorType.NumberMultipleOf, schema, path, value);\n    }\n}\nfunction* FromObject(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsObjectLike(value))\n        return yield Create(ValueErrorType.Object, schema, path, value);\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);\n    }\n    const requiredKeys = Array.isArray(schema.required) ? schema.required : [];\n    const knownKeys = Object.getOwnPropertyNames(schema.properties);\n    const unknownKeys = Object.getOwnPropertyNames(value);\n    for (const requiredKey of requiredKeys) {\n        if (unknownKeys.includes(requiredKey))\n            continue;\n        yield Create(ValueErrorType.ObjectRequiredProperty, schema.properties[requiredKey], `${path}/${EscapeKey(requiredKey)}`, undefined);\n    }\n    if (schema.additionalProperties === false) {\n        for (const valueKey of unknownKeys) {\n            if (!knownKeys.includes(valueKey)) {\n                yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);\n            }\n        }\n    }\n    if (typeof schema.additionalProperties === 'object') {\n        for (const valueKey of unknownKeys) {\n            if (knownKeys.includes(valueKey))\n                continue;\n            yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);\n        }\n    }\n    for (const knownKey of knownKeys) {\n        const property = schema.properties[knownKey];\n        if (schema.required && schema.required.includes(knownKey)) {\n            yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);\n            if (ExtendsUndefinedCheck(schema) && !(knownKey in value)) {\n                yield Create(ValueErrorType.ObjectRequiredProperty, property, `${path}/${EscapeKey(knownKey)}`, undefined);\n            }\n        }\n        else {\n            if (TypeSystemPolicy.IsExactOptionalProperty(value, knownKey)) {\n                yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);\n            }\n        }\n    }\n}\nfunction* FromPromise(schema, references, path, value) {\n    if (!IsPromise(value))\n        yield Create(ValueErrorType.Promise, schema, path, value);\n}\nfunction* FromRecord(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsRecordLike(value))\n        return yield Create(ValueErrorType.Object, schema, path, value);\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);\n    }\n    const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n    const regex = new RegExp(patternKey);\n    for (const [propertyKey, propertyValue] of Object.entries(value)) {\n        if (regex.test(propertyKey))\n            yield* Visit(patternSchema, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n    }\n    if (typeof schema.additionalProperties === 'object') {\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\n            if (!regex.test(propertyKey))\n                yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n        }\n    }\n    if (schema.additionalProperties === false) {\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\n            if (regex.test(propertyKey))\n                continue;\n            return yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n        }\n    }\n}\nfunction* FromRef(schema, references, path, value) {\n    yield* Visit(Deref(schema, references), references, path, value);\n}\nfunction* FromRegExp(schema, references, path, value) {\n    if (!IsString(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {\n        yield Create(ValueErrorType.StringMinLength, schema, path, value);\n    }\n    if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {\n        yield Create(ValueErrorType.StringMaxLength, schema, path, value);\n    }\n    const regex = new RegExp(schema.source, schema.flags);\n    if (!regex.test(value)) {\n        return yield Create(ValueErrorType.RegExp, schema, path, value);\n    }\n}\nfunction* FromString(schema, references, path, value) {\n    if (!IsString(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {\n        yield Create(ValueErrorType.StringMinLength, schema, path, value);\n    }\n    if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {\n        yield Create(ValueErrorType.StringMaxLength, schema, path, value);\n    }\n    if (IsString(schema.pattern)) {\n        const regex = new RegExp(schema.pattern);\n        if (!regex.test(value)) {\n            yield Create(ValueErrorType.StringPattern, schema, path, value);\n        }\n    }\n    if (IsString(schema.format)) {\n        if (!FormatRegistry.Has(schema.format)) {\n            yield Create(ValueErrorType.StringFormatUnknown, schema, path, value);\n        }\n        else {\n            const format = FormatRegistry.Get(schema.format);\n            if (!format(value)) {\n                yield Create(ValueErrorType.StringFormat, schema, path, value);\n            }\n        }\n    }\n}\nfunction* FromSymbol(schema, references, path, value) {\n    if (!IsSymbol(value))\n        yield Create(ValueErrorType.Symbol, schema, path, value);\n}\nfunction* FromTemplateLiteral(schema, references, path, value) {\n    if (!IsString(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    const regex = new RegExp(schema.pattern);\n    if (!regex.test(value)) {\n        yield Create(ValueErrorType.StringPattern, schema, path, value);\n    }\n}\nfunction* FromThis(schema, references, path, value) {\n    yield* Visit(Deref(schema, references), references, path, value);\n}\nfunction* FromTuple(schema, references, path, value) {\n    if (!IsArray(value))\n        return yield Create(ValueErrorType.Tuple, schema, path, value);\n    if (schema.items === undefined && !(value.length === 0)) {\n        return yield Create(ValueErrorType.TupleLength, schema, path, value);\n    }\n    if (!(value.length === schema.maxItems)) {\n        return yield Create(ValueErrorType.TupleLength, schema, path, value);\n    }\n    if (!schema.items) {\n        return;\n    }\n    for (let i = 0; i < schema.items.length; i++) {\n        yield* Visit(schema.items[i], references, `${path}/${i}`, value[i]);\n    }\n}\nfunction* FromUndefined(schema, references, path, value) {\n    if (!IsUndefined(value))\n        yield Create(ValueErrorType.Undefined, schema, path, value);\n}\nfunction* FromUnion(schema, references, path, value) {\n    let count = 0;\n    for (const subschema of schema.anyOf) {\n        const errors = [...Visit(subschema, references, path, value)];\n        if (errors.length === 0)\n            return; // matched\n        count += errors.length;\n    }\n    if (count > 0) {\n        yield Create(ValueErrorType.Union, schema, path, value);\n    }\n}\nfunction* FromUint8Array(schema, references, path, value) {\n    if (!IsUint8Array(value))\n        return yield Create(ValueErrorType.Uint8Array, schema, path, value);\n    if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {\n        yield Create(ValueErrorType.Uint8ArrayMaxByteLength, schema, path, value);\n    }\n    if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {\n        yield Create(ValueErrorType.Uint8ArrayMinByteLength, schema, path, value);\n    }\n}\nfunction* FromUnknown(schema, references, path, value) { }\nfunction* FromVoid(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsVoidLike(value))\n        yield Create(ValueErrorType.Void, schema, path, value);\n}\nfunction* FromKind(schema, references, path, value) {\n    const check = TypeRegistry.Get(schema[Kind]);\n    if (!check(schema, value))\n        yield Create(ValueErrorType.Kind, schema, path, value);\n}\nfunction* Visit(schema, references, path, value) {\n    const references_ = IsDefined(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Any':\n            return yield* FromAny(schema_, references_, path, value);\n        case 'Array':\n            return yield* FromArray(schema_, references_, path, value);\n        case 'AsyncIterator':\n            return yield* FromAsyncIterator(schema_, references_, path, value);\n        case 'BigInt':\n            return yield* FromBigInt(schema_, references_, path, value);\n        case 'Boolean':\n            return yield* FromBoolean(schema_, references_, path, value);\n        case 'Constructor':\n            return yield* FromConstructor(schema_, references_, path, value);\n        case 'Date':\n            return yield* FromDate(schema_, references_, path, value);\n        case 'Function':\n            return yield* FromFunction(schema_, references_, path, value);\n        case 'Integer':\n            return yield* FromInteger(schema_, references_, path, value);\n        case 'Intersect':\n            return yield* FromIntersect(schema_, references_, path, value);\n        case 'Iterator':\n            return yield* FromIterator(schema_, references_, path, value);\n        case 'Literal':\n            return yield* FromLiteral(schema_, references_, path, value);\n        case 'Never':\n            return yield* FromNever(schema_, references_, path, value);\n        case 'Not':\n            return yield* FromNot(schema_, references_, path, value);\n        case 'Null':\n            return yield* FromNull(schema_, references_, path, value);\n        case 'Number':\n            return yield* FromNumber(schema_, references_, path, value);\n        case 'Object':\n            return yield* FromObject(schema_, references_, path, value);\n        case 'Promise':\n            return yield* FromPromise(schema_, references_, path, value);\n        case 'Record':\n            return yield* FromRecord(schema_, references_, path, value);\n        case 'Ref':\n            return yield* FromRef(schema_, references_, path, value);\n        case 'RegExp':\n            return yield* FromRegExp(schema_, references_, path, value);\n        case 'String':\n            return yield* FromString(schema_, references_, path, value);\n        case 'Symbol':\n            return yield* FromSymbol(schema_, references_, path, value);\n        case 'TemplateLiteral':\n            return yield* FromTemplateLiteral(schema_, references_, path, value);\n        case 'This':\n            return yield* FromThis(schema_, references_, path, value);\n        case 'Tuple':\n            return yield* FromTuple(schema_, references_, path, value);\n        case 'Undefined':\n            return yield* FromUndefined(schema_, references_, path, value);\n        case 'Union':\n            return yield* FromUnion(schema_, references_, path, value);\n        case 'Uint8Array':\n            return yield* FromUint8Array(schema_, references_, path, value);\n        case 'Unknown':\n            return yield* FromUnknown(schema_, references_, path, value);\n        case 'Void':\n            return yield* FromVoid(schema_, references_, path, value);\n        default:\n            if (!TypeRegistry.Has(schema_[Kind]))\n                throw new ValueErrorsUnknownTypeError(schema);\n            return yield* FromKind(schema_, references_, path, value);\n    }\n}\n/** Returns an iterator for each error in this value. */\nexport function Errors(...args) {\n    const iterator = args.length === 3 ? Visit(args[0], args[1], '', args[2]) : Visit(args[0], [], '', args[1]);\n    return new ValueErrorIterator(iterator);\n}\n", "export * from './policy.mjs';\nexport * from './system.mjs';\n", "import { IsObject, IsArray, IsNumber, IsUndefined } from '../value/guard/index.mjs';\nexport var TypeSystemPolicy;\n(function (TypeSystemPolicy) {\n    // ------------------------------------------------------------------\n    // TypeSystemPolicy\n    // ------------------------------------------------------------------\n    /** Shared assertion routines used by the value and errors modules */\n    /** Sets whether TypeBox should assert optional properties using the TypeScript `exactOptionalPropertyTypes` assertion policy. The default is `false` */\n    TypeSystemPolicy.ExactOptionalPropertyTypes = false;\n    /** Sets whether arrays should be treated as a kind of objects. The default is `false` */\n    TypeSystemPolicy.AllowArrayObject = false;\n    /** Sets whether `NaN` or `Infinity` should be treated as valid numeric values. The default is `false` */\n    TypeSystemPolicy.AllowNaN = false;\n    /** Sets whether `null` should validate for void types. The default is `false` */\n    TypeSystemPolicy.AllowNullVoid = false;\n    /** Asserts this value using the ExactOptionalPropertyTypes policy */\n    function IsExactOptionalProperty(value, key) {\n        return TypeSystemPolicy.ExactOptionalPropertyTypes ? key in value : value[key] !== undefined;\n    }\n    TypeSystemPolicy.IsExactOptionalProperty = IsExactOptionalProperty;\n    /** Asserts this value using the AllowArrayObjects policy */\n    function IsObjectLike(value) {\n        const isObject = IsObject(value);\n        return TypeSystemPolicy.AllowArrayObject ? isObject : isObject && !IsArray(value);\n    }\n    TypeSystemPolicy.IsObjectLike = IsObjectLike;\n    /** Asserts this value as a record using the AllowArrayObjects policy */\n    function IsRecordLike(value) {\n        return IsObjectLike(value) && !(value instanceof Date) && !(value instanceof Uint8Array);\n    }\n    TypeSystemPolicy.IsRecordLike = IsRecordLike;\n    /** Asserts this value using the AllowNaN policy */\n    function IsNumberLike(value) {\n        return TypeSystemPolicy.AllowNaN ? IsNumber(value) : Number.isFinite(value);\n    }\n    TypeSystemPolicy.IsNumberLike = IsNumberLike;\n    /** Asserts this value using the AllowVoidNull policy */\n    function IsVoidLike(value) {\n        const isUndefined = IsUndefined(value);\n        return TypeSystemPolicy.AllowNullVoid ? isUndefined || value === null : isUndefined;\n    }\n    TypeSystemPolicy.IsVoidLike = IsVoidLike;\n})(TypeSystemPolicy || (TypeSystemPolicy = {}));\n", "export * from './guard.mjs';\n", "// --------------------------------------------------------------------------\n// Iterators\n// --------------------------------------------------------------------------\n/** Returns true if this value is an async iterator */\nexport function IsAsyncIterator(value) {\n    return IsObject(value) && Symbol.asyncIterator in value;\n}\n/** Returns true if this value is an iterator */\nexport function IsIterator(value) {\n    return IsObject(value) && Symbol.iterator in value;\n}\n// --------------------------------------------------------------------------\n// Object Instances\n// --------------------------------------------------------------------------\n/** Returns true if this value is not an instance of a class */\nexport function IsStandardObject(value) {\n    return IsObject(value) && (Object.getPrototypeOf(value) === Object.prototype || Object.getPrototypeOf(value) === null);\n}\n/** Returns true if this value is an instance of a class */\nexport function IsInstanceObject(value) {\n    return IsObject(value) && !IsArray(value) && IsFunction(value.constructor) && value.constructor.name !== 'Object';\n}\n// --------------------------------------------------------------------------\n// JavaScript\n// --------------------------------------------------------------------------\n/** Returns true if this value is a Promise */\nexport function IsPromise(value) {\n    return value instanceof Promise;\n}\n/** Returns true if this value is a Date */\nexport function IsDate(value) {\n    return value instanceof Date && Number.isFinite(value.getTime());\n}\n/** Returns true if this value is an instance of Map<K, T> */\nexport function IsMap(value) {\n    return value instanceof globalThis.Map;\n}\n/** Returns true if this value is an instance of Set<T> */\nexport function IsSet(value) {\n    return value instanceof globalThis.Set;\n}\n/** Returns true if this value is RegExp */\nexport function IsRegExp(value) {\n    return value instanceof globalThis.RegExp;\n}\n/** Returns true if this value is a typed array */\nexport function IsTypedArray(value) {\n    return ArrayBuffer.isView(value);\n}\n/** Returns true if the value is a Int8Array */\nexport function IsInt8Array(value) {\n    return value instanceof globalThis.Int8Array;\n}\n/** Returns true if the value is a Uint8Array */\nexport function IsUint8Array(value) {\n    return value instanceof globalThis.Uint8Array;\n}\n/** Returns true if the value is a Uint8ClampedArray */\nexport function IsUint8ClampedArray(value) {\n    return value instanceof globalThis.Uint8ClampedArray;\n}\n/** Returns true if the value is a Int16Array */\nexport function IsInt16Array(value) {\n    return value instanceof globalThis.Int16Array;\n}\n/** Returns true if the value is a Uint16Array */\nexport function IsUint16Array(value) {\n    return value instanceof globalThis.Uint16Array;\n}\n/** Returns true if the value is a Int32Array */\nexport function IsInt32Array(value) {\n    return value instanceof globalThis.Int32Array;\n}\n/** Returns true if the value is a Uint32Array */\nexport function IsUint32Array(value) {\n    return value instanceof globalThis.Uint32Array;\n}\n/** Returns true if the value is a Float32Array */\nexport function IsFloat32Array(value) {\n    return value instanceof globalThis.Float32Array;\n}\n/** Returns true if the value is a Float64Array */\nexport function IsFloat64Array(value) {\n    return value instanceof globalThis.Float64Array;\n}\n/** Returns true if the value is a BigInt64Array */\nexport function IsBigInt64Array(value) {\n    return value instanceof globalThis.BigInt64Array;\n}\n/** Returns true if the value is a BigUint64Array */\nexport function IsBigUint64Array(value) {\n    return value instanceof globalThis.BigUint64Array;\n}\n// --------------------------------------------------------------------------\n// Standard\n// --------------------------------------------------------------------------\n/** Returns true if this value has this property key */\nexport function HasPropertyKey(value, key) {\n    return key in value;\n}\n/** Returns true of this value is an object type */\nexport function IsObject(value) {\n    return value !== null && typeof value === 'object';\n}\n/** Returns true if this value is an array, but not a typed array */\nexport function IsArray(value) {\n    return Array.isArray(value) && !ArrayBuffer.isView(value);\n}\n/** Returns true if this value is an undefined */\nexport function IsUndefined(value) {\n    return value === undefined;\n}\n/** Returns true if this value is an null */\nexport function IsNull(value) {\n    return value === null;\n}\n/** Returns true if this value is an boolean */\nexport function IsBoolean(value) {\n    return typeof value === 'boolean';\n}\n/** Returns true if this value is an number */\nexport function IsNumber(value) {\n    return typeof value === 'number';\n}\n/** Returns true if this value is an integer */\nexport function IsInteger(value) {\n    return Number.isInteger(value);\n}\n/** Returns true if this value is bigint */\nexport function IsBigInt(value) {\n    return typeof value === 'bigint';\n}\n/** Returns true if this value is string */\nexport function IsString(value) {\n    return typeof value === 'string';\n}\n/** Returns true if this value is a function */\nexport function IsFunction(value) {\n    return typeof value === 'function';\n}\n/** Returns true if this value is a symbol */\nexport function IsSymbol(value) {\n    return typeof value === 'symbol';\n}\n/** Returns true if this value is a value type such as number, string, boolean */\nexport function IsValueType(value) {\n    // prettier-ignore\n    return (IsBigInt(value) ||\n        IsBoolean(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsUndefined(value));\n}\n", "import { TypeRegistry, FormatRegistry } from '../type/registry/index.mjs';\nimport { Unsafe } from '../type/unsafe/index.mjs';\nimport { Kind } from '../type/symbols/index.mjs';\nimport { TypeBoxError } from '../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class TypeSystemDuplicateTypeKind extends TypeBoxError {\n    constructor(kind) {\n        super(`Duplicate type kind '${kind}' detected`);\n    }\n}\nexport class TypeSystemDuplicateFormat extends TypeBoxError {\n    constructor(kind) {\n        super(`Duplicate string format '${kind}' detected`);\n    }\n}\n/** Creates user defined types and formats and provides overrides for value checking behaviours */\nexport var TypeSystem;\n(function (TypeSystem) {\n    /** Creates a new type */\n    function Type(kind, check) {\n        if (TypeRegistry.Has(kind))\n            throw new TypeSystemDuplicateTypeKind(kind);\n        TypeRegistry.Set(kind, check);\n        return (options = {}) => Unsafe({ ...options, [Kind]: kind });\n    }\n    TypeSystem.Type = Type;\n    /** Creates a new string format */\n    function Format(format, check) {\n        if (FormatRegistry.Has(format))\n            throw new TypeSystemDuplicateFormat(format);\n        FormatRegistry.Set(format, check);\n        return format;\n    }\n    TypeSystem.Format = Format;\n})(TypeSystem || (TypeSystem = {}));\n", "export * as FormatRegistry from './format.mjs';\nexport * as TypeRegistry from './type.mjs';\n", "/** A registry for user defined string formats */\nconst map = new Map();\n/** Returns the entries in this registry */\nexport function Entries() {\n    return new Map(map);\n}\n/** Clears all user defined string formats */\nexport function Clear() {\n    return map.clear();\n}\n/** Deletes a registered format */\nexport function Delete(format) {\n    return map.delete(format);\n}\n/** Returns true if the user defined string format exists */\nexport function Has(format) {\n    return map.has(format);\n}\n/** Sets a validation function for a user defined string format */\nexport function Set(format, func) {\n    map.set(format, func);\n}\n/** Gets a validation function for a user defined string format */\nexport function Get(format) {\n    return map.get(format);\n}\n", "/** A registry for user defined types */\nconst map = new Map();\n/** Returns the entries in this registry */\nexport function Entries() {\n    return new Map(map);\n}\n/** Clears all user defined types */\nexport function Clear() {\n    return map.clear();\n}\n/** Deletes a registered type */\nexport function Delete(kind) {\n    return map.delete(kind);\n}\n/** Returns true if this registry contains this kind */\nexport function Has(kind) {\n    return map.has(kind);\n}\n/** Sets a validation function for a user defined type */\nexport function Set(kind, func) {\n    map.set(kind, func);\n}\n/** Gets a custom validation function for a user defined type */\nexport function Get(kind) {\n    return map.get(kind);\n}\n", "export * from './unsafe.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Unsafe type that will infers as the generic argument T */\nexport function Unsafe(options = {}) {\n    return {\n        ...options,\n        [Kind]: options[Kind] ?? 'Unsafe',\n    };\n}\n", "export * from './symbols.mjs';\n", "/** Symbol key applied to transform types */\nexport const TransformKind = Symbol.for('TypeBox.Transform');\n/** Symbol key applied to readonly types */\nexport const ReadonlyKind = Symbol.for('TypeBox.Readonly');\n/** Symbol key applied to optional types */\nexport const OptionalKind = Symbol.for('TypeBox.Optional');\n/** Symbol key applied to types */\nexport const Hint = Symbol.for('TypeBox.Hint');\n/** Symbol key applied to types */\nexport const Kind = Symbol.for('TypeBox.Kind');\n", "export * from './error.mjs';\n", "/** The base Error type thrown for all TypeBox exceptions  */\nexport class TypeBoxError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n", "export * from './keyof-from-mapped-result.mjs';\nexport * from './keyof-property-entries.mjs';\nexport * from './keyof-property-keys.mjs';\nexport * from './keyof.mjs';\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { KeyOf } from './keyof.mjs';\n// prettier-ignore\nfunction FromProperties(K, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(K))\n        Acc[K2] = KeyOf(K[K2], options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, options) {\n    return FromProperties(R.properties, options);\n}\n// prettier-ignore\nexport function KeyOfFromMappedResult(R, options) {\n    const P = FromMappedResult(R, options);\n    return MappedResult(P);\n}\n", "export * from './mapped-key.mjs';\nexport * from './mapped-result.mjs';\nexport * from './mapped.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n// prettier-ignore\nexport function MappedKey(T) {\n    return {\n        [Kind]: 'MappedKey',\n        keys: T\n    };\n}\n", "import { Kind } from '../symbols/index.mjs';\n// prettier-ignore\nexport function MappedResult(properties) {\n    return {\n        [Kind]: 'MappedResult',\n        properties\n    };\n}\n", "import { Kind, OptionalKind, ReadonlyKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\n// evaluation types\nimport { Array } from '../array/index.mjs';\nimport { AsyncIterator } from '../async-iterator/index.mjs';\nimport { Constructor } from '../constructor/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Iterator } from '../iterator/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { Promise } from '../promise/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Union } from '../union/index.mjs';\n// operator\nimport { SetIncludes } from '../sets/index.mjs';\n// mapping types\nimport { MappedResult } from './mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsAsyncIterator, IsConstructor, IsFunction, IsIntersect, IsIterator, IsReadonly, IsMappedResult, IsMappedKey, IsObject, IsOptional, IsPromise, IsSchema, IsTuple, IsUnion } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromMappedResult(K, P) {\n    return (K in P\n        ? FromSchemaType(K, P[K])\n        : MappedResult(P));\n}\n// prettier-ignore\nfunction MappedKeyToKnownMappedResultProperties(K) {\n    return { [K]: Literal(K) };\n}\n// prettier-ignore\nfunction MappedKeyToUnknownMappedResultProperties(P) {\n    const Acc = {};\n    for (const L of P)\n        Acc[L] = Literal(L);\n    return Acc;\n}\n// prettier-ignore\nfunction MappedKeyToMappedResultProperties(K, P) {\n    return (SetIncludes(P, K)\n        ? MappedKeyToKnownMappedResultProperties(K)\n        : MappedKeyToUnknownMappedResultProperties(P));\n}\n// prettier-ignore\nfunction FromMappedKey(K, P) {\n    const R = MappedKeyToMappedResultProperties(K, P);\n    return FromMappedResult(K, R);\n}\n// prettier-ignore\nfunction FromRest(K, T) {\n    return T.map(L => FromSchemaType(K, L));\n}\n// prettier-ignore\nfunction FromProperties(K, T) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(T))\n        Acc[K2] = FromSchemaType(K, T[K2]);\n    return Acc;\n}\n// prettier-ignore\nfunction FromSchemaType(K, T) {\n    return (\n    // unevaluated modifier types\n    IsOptional(T) ? Optional(FromSchemaType(K, Discard(T, [OptionalKind]))) :\n        IsReadonly(T) ? Readonly(FromSchemaType(K, Discard(T, [ReadonlyKind]))) :\n            // unevaluated mapped types\n            IsMappedResult(T) ? FromMappedResult(K, T.properties) :\n                IsMappedKey(T) ? FromMappedKey(K, T.keys) :\n                    // unevaluated types\n                    IsConstructor(T) ? Constructor(FromRest(K, T.parameters), FromSchemaType(K, T.returns)) :\n                        IsFunction(T) ? FunctionType(FromRest(K, T.parameters), FromSchemaType(K, T.returns)) :\n                            IsAsyncIterator(T) ? AsyncIterator(FromSchemaType(K, T.items)) :\n                                IsIterator(T) ? Iterator(FromSchemaType(K, T.items)) :\n                                    IsIntersect(T) ? Intersect(FromRest(K, T.allOf)) :\n                                        IsUnion(T) ? Union(FromRest(K, T.anyOf)) :\n                                            IsTuple(T) ? Tuple(FromRest(K, T.items ?? [])) :\n                                                IsObject(T) ? Object(FromProperties(K, T.properties)) :\n                                                    IsArray(T) ? Array(FromSchemaType(K, T.items)) :\n                                                        IsPromise(T) ? Promise(FromSchemaType(K, T.item)) :\n                                                            T);\n}\n// prettier-ignore\nexport function MappedFunctionReturnType(K, T) {\n    const Acc = {};\n    for (const L of K)\n        Acc[L] = FromSchemaType(L, T);\n    return Acc;\n}\n/** `[Json]` Creates a Mapped object type */\nexport function Mapped(key, map, options = {}) {\n    const K = IsSchema(key) ? IndexPropertyKeys(key) : key;\n    const RT = map({ [Kind]: 'MappedKey', keys: K });\n    const R = MappedFunctionReturnType(K, RT);\n    return CloneType(Object(R), options);\n}\n", "import { Clone } from './value.mjs';\n/** Clones a Rest */\nexport function CloneRest(schemas) {\n    return schemas.map((schema) => CloneType(schema));\n}\n/** Clones a Type */\nexport function CloneType(schema, options = {}) {\n    return { ...Clone(schema), ...options };\n}\n", "import * as ValueGuard from '../guard/value.mjs';\nfunction ArrayType(value) {\n    return value.map((value) => Visit(value));\n}\nfunction DateType(value) {\n    return new Date(value.getTime());\n}\nfunction Uint8ArrayType(value) {\n    return new Uint8Array(value);\n}\nfunction RegExpType(value) {\n    return new RegExp(value.source, value.flags);\n}\nfunction ObjectType(value) {\n    const result = {};\n    for (const key of Object.getOwnPropertyNames(value)) {\n        result[key] = Visit(value[key]);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n        result[key] = Visit(value[key]);\n    }\n    return result;\n}\n// prettier-ignore\nfunction Visit(value) {\n    return (ValueGuard.IsArray(value) ? ArrayType(value) :\n        ValueGuard.IsDate(value) ? DateType(value) :\n            ValueGuard.IsUint8Array(value) ? Uint8ArrayType(value) :\n                ValueGuard.IsRegExp(value) ? RegExpType(value) :\n                    ValueGuard.IsObject(value) ? ObjectType(value) :\n                        value);\n}\n/** Clones a value */\nexport function Clone(value) {\n    return Visit(value);\n}\n", "/** Returns true if this value is an async iterator */\nexport function IsAsyncIterator(value) {\n    return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.asyncIterator in value;\n}\n/** Returns true if this value is an array */\nexport function IsArray(value) {\n    return Array.isArray(value);\n}\n/** Returns true if this value is bigint */\nexport function IsBigInt(value) {\n    return typeof value === 'bigint';\n}\n/** Returns true if this value is a boolean */\nexport function IsBoolean(value) {\n    return typeof value === 'boolean';\n}\n/** Returns true if this value is a Date object */\nexport function IsDate(value) {\n    return value instanceof globalThis.Date;\n}\n/** Returns true if this value is a function */\nexport function IsFunction(value) {\n    return typeof value === 'function';\n}\n/** Returns true if this value is an iterator */\nexport function IsIterator(value) {\n    return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.iterator in value;\n}\n/** Returns true if this value is null */\nexport function IsNull(value) {\n    return value === null;\n}\n/** Returns true if this value is number */\nexport function IsNumber(value) {\n    return typeof value === 'number';\n}\n/** Returns true if this value is an object */\nexport function IsObject(value) {\n    return typeof value === 'object' && value !== null;\n}\n/** Returns true if this value is RegExp */\nexport function IsRegExp(value) {\n    return value instanceof globalThis.RegExp;\n}\n/** Returns true if this value is string */\nexport function IsString(value) {\n    return typeof value === 'string';\n}\n/** Returns true if this value is symbol */\nexport function IsSymbol(value) {\n    return typeof value === 'symbol';\n}\n/** Returns true if this value is a Uint8Array */\nexport function IsUint8Array(value) {\n    return value instanceof globalThis.Uint8Array;\n}\n/** Returns true if this value is undefined */\nexport function IsUndefined(value) {\n    return value === undefined;\n}\n", "export * from './discard.mjs';\n", "function DiscardKey(value, key) {\n    const { [key]: _, ...rest } = value;\n    return rest;\n}\nexport function Discard(value, keys) {\n    return keys.reduce((acc, key) => DiscardKey(acc, key), value);\n}\n", "export * from './array.mjs';\n", "import { CloneType } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Array type */\nexport function Array(schema, options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Array',\n        type: 'array',\n        items: CloneType(schema),\n    };\n}\n", "export * from './async-iterator.mjs';\n", "import { Kind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\n/** `[JavaScript]` Creates a AsyncIterator type */\nexport function AsyncIterator(items, options = {}) {\n    return {\n        ...options,\n        [Kind]: 'AsyncIterator',\n        type: 'AsyncIterator',\n        items: CloneType(items),\n    };\n}\n", "export * from './constructor.mjs';\n", "import { CloneType, CloneRest } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Constructor type */\nexport function Constructor(parameters, returns, options) {\n    return {\n        ...options,\n        [Kind]: 'Constructor',\n        type: 'Constructor',\n        parameters: CloneRest(parameters),\n        returns: CloneType(returns),\n    };\n}\n", "export * from './function.mjs';\n", "import { CloneType, CloneRest } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Function type */\nexport function Function(parameters, returns, options) {\n    return {\n        ...options,\n        [Kind]: 'Function',\n        type: 'Function',\n        parameters: CloneRest(parameters),\n        returns: CloneType(returns),\n    };\n}\n", "export * from './indexed-from-mapped-key.mjs';\nexport * from './indexed-from-mapped-result.mjs';\nexport * from './indexed-property-keys.mjs';\nexport * from './indexed.mjs';\n", "import { Index } from './indexed.mjs';\nimport { MappedResult } from '../mapped/index.mjs';\n// prettier-ignore\nfunction MappedIndexPropertyKey(T, K, options) {\n    return { [K]: Index(T, [K], options) };\n}\n// prettier-ignore\nfunction MappedIndexPropertyKeys(T, K, options) {\n    return K.reduce((Acc, L) => {\n        return { ...Acc, ...MappedIndexPropertyKey(T, L, options) };\n    }, {});\n}\n// prettier-ignore\nfunction MappedIndexProperties(T, K, options) {\n    return MappedIndexPropertyKeys(T, K.keys, options);\n}\n// prettier-ignore\nexport function IndexFromMappedKey(T, K, options) {\n    const P = MappedIndexProperties(T, K, options);\n    return MappedResult(P);\n}\n", "import { Never } from '../never/index.mjs';\nimport { IntersectEvaluated } from '../intersect/index.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { IndexPropertyKeys } from './indexed-property-keys.mjs';\nimport { IndexFromMappedKey } from './indexed-from-mapped-key.mjs';\nimport { IndexFromMappedResult } from './indexed-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsIntersect, IsObject, IsMappedKey, IsMappedResult, IsNever, IsSchema, IsTuple, IsUnion } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T, K) {\n    return T.map(L => IndexFromPropertyKey(L, K));\n}\n// prettier-ignore\nfunction FromIntersectRest(T) {\n    return T.filter(L => !IsNever(L));\n}\n// prettier-ignore\nfunction FromIntersect(T, K) {\n    return (IntersectEvaluated(FromIntersectRest(FromRest(T, K))));\n}\n// prettier-ignore\nfunction FromUnionRest(T) {\n    return (T.some(L => IsNever(L))\n        ? []\n        : T);\n}\n// prettier-ignore\nfunction FromUnion(T, K) {\n    return (UnionEvaluated(FromUnionRest(FromRest(T, K))));\n}\n// prettier-ignore\nfunction FromTuple(T, K) {\n    return (K in T ? T[K] :\n        K === '[number]' ? UnionEvaluated(T) :\n            Never());\n}\n// prettier-ignore\nfunction FromArray(T, K) {\n    return (K === '[number]'\n        ? T\n        : Never());\n}\n// prettier-ignore\nfunction FromProperty(T, K) {\n    return (K in T ? T[K] : Never());\n}\n// prettier-ignore\nexport function IndexFromPropertyKey(T, K) {\n    return (IsIntersect(T) ? FromIntersect(T.allOf, K) :\n        IsUnion(T) ? FromUnion(T.anyOf, K) :\n            IsTuple(T) ? FromTuple(T.items ?? [], K) :\n                IsArray(T) ? FromArray(T.items, K) :\n                    IsObject(T) ? FromProperty(T.properties, K) :\n                        Never());\n}\n// prettier-ignore\nexport function IndexFromPropertyKeys(T, K) {\n    return K.map(L => IndexFromPropertyKey(T, L));\n}\n// prettier-ignore\nfunction FromSchema(T, K) {\n    return (UnionEvaluated(IndexFromPropertyKeys(T, K)));\n}\n/** `[Json]` Returns an Indexed property type for the given keys */\nexport function Index(T, K, options = {}) {\n    // prettier-ignore\n    return (IsMappedResult(K) ? CloneType(IndexFromMappedResult(T, K, options)) :\n        IsMappedKey(K) ? CloneType(IndexFromMappedKey(T, K, options)) :\n            IsSchema(K) ? CloneType(FromSchema(T, IndexPropertyKeys(K)), options) :\n                CloneType(FromSchema(T, K), options));\n}\n", "export * from './never.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Never type */\nexport function Never(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Never',\n        not: {},\n    };\n}\n", "export * from './intersect-evaluated.mjs';\nexport * from './intersect-type.mjs';\nexport * from './intersect.mjs';\n", "import { OptionalKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { IntersectCreate } from './intersect-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional, IsTransform } from '../guard/kind.mjs';\n// prettier-ignore\nfunction IsIntersectOptional(T) {\n    return T.every(L => IsOptional(L));\n}\n// prettier-ignore\nfunction RemoveOptionalFromType(T) {\n    return (Discard(T, [OptionalKind]));\n}\n// prettier-ignore\nfunction RemoveOptionalFromRest(T) {\n    return T.map(L => IsOptional(L) ? RemoveOptionalFromType(L) : L);\n}\n// prettier-ignore\nfunction ResolveIntersect(T, options) {\n    return (IsIntersectOptional(T)\n        ? Optional(IntersectCreate(RemoveOptionalFromRest(T), options))\n        : IntersectCreate(RemoveOptionalFromRest(T), options));\n}\n/** `[Json]` Creates an evaluated Intersect type */\nexport function IntersectEvaluated(T, options = {}) {\n    if (T.length === 0)\n        return Never(options);\n    if (T.length === 1)\n        return CloneType(T[0], options);\n    if (T.some((schema) => IsTransform(schema)))\n        throw new Error('Cannot intersect transform types');\n    return ResolveIntersect(T, options);\n}\n", "export * from './optional-from-mapped-result.mjs';\nexport * from './optional.mjs';\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Optional } from './optional.mjs';\n// prettier-ignore\nfunction FromProperties(P, F) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Optional(P[K2], F);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, F) {\n    return FromProperties(R.properties, F);\n}\n// prettier-ignore\nexport function OptionalFromMappedResult(R, F) {\n    const P = FromMappedResult(R, F);\n    return MappedResult(P);\n}\n", "import { OptionalKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { OptionalFromMappedResult } from './optional-from-mapped-result.mjs';\nimport { IsMappedResult } from '../guard/kind.mjs';\nfunction RemoveOptional(schema) {\n    return Discard(CloneType(schema), [OptionalKind]);\n}\nfunction AddOptional(schema) {\n    return { ...CloneType(schema), [OptionalKind]: 'Optional' };\n}\n// prettier-ignore\nfunction OptionalWithFlag(schema, F) {\n    return (F === false\n        ? RemoveOptional(schema)\n        : AddOptional(schema));\n}\n/** `[Json]` Creates a Optional property */\nexport function Optional(schema, enable) {\n    const F = enable ?? true;\n    return IsMappedResult(schema) ? OptionalFromMappedResult(schema, F) : OptionalWithFlag(schema, F);\n}\n", "import * as ValueGuard from './value.mjs';\nimport { Kind, Hint, TransformKind, ReadonlyKind, OptionalKind } from '../symbols/index.mjs';\n/** `[Kind-Only]` Returns true if this value has a Readonly symbol */\nexport function IsReadonly(value) {\n    return ValueGuard.IsObject(value) && value[ReadonlyKind] === 'Readonly';\n}\n/** `[Kind-Only]` Returns true if this value has a Optional symbol */\nexport function IsOptional(value) {\n    return ValueGuard.IsObject(value) && value[OptionalKind] === 'Optional';\n}\n/** `[Kind-Only]` Returns true if the given value is TAny */\nexport function IsAny(value) {\n    return IsKindOf(value, 'Any');\n}\n/** `[Kind-Only]` Returns true if the given value is TArray */\nexport function IsArray(value) {\n    return IsKindOf(value, 'Array');\n}\n/** `[Kind-Only]` Returns true if the given value is TAsyncIterator */\nexport function IsAsyncIterator(value) {\n    return IsKindOf(value, 'AsyncIterator');\n}\n/** `[Kind-Only]` Returns true if the given value is TBigInt */\nexport function IsBigInt(value) {\n    return IsKindOf(value, 'BigInt');\n}\n/** `[Kind-Only]` Returns true if the given value is TBoolean */\nexport function IsBoolean(value) {\n    return IsKindOf(value, 'Boolean');\n}\n/** `[Kind-Only]` Returns true if the given value is TConstructor */\nexport function IsConstructor(value) {\n    return IsKindOf(value, 'Constructor');\n}\n/** `[Kind-Only]` Returns true if the given value is TDate */\nexport function IsDate(value) {\n    return IsKindOf(value, 'Date');\n}\n/** `[Kind-Only]` Returns true if the given value is TFunction */\nexport function IsFunction(value) {\n    return IsKindOf(value, 'Function');\n}\n/** `[Kind-Only]` Returns true if the given value is TInteger */\nexport function IsInteger(value) {\n    return IsKindOf(value, 'Integer');\n}\n/** `[Kind-Only]` Returns true if the given schema is TProperties */\nexport function IsProperties(value) {\n    return ValueGuard.IsObject(value);\n}\n/** `[Kind-Only]` Returns true if the given value is TIntersect */\nexport function IsIntersect(value) {\n    return IsKindOf(value, 'Intersect');\n}\n/** `[Kind-Only]` Returns true if the given value is TIterator */\nexport function IsIterator(value) {\n    return IsKindOf(value, 'Iterator');\n}\n/** `[Kind-Only]` Returns true if the given value is a TKind with the given name. */\nexport function IsKindOf(value, kind) {\n    return ValueGuard.IsObject(value) && Kind in value && value[Kind] === kind;\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral<string> */\nexport function IsLiteralString(value) {\n    return IsLiteral(value) && ValueGuard.IsString(value.const);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral<number> */\nexport function IsLiteralNumber(value) {\n    return IsLiteral(value) && ValueGuard.IsNumber(value.const);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral<boolean> */\nexport function IsLiteralBoolean(value) {\n    return IsLiteral(value) && ValueGuard.IsBoolean(value.const);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral */\nexport function IsLiteral(value) {\n    return IsKindOf(value, 'Literal');\n}\n/** `[Kind-Only]` Returns true if the given value is a TMappedKey */\nexport function IsMappedKey(value) {\n    return IsKindOf(value, 'MappedKey');\n}\n/** `[Kind-Only]` Returns true if the given value is TMappedResult */\nexport function IsMappedResult(value) {\n    return IsKindOf(value, 'MappedResult');\n}\n/** `[Kind-Only]` Returns true if the given value is TNever */\nexport function IsNever(value) {\n    return IsKindOf(value, 'Never');\n}\n/** `[Kind-Only]` Returns true if the given value is TNot */\nexport function IsNot(value) {\n    return IsKindOf(value, 'Not');\n}\n/** `[Kind-Only]` Returns true if the given value is TNull */\nexport function IsNull(value) {\n    return IsKindOf(value, 'Null');\n}\n/** `[Kind-Only]` Returns true if the given value is TNumber */\nexport function IsNumber(value) {\n    return IsKindOf(value, 'Number');\n}\n/** `[Kind-Only]` Returns true if the given value is TObject */\nexport function IsObject(value) {\n    return IsKindOf(value, 'Object');\n}\n/** `[Kind-Only]` Returns true if the given value is TPromise */\nexport function IsPromise(value) {\n    return IsKindOf(value, 'Promise');\n}\n/** `[Kind-Only]` Returns true if the given value is TRecord */\nexport function IsRecord(value) {\n    return IsKindOf(value, 'Record');\n}\n/** `[Kind-Only]` Returns true if this value is TRecursive */\nexport function IsRecursive(value) {\n    return ValueGuard.IsObject(value) && Hint in value && value[Hint] === 'Recursive';\n}\n/** `[Kind-Only]` Returns true if the given value is TRef */\nexport function IsRef(value) {\n    return IsKindOf(value, 'Ref');\n}\n/** `[Kind-Only]` Returns true if the given value is TRegExp */\nexport function IsRegExp(value) {\n    return IsKindOf(value, 'RegExp');\n}\n/** `[Kind-Only]` Returns true if the given value is TString */\nexport function IsString(value) {\n    return IsKindOf(value, 'String');\n}\n/** `[Kind-Only]` Returns true if the given value is TSymbol */\nexport function IsSymbol(value) {\n    return IsKindOf(value, 'Symbol');\n}\n/** `[Kind-Only]` Returns true if the given value is TTemplateLiteral */\nexport function IsTemplateLiteral(value) {\n    return IsKindOf(value, 'TemplateLiteral');\n}\n/** `[Kind-Only]` Returns true if the given value is TThis */\nexport function IsThis(value) {\n    return IsKindOf(value, 'This');\n}\n/** `[Kind-Only]` Returns true of this value is TTransform */\nexport function IsTransform(value) {\n    return ValueGuard.IsObject(value) && TransformKind in value;\n}\n/** `[Kind-Only]` Returns true if the given value is TTuple */\nexport function IsTuple(value) {\n    return IsKindOf(value, 'Tuple');\n}\n/** `[Kind-Only]` Returns true if the given value is TUndefined */\nexport function IsUndefined(value) {\n    return IsKindOf(value, 'Undefined');\n}\n/** `[Kind-Only]` Returns true if the given value is TUnion */\nexport function IsUnion(value) {\n    return IsKindOf(value, 'Union');\n}\n/** `[Kind-Only]` Returns true if the given value is TUint8Array */\nexport function IsUint8Array(value) {\n    return IsKindOf(value, 'Uint8Array');\n}\n/** `[Kind-Only]` Returns true if the given value is TUnknown */\nexport function IsUnknown(value) {\n    return IsKindOf(value, 'Unknown');\n}\n/** `[Kind-Only]` Returns true if the given value is a raw TUnsafe */\nexport function IsUnsafe(value) {\n    return IsKindOf(value, 'Unsafe');\n}\n/** `[Kind-Only]` Returns true if the given value is TVoid */\nexport function IsVoid(value) {\n    return IsKindOf(value, 'Void');\n}\n/** `[Kind-Only]` Returns true if the given value is TKind */\nexport function IsKind(value) {\n    return ValueGuard.IsObject(value) && Kind in value && ValueGuard.IsString(value[Kind]);\n}\n/** `[Kind-Only]` Returns true if the given value is TSchema */\nexport function IsSchema(value) {\n    // prettier-ignore\n    return (IsAny(value) ||\n        IsArray(value) ||\n        IsBoolean(value) ||\n        IsBigInt(value) ||\n        IsAsyncIterator(value) ||\n        IsConstructor(value) ||\n        IsDate(value) ||\n        IsFunction(value) ||\n        IsInteger(value) ||\n        IsIntersect(value) ||\n        IsIterator(value) ||\n        IsLiteral(value) ||\n        IsMappedKey(value) ||\n        IsMappedResult(value) ||\n        IsNever(value) ||\n        IsNot(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsObject(value) ||\n        IsPromise(value) ||\n        IsRecord(value) ||\n        IsRef(value) ||\n        IsRegExp(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsTemplateLiteral(value) ||\n        IsThis(value) ||\n        IsTuple(value) ||\n        IsUndefined(value) ||\n        IsUnion(value) ||\n        IsUint8Array(value) ||\n        IsUnknown(value) ||\n        IsUnsafe(value) ||\n        IsVoid(value) ||\n        IsKind(value));\n}\n", "import { Kind } from '../symbols/index.mjs';\nimport { CloneType, CloneRest } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsObject, IsSchema } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// IntersectCreate\n// ------------------------------------------------------------------\n// prettier-ignore\nexport function IntersectCreate(T, options) {\n    const allObjects = T.every((schema) => IsObject(schema));\n    const clonedUnevaluatedProperties = IsSchema(options.unevaluatedProperties)\n        ? { unevaluatedProperties: CloneType(options.unevaluatedProperties) }\n        : {};\n    return ((options.unevaluatedProperties === false || IsSchema(options.unevaluatedProperties) || allObjects\n        ? { ...options, ...clonedUnevaluatedProperties, [Kind]: 'Intersect', type: 'object', allOf: CloneRest(T) }\n        : { ...options, ...clonedUnevaluatedProperties, [Kind]: 'Intersect', allOf: CloneRest(T) }));\n}\n", "import { Kind } from '../symbols/index.mjs';\n", "import { CloneType } from '../clone/type.mjs';\nimport { Never } from '../never/index.mjs';\nimport { IntersectCreate } from './intersect-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform } from '../guard/kind.mjs';\n/** `[Json]` Creates an evaluated Intersect type */\nexport function Intersect(T, options = {}) {\n    if (T.length === 0)\n        return Never(options);\n    if (T.length === 1)\n        return CloneType(T[0], options);\n    if (T.some((schema) => IsTransform(schema)))\n        throw new Error('Cannot intersect transform types');\n    return IntersectCreate(T, options);\n}\n", "export * from './union-evaluated.mjs';\nexport * from './union-type.mjs';\nexport * from './union.mjs';\n", "import { OptionalKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { UnionCreate } from './union-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional } from '../guard/kind.mjs';\n// prettier-ignore\nfunction IsUnionOptional(T) {\n    return T.some(L => IsOptional(L));\n}\n// prettier-ignore\nfunction RemoveOptionalFromRest(T) {\n    return T.map(L => IsOptional(L) ? RemoveOptionalFromType(L) : L);\n}\n// prettier-ignore\nfunction RemoveOptionalFromType(T) {\n    return (Discard(T, [OptionalKind]));\n}\n// prettier-ignore\nfunction ResolveUnion(T, options) {\n    return (IsUnionOptional(T)\n        ? Optional(UnionCreate(RemoveOptionalFromRest(T), options))\n        : UnionCreate(RemoveOptionalFromRest(T), options));\n}\n/** `[Json]` Creates an evaluated Union type */\nexport function UnionEvaluated(T, options = {}) {\n    // prettier-ignore\n    return (T.length === 0 ? Never(options) :\n        T.length === 1 ? CloneType(T[0], options) :\n            ResolveUnion(T, options));\n}\n", "import { CloneRest } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\nexport function UnionCreate(T, options) {\n    return { ...options, [Kind]: 'Union', anyOf: CloneRest(T) };\n}\n", "import { Kind } from '../symbols/index.mjs';\n", "import { Never } from '../never/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { UnionCreate } from './union-create.mjs';\n/** `[Json]` Creates a Union type */\nexport function Union(T, options = {}) {\n    // prettier-ignore\n    return (T.length === 0 ? Never(options) :\n        T.length === 1 ? CloneType(T[0], options) :\n            UnionCreate(T, options));\n}\n", "import { TemplateLiteralGenerate } from '../template-literal/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTemplateLiteral, IsUnion, IsLiteral, IsNumber, IsInteger } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromTemplateLiteral(T) {\n    const R = TemplateLiteralGenerate(T);\n    return R.map(S => S.toString());\n}\n// prettier-ignore\nfunction FromUnion(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...IndexPropertyKeys(L));\n    return Acc;\n}\n// prettier-ignore\nfunction FromLiteral(T) {\n    return ([T.toString()] // TS 5.4 observes TLiteralValue as not having a toString()\n    );\n}\n/** Returns a tuple of PropertyKeys derived from the given TSchema */\n// prettier-ignore\nexport function IndexPropertyKeys(T) {\n    return [...new Set((IsTemplateLiteral(T) ? FromTemplateLiteral(T) :\n            IsUnion(T) ? FromUnion(T.anyOf) :\n                IsLiteral(T) ? FromLiteral(T.const) :\n                    IsNumber(T) ? ['[number]'] :\n                        IsInteger(T) ? ['[number]'] :\n                            []))];\n}\n", "export * from './finite.mjs';\nexport * from './generate.mjs';\nexport * from './syntax.mjs';\nexport * from './parse.mjs';\nexport * from './pattern.mjs';\nexport * from './union.mjs';\nexport * from './template-literal.mjs';\n", "import { TemplateLiteralParseExact } from './parse.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralFiniteError\n// ------------------------------------------------------------------\nexport class TemplateLiteralFiniteError extends TypeBoxError {\n}\n// ------------------------------------------------------------------\n// IsTemplateLiteralFiniteCheck\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsNumberExpression(expression) {\n    return (expression.type === 'or' &&\n        expression.expr.length === 2 &&\n        expression.expr[0].type === 'const' &&\n        expression.expr[0].const === '0' &&\n        expression.expr[1].type === 'const' &&\n        expression.expr[1].const === '[1-9][0-9]*');\n}\n// prettier-ignore\nfunction IsBooleanExpression(expression) {\n    return (expression.type === 'or' &&\n        expression.expr.length === 2 &&\n        expression.expr[0].type === 'const' &&\n        expression.expr[0].const === 'true' &&\n        expression.expr[1].type === 'const' &&\n        expression.expr[1].const === 'false');\n}\n// prettier-ignore\nfunction IsStringExpression(expression) {\n    return expression.type === 'const' && expression.const === '.*';\n}\n// ------------------------------------------------------------------\n// IsTemplateLiteralExpressionFinite\n// ------------------------------------------------------------------\n// prettier-ignore\nexport function IsTemplateLiteralExpressionFinite(expression) {\n    return (IsNumberExpression(expression) || IsStringExpression(expression) ? false :\n        IsBooleanExpression(expression) ? true :\n            (expression.type === 'and') ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) :\n                (expression.type === 'or') ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) :\n                    (expression.type === 'const') ? true :\n                        (() => { throw new TemplateLiteralFiniteError(`Unknown expression type`); })());\n}\n/** Returns true if this TemplateLiteral resolves to a finite set of values */\nexport function IsTemplateLiteralFinite(schema) {\n    const expression = TemplateLiteralParseExact(schema.pattern);\n    return IsTemplateLiteralExpressionFinite(expression);\n}\n", "import { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralParserError\n// ------------------------------------------------------------------\nexport class TemplateLiteralParserError extends TypeBoxError {\n}\n// -------------------------------------------------------------------\n// Unescape\n//\n// Unescape for these control characters specifically. Note that this\n// function is only called on non union group content, and where we\n// still want to allow the user to embed control characters in that\n// content. For review.\n// -------------------------------------------------------------------\n// prettier-ignore\nfunction Unescape(pattern) {\n    return pattern\n        .replace(/\\\\\\$/g, '$')\n        .replace(/\\\\\\*/g, '*')\n        .replace(/\\\\\\^/g, '^')\n        .replace(/\\\\\\|/g, '|')\n        .replace(/\\\\\\(/g, '(')\n        .replace(/\\\\\\)/g, ')');\n}\n// -------------------------------------------------------------------\n// Control Characters\n// -------------------------------------------------------------------\nfunction IsNonEscaped(pattern, index, char) {\n    return pattern[index] === char && pattern.charCodeAt(index - 1) !== 92;\n}\nfunction IsOpenParen(pattern, index) {\n    return IsNonEscaped(pattern, index, '(');\n}\nfunction IsCloseParen(pattern, index) {\n    return IsNonEscaped(pattern, index, ')');\n}\nfunction IsSeparator(pattern, index) {\n    return IsNonEscaped(pattern, index, '|');\n}\n// -------------------------------------------------------------------\n// Control Groups\n// -------------------------------------------------------------------\nfunction IsGroup(pattern) {\n    if (!(IsOpenParen(pattern, 0) && IsCloseParen(pattern, pattern.length - 1)))\n        return false;\n    let count = 0;\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            count += 1;\n        if (IsCloseParen(pattern, index))\n            count -= 1;\n        if (count === 0 && index !== pattern.length - 1)\n            return false;\n    }\n    return true;\n}\n// prettier-ignore\nfunction InGroup(pattern) {\n    return pattern.slice(1, pattern.length - 1);\n}\n// prettier-ignore\nfunction IsPrecedenceOr(pattern) {\n    let count = 0;\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            count += 1;\n        if (IsCloseParen(pattern, index))\n            count -= 1;\n        if (IsSeparator(pattern, index) && count === 0)\n            return true;\n    }\n    return false;\n}\n// prettier-ignore\nfunction IsPrecedenceAnd(pattern) {\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            return true;\n    }\n    return false;\n}\n// prettier-ignore\nfunction Or(pattern) {\n    let [count, start] = [0, 0];\n    const expressions = [];\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            count += 1;\n        if (IsCloseParen(pattern, index))\n            count -= 1;\n        if (IsSeparator(pattern, index) && count === 0) {\n            const range = pattern.slice(start, index);\n            if (range.length > 0)\n                expressions.push(TemplateLiteralParse(range));\n            start = index + 1;\n        }\n    }\n    const range = pattern.slice(start);\n    if (range.length > 0)\n        expressions.push(TemplateLiteralParse(range));\n    if (expressions.length === 0)\n        return { type: 'const', const: '' };\n    if (expressions.length === 1)\n        return expressions[0];\n    return { type: 'or', expr: expressions };\n}\n// prettier-ignore\nfunction And(pattern) {\n    function Group(value, index) {\n        if (!IsOpenParen(value, index))\n            throw new TemplateLiteralParserError(`TemplateLiteralParser: Index must point to open parens`);\n        let count = 0;\n        for (let scan = index; scan < value.length; scan++) {\n            if (IsOpenParen(value, scan))\n                count += 1;\n            if (IsCloseParen(value, scan))\n                count -= 1;\n            if (count === 0)\n                return [index, scan];\n        }\n        throw new TemplateLiteralParserError(`TemplateLiteralParser: Unclosed group parens in expression`);\n    }\n    function Range(pattern, index) {\n        for (let scan = index; scan < pattern.length; scan++) {\n            if (IsOpenParen(pattern, scan))\n                return [index, scan];\n        }\n        return [index, pattern.length];\n    }\n    const expressions = [];\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index)) {\n            const [start, end] = Group(pattern, index);\n            const range = pattern.slice(start, end + 1);\n            expressions.push(TemplateLiteralParse(range));\n            index = end;\n        }\n        else {\n            const [start, end] = Range(pattern, index);\n            const range = pattern.slice(start, end);\n            if (range.length > 0)\n                expressions.push(TemplateLiteralParse(range));\n            index = end - 1;\n        }\n    }\n    return ((expressions.length === 0) ? { type: 'const', const: '' } :\n        (expressions.length === 1) ? expressions[0] :\n            { type: 'and', expr: expressions });\n}\n// ------------------------------------------------------------------\n// TemplateLiteralParse\n// ------------------------------------------------------------------\n/** Parses a pattern and returns an expression tree */\nexport function TemplateLiteralParse(pattern) {\n    // prettier-ignore\n    return (IsGroup(pattern) ? TemplateLiteralParse(InGroup(pattern)) :\n        IsPrecedenceOr(pattern) ? Or(pattern) :\n            IsPrecedenceAnd(pattern) ? And(pattern) :\n                { type: 'const', const: Unescape(pattern) });\n}\n// ------------------------------------------------------------------\n// TemplateLiteralParseExact\n// ------------------------------------------------------------------\n/** Parses a pattern and strips forward and trailing ^ and $ */\nexport function TemplateLiteralParseExact(pattern) {\n    return TemplateLiteralParse(pattern.slice(1, pattern.length - 1));\n}\n", "import { IsTemplateLiteralExpressionFinite } from './finite.mjs';\nimport { TemplateLiteralParseExact } from './parse.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralGenerateError\n// ------------------------------------------------------------------\nexport class TemplateLiteralGenerateError extends TypeBoxError {\n}\n// ------------------------------------------------------------------\n// TemplateLiteralExpressionGenerate\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction* GenerateReduce(buffer) {\n    if (buffer.length === 1)\n        return yield* buffer[0];\n    for (const left of buffer[0]) {\n        for (const right of GenerateReduce(buffer.slice(1))) {\n            yield `${left}${right}`;\n        }\n    }\n}\n// prettier-ignore\nfunction* GenerateAnd(expression) {\n    return yield* GenerateReduce(expression.expr.map((expr) => [...TemplateLiteralExpressionGenerate(expr)]));\n}\n// prettier-ignore\nfunction* GenerateOr(expression) {\n    for (const expr of expression.expr)\n        yield* TemplateLiteralExpressionGenerate(expr);\n}\n// prettier-ignore\nfunction* GenerateConst(expression) {\n    return yield expression.const;\n}\nexport function* TemplateLiteralExpressionGenerate(expression) {\n    return expression.type === 'and'\n        ? yield* GenerateAnd(expression)\n        : expression.type === 'or'\n            ? yield* GenerateOr(expression)\n            : expression.type === 'const'\n                ? yield* GenerateConst(expression)\n                : (() => {\n                    throw new TemplateLiteralGenerateError('Unknown expression');\n                })();\n}\n/** Generates a tuple of strings from the given TemplateLiteral. Returns an empty tuple if infinite. */\nexport function TemplateLiteralGenerate(schema) {\n    const expression = TemplateLiteralParseExact(schema.pattern);\n    // prettier-ignore\n    return (IsTemplateLiteralExpressionFinite(expression)\n        ? [...TemplateLiteralExpressionGenerate(expression)]\n        : []);\n}\n", "import { Literal } from '../literal/index.mjs';\nimport { Boolean } from '../boolean/index.mjs';\nimport { BigInt } from '../bigint/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { String } from '../string/index.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { Never } from '../never/index.mjs';\n// ------------------------------------------------------------------\n// SyntaxParsers\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction* FromUnion(syntax) {\n    const trim = syntax.trim().replace(/\"|'/g, '');\n    return (trim === 'boolean' ? yield Boolean() :\n        trim === 'number' ? yield Number() :\n            trim === 'bigint' ? yield BigInt() :\n                trim === 'string' ? yield String() :\n                    yield (() => {\n                        const literals = trim.split('|').map((literal) => Literal(literal.trim()));\n                        return (literals.length === 0 ? Never() :\n                            literals.length === 1 ? literals[0] :\n                                UnionEvaluated(literals));\n                    })());\n}\n// prettier-ignore\nfunction* FromTerminal(syntax) {\n    if (syntax[1] !== '{') {\n        const L = Literal('$');\n        const R = FromSyntax(syntax.slice(1));\n        return yield* [L, ...R];\n    }\n    for (let i = 2; i < syntax.length; i++) {\n        if (syntax[i] === '}') {\n            const L = FromUnion(syntax.slice(2, i));\n            const R = FromSyntax(syntax.slice(i + 1));\n            return yield* [...L, ...R];\n        }\n    }\n    yield Literal(syntax);\n}\n// prettier-ignore\nfunction* FromSyntax(syntax) {\n    for (let i = 0; i < syntax.length; i++) {\n        if (syntax[i] === '$') {\n            const L = Literal(syntax.slice(0, i));\n            const R = FromTerminal(syntax.slice(i));\n            return yield* [L, ...R];\n        }\n    }\n    yield Literal(syntax);\n}\n/** Parses TemplateLiteralSyntax and returns a tuple of TemplateLiteralKinds */\nexport function TemplateLiteralSyntax(syntax) {\n    return [...FromSyntax(syntax)];\n}\n", "export * from './literal.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Literal type */\nexport function Literal(value, options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Literal',\n        const: value,\n        type: typeof value,\n    };\n}\n", "export * from './boolean.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Boolean type */\nexport function Boolean(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Boolean',\n        type: 'boolean',\n    };\n}\n", "export * from './bigint.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a BigInt type */\nexport function BigInt(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'BigInt',\n        type: 'bigint',\n    };\n}\n", "export * from './number.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Number type */\nexport function Number(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Number',\n        type: 'number',\n    };\n}\n", "export * from './string.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a String type */\nexport function String(options = {}) {\n    return { ...options, [Kind]: 'String', type: 'string' };\n}\n", "import { PatternNumber, PatternString, PatternBoolean } from '../patterns/index.mjs';\nimport { Kind } from '../symbols/index.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTemplateLiteral, IsUnion, IsNumber, IsInteger, IsBigInt, IsString, IsLiteral, IsBoolean } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralPatternError\n// ------------------------------------------------------------------\nexport class TemplateLiteralPatternError extends TypeBoxError {\n}\n// ------------------------------------------------------------------\n// TemplateLiteralPattern\n// ------------------------------------------------------------------\nfunction Escape(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n// prettier-ignore\nfunction Visit(schema, acc) {\n    return (IsTemplateLiteral(schema) ? schema.pattern.slice(1, schema.pattern.length - 1) :\n        IsUnion(schema) ? `(${schema.anyOf.map((schema) => Visit(schema, acc)).join('|')})` :\n            IsNumber(schema) ? `${acc}${PatternNumber}` :\n                IsInteger(schema) ? `${acc}${PatternNumber}` :\n                    IsBigInt(schema) ? `${acc}${PatternNumber}` :\n                        IsString(schema) ? `${acc}${PatternString}` :\n                            IsLiteral(schema) ? `${acc}${Escape(schema.const.toString())}` :\n                                IsBoolean(schema) ? `${acc}${PatternBoolean}` :\n                                    (() => { throw new TemplateLiteralPatternError(`Unexpected Kind '${schema[Kind]}'`); })());\n}\nexport function TemplateLiteralPattern(kinds) {\n    return `^${kinds.map((schema) => Visit(schema, '')).join('')}\\$`;\n}\n", "export * from './patterns.mjs';\n", "export const PatternBoolean = '(true|false)';\nexport const PatternNumber = '(0|[1-9][0-9]*)';\nexport const PatternString = '(.*)';\nexport const PatternBooleanExact = `^${PatternBoolean}$`;\nexport const PatternNumberExact = `^${PatternNumber}$`;\nexport const PatternStringExact = `^${PatternString}$`;\n", "import { UnionEvaluated } from '../union/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { TemplateLiteralGenerate } from './generate.mjs';\n/** Returns a Union from the given TemplateLiteral */\nexport function TemplateLiteralToUnion(schema) {\n    const R = TemplateLiteralGenerate(schema);\n    const L = R.map((S) => Literal(S));\n    return UnionEvaluated(L);\n}\n", "import { TemplateLiteralSyntax } from './syntax.mjs';\nimport { TemplateLiteralPattern } from './pattern.mjs';\nimport { IsString } from '../guard/value.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a TemplateLiteral type */\n// prettier-ignore\nexport function TemplateLiteral(unresolved, options = {}) {\n    const pattern = IsString(unresolved)\n        ? TemplateLiteralPattern(TemplateLiteralSyntax(unresolved))\n        : TemplateLiteralPattern(unresolved);\n    return { ...options, [Kind]: 'TemplateLiteral', type: 'string', pattern };\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { IndexPropertyKeys } from './indexed-property-keys.mjs';\nimport { Index } from './index.mjs';\n// prettier-ignore\nfunction FromProperties(T, P, options) {\n    const Acc = {};\n    for (const K2 of Object.getOwnPropertyNames(P)) {\n        Acc[K2] = Index(T, IndexPropertyKeys(P[K2]), options);\n    }\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(T, R, options) {\n    return FromProperties(T, R.properties, options);\n}\n// prettier-ignore\nexport function IndexFromMappedResult(T, R, options) {\n    const P = FromMappedResult(T, R, options);\n    return MappedResult(P);\n}\n", "export * from './iterator.mjs';\n", "import { CloneType } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates an Iterator type */\nexport function Iterator(items, options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Iterator',\n        type: 'Iterator',\n        items: CloneType(items),\n    };\n}\n", "export * from './object.mjs';\n", "import { CloneType } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional, IsSchema } from '../guard/kind.mjs';\n/** `[Json]` Creates an Object type */\nfunction _Object(properties, options = {}) {\n    const propertyKeys = globalThis.Object.getOwnPropertyNames(properties);\n    const optionalKeys = propertyKeys.filter((key) => IsOptional(properties[key]));\n    const requiredKeys = propertyKeys.filter((name) => !optionalKeys.includes(name));\n    const clonedAdditionalProperties = IsSchema(options.additionalProperties) ? { additionalProperties: CloneType(options.additionalProperties) } : {};\n    const clonedProperties = {};\n    for (const key of propertyKeys)\n        clonedProperties[key] = CloneType(properties[key]);\n    return (requiredKeys.length > 0\n        ? { ...options, ...clonedAdditionalProperties, [Kind]: 'Object', type: 'object', properties: clonedProperties, required: requiredKeys }\n        : { ...options, ...clonedAdditionalProperties, [Kind]: 'Object', type: 'object', properties: clonedProperties });\n}\n/** `[Json]` Creates an Object type */\nexport const Object = _Object;\n", "export * from './promise.mjs';\n", "import { CloneType } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Promise type */\nexport function Promise(item, options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Promise',\n        type: 'Promise',\n        item: CloneType(item),\n    };\n}\n", "export * from './readonly-from-mapped-result.mjs';\nexport * from './readonly.mjs';\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Readonly } from './readonly.mjs';\n// prettier-ignore\nfunction FromProperties(K, F) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(K))\n        Acc[K2] = Readonly(K[K2], F);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, F) {\n    return FromProperties(R.properties, F);\n}\n// prettier-ignore\nexport function ReadonlyFromMappedResult(R, F) {\n    const P = FromMappedResult(R, F);\n    return MappedResult(P);\n}\n", "import { ReadonlyKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { ReadonlyFromMappedResult } from './readonly-from-mapped-result.mjs';\nimport { IsMappedResult } from '../guard/kind.mjs';\nfunction RemoveReadonly(schema) {\n    return Discard(CloneType(schema), [ReadonlyKind]);\n}\nfunction AddReadonly(schema) {\n    return { ...CloneType(schema), [ReadonlyKind]: 'Readonly' };\n}\n// prettier-ignore\nfunction ReadonlyWithFlag(schema, F) {\n    return (F === false\n        ? RemoveReadonly(schema)\n        : AddReadonly(schema));\n}\n/** `[Json]` Creates a Readonly property */\nexport function Readonly(schema, enable) {\n    const F = enable ?? true;\n    return IsMappedResult(schema) ? ReadonlyFromMappedResult(schema, F) : ReadonlyWithFlag(schema, F);\n}\n", "export * from './tuple.mjs';\n", "import { CloneRest } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Tuple type */\nexport function Tuple(items, options = {}) {\n    // return TupleResolver.Resolve(T)\n    const [additionalItems, minItems, maxItems] = [false, items.length, items.length];\n    // prettier-ignore\n    return (items.length > 0 ?\n        { ...options, [Kind]: 'Tuple', type: 'array', items: CloneRest(items), additionalItems, minItems, maxItems } :\n        { ...options, [Kind]: 'Tuple', type: 'array', minItems, maxItems });\n}\n", "export * from './set.mjs';\n", "/** Returns true if element right is in the set of left */\n// prettier-ignore\nexport function SetIncludes(T, S) {\n    return T.includes(S);\n}\n/** Returns true if left is a subset of right */\nexport function SetIsSubset(T, S) {\n    return T.every((L) => SetIncludes(S, L));\n}\n/** Returns a distinct set of elements */\nexport function SetDistinct(T) {\n    return [...new Set(T)];\n}\n/** Returns the Intersect of the given sets */\nexport function SetIntersect(T, S) {\n    return T.filter((L) => S.includes(L));\n}\n/** Returns the Union of the given sets */\nexport function SetUnion(T, S) {\n    return [...T, ...S];\n}\n/** Returns the Complement by omitting elements in T that are in S */\n// prettier-ignore\nexport function SetComplement(T, S) {\n    return T.filter(L => !S.includes(L));\n}\n// prettier-ignore\nfunction SetIntersectManyResolve(T, Init) {\n    return T.reduce((Acc, L) => {\n        return SetIntersect(Acc, L);\n    }, Init);\n}\n// prettier-ignore\nexport function SetIntersectMany(T) {\n    return (T.length === 1\n        ? T[0]\n        // Use left to initialize the accumulator for resolve\n        : T.length > 1\n            ? SetIntersectManyResolve(T.slice(1), T[0])\n            : []);\n}\n/** Returns the Union of multiple sets */\nexport function SetUnionMany(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...L);\n    return Acc;\n}\n", "import { Literal } from '../literal/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { KeyOfPropertyKeys } from './keyof-property-keys.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { KeyOfFromMappedResult } from './keyof-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult } from '../guard/kind.mjs';\n// prettier-ignore\nexport function KeyOfPropertyKeysToRest(T) {\n    return T.map(L => L === '[number]' ? Number() : Literal(L));\n}\n/** `[Json]` Creates a KeyOf type */\nexport function KeyOf(T, options = {}) {\n    if (IsMappedResult(T)) {\n        return KeyOfFromMappedResult(T, options);\n    }\n    else {\n        const K = KeyOfPropertyKeys(T);\n        const S = KeyOfPropertyKeysToRest(K);\n        const U = UnionEvaluated(S);\n        return CloneType(U, options);\n    }\n}\n", "import { SetUnionMany, SetIntersectMany } from '../sets/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsTuple, IsArray, IsObject, IsRecord } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(KeyOfPropertyKeys(L));\n    return Acc;\n}\n// prettier-ignore\nfunction FromIntersect(T) {\n    const C = FromRest(T);\n    const R = SetUnionMany(C);\n    return R;\n}\n// prettier-ignore\nfunction FromUnion(T) {\n    const C = FromRest(T);\n    const R = SetIntersectMany(C);\n    return R;\n}\n// prettier-ignore\nfunction FromTuple(T) {\n    return T.map((_, I) => I.toString());\n}\n// prettier-ignore\nfunction FromArray(_) {\n    return (['[number]']);\n}\n// prettier-ignore\nfunction FromProperties(T) {\n    return (globalThis.Object.getOwnPropertyNames(T));\n}\n// ------------------------------------------------------------------\n// FromPatternProperties\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromPatternProperties(patternProperties) {\n    if (!includePatternProperties)\n        return [];\n    const patternPropertyKeys = globalThis.Object.getOwnPropertyNames(patternProperties);\n    return patternPropertyKeys.map(key => {\n        return (key[0] === '^' && key[key.length - 1] === '$')\n            ? key.slice(1, key.length - 1)\n            : key;\n    });\n}\n/** Returns a tuple of PropertyKeys derived from the given TSchema. */\n// prettier-ignore\nexport function KeyOfPropertyKeys(T) {\n    return (IsIntersect(T) ? FromIntersect(T.allOf) :\n        IsUnion(T) ? FromUnion(T.anyOf) :\n            IsTuple(T) ? FromTuple(T.items ?? []) :\n                IsArray(T) ? FromArray(T.items) :\n                    IsObject(T) ? FromProperties(T.properties) :\n                        IsRecord(T) ? FromPatternProperties(T.patternProperties) :\n                            []);\n}\n// ----------------------------------------------------------------\n// KeyOfPattern\n// ----------------------------------------------------------------\nlet includePatternProperties = false;\n/** Returns a regular expression pattern derived from the given TSchema */\nexport function KeyOfPattern(schema) {\n    includePatternProperties = true;\n    const keys = KeyOfPropertyKeys(schema);\n    includePatternProperties = false;\n    const pattern = keys.map((key) => `(${key})`);\n    return `^(${pattern.join('|')})$`;\n}\n", "import { IndexFromPropertyKeys } from '../indexed/indexed.mjs';\nimport { KeyOfPropertyKeys } from './keyof-property-keys.mjs';\n/**\n * `[Utility]` Resolves an array of keys and schemas from the given schema. This method is faster\n * than obtaining the keys and resolving each individually via indexing. This method was written\n * accellerate Intersect and Union encoding.\n */\nexport function KeyOfPropertyEntries(schema) {\n    const keys = KeyOfPropertyKeys(schema);\n    const schemas = IndexFromPropertyKeys(schema, keys);\n    return keys.map((_, index) => [keys[index], schemas[index]]);\n}\n", "import { Kind } from '../symbols/index.mjs';\n/** Fast undefined check used for properties of type undefined */\nfunction Intersect(schema) {\n    return schema.allOf.every((schema) => ExtendsUndefinedCheck(schema));\n}\nfunction Union(schema) {\n    return schema.anyOf.some((schema) => ExtendsUndefinedCheck(schema));\n}\nfunction Not(schema) {\n    return !ExtendsUndefinedCheck(schema.not);\n}\n/** Fast undefined check used for properties of type undefined */\n// prettier-ignore\nexport function ExtendsUndefinedCheck(schema) {\n    return (schema[Kind] === 'Intersect' ? Intersect(schema) :\n        schema[Kind] === 'Union' ? Union(schema) :\n            schema[Kind] === 'Not' ? Not(schema) :\n                schema[Kind] === 'Undefined' ? true :\n                    false);\n}\n", "import { Kind } from '../type/symbols/index.mjs';\nimport { ValueErrorType } from './errors.mjs';\n/** Creates an error message using en-US as the default locale */\nexport function DefaultErrorFunction(error) {\n    switch (error.errorType) {\n        case ValueErrorType.ArrayContains:\n            return 'Expected array to contain at least one matching value';\n        case ValueErrorType.ArrayMaxContains:\n            return `Expected array to contain no more than ${error.schema.maxContains} matching values`;\n        case ValueErrorType.ArrayMinContains:\n            return `Expected array to contain at least ${error.schema.minContains} matching values`;\n        case ValueErrorType.ArrayMaxItems:\n            return `Expected array length to be less or equal to ${error.schema.maxItems}`;\n        case ValueErrorType.ArrayMinItems:\n            return `Expected array length to be greater or equal to ${error.schema.minItems}`;\n        case ValueErrorType.ArrayUniqueItems:\n            return 'Expected array elements to be unique';\n        case ValueErrorType.Array:\n            return 'Expected array';\n        case ValueErrorType.AsyncIterator:\n            return 'Expected AsyncIterator';\n        case ValueErrorType.BigIntExclusiveMaximum:\n            return `Expected bigint to be less than ${error.schema.exclusiveMaximum}`;\n        case ValueErrorType.BigIntExclusiveMinimum:\n            return `Expected bigint to be greater than ${error.schema.exclusiveMinimum}`;\n        case ValueErrorType.BigIntMaximum:\n            return `Expected bigint to be less or equal to ${error.schema.maximum}`;\n        case ValueErrorType.BigIntMinimum:\n            return `Expected bigint to be greater or equal to ${error.schema.minimum}`;\n        case ValueErrorType.BigIntMultipleOf:\n            return `Expected bigint to be a multiple of ${error.schema.multipleOf}`;\n        case ValueErrorType.BigInt:\n            return 'Expected bigint';\n        case ValueErrorType.Boolean:\n            return 'Expected boolean';\n        case ValueErrorType.DateExclusiveMinimumTimestamp:\n            return `Expected Date timestamp to be greater than ${error.schema.exclusiveMinimumTimestamp}`;\n        case ValueErrorType.DateExclusiveMaximumTimestamp:\n            return `Expected Date timestamp to be less than ${error.schema.exclusiveMaximumTimestamp}`;\n        case ValueErrorType.DateMinimumTimestamp:\n            return `Expected Date timestamp to be greater or equal to ${error.schema.minimumTimestamp}`;\n        case ValueErrorType.DateMaximumTimestamp:\n            return `Expected Date timestamp to be less or equal to ${error.schema.maximumTimestamp}`;\n        case ValueErrorType.DateMultipleOfTimestamp:\n            return `Expected Date timestamp to be a multiple of ${error.schema.multipleOfTimestamp}`;\n        case ValueErrorType.Date:\n            return 'Expected Date';\n        case ValueErrorType.Function:\n            return 'Expected function';\n        case ValueErrorType.IntegerExclusiveMaximum:\n            return `Expected integer to be less than ${error.schema.exclusiveMaximum}`;\n        case ValueErrorType.IntegerExclusiveMinimum:\n            return `Expected integer to be greater than ${error.schema.exclusiveMinimum}`;\n        case ValueErrorType.IntegerMaximum:\n            return `Expected integer to be less or equal to ${error.schema.maximum}`;\n        case ValueErrorType.IntegerMinimum:\n            return `Expected integer to be greater or equal to ${error.schema.minimum}`;\n        case ValueErrorType.IntegerMultipleOf:\n            return `Expected integer to be a multiple of ${error.schema.multipleOf}`;\n        case ValueErrorType.Integer:\n            return 'Expected integer';\n        case ValueErrorType.IntersectUnevaluatedProperties:\n            return 'Unexpected property';\n        case ValueErrorType.Intersect:\n            return 'Expected all values to match';\n        case ValueErrorType.Iterator:\n            return 'Expected Iterator';\n        case ValueErrorType.Literal:\n            return `Expected ${typeof error.schema.const === 'string' ? `'${error.schema.const}'` : error.schema.const}`;\n        case ValueErrorType.Never:\n            return 'Never';\n        case ValueErrorType.Not:\n            return 'Value should not match';\n        case ValueErrorType.Null:\n            return 'Expected null';\n        case ValueErrorType.NumberExclusiveMaximum:\n            return `Expected number to be less than ${error.schema.exclusiveMaximum}`;\n        case ValueErrorType.NumberExclusiveMinimum:\n            return `Expected number to be greater than ${error.schema.exclusiveMinimum}`;\n        case ValueErrorType.NumberMaximum:\n            return `Expected number to be less or equal to ${error.schema.maximum}`;\n        case ValueErrorType.NumberMinimum:\n            return `Expected number to be greater or equal to ${error.schema.minimum}`;\n        case ValueErrorType.NumberMultipleOf:\n            return `Expected number to be a multiple of ${error.schema.multipleOf}`;\n        case ValueErrorType.Number:\n            return 'Expected number';\n        case ValueErrorType.Object:\n            return 'Expected object';\n        case ValueErrorType.ObjectAdditionalProperties:\n            return 'Unexpected property';\n        case ValueErrorType.ObjectMaxProperties:\n            return `Expected object to have no more than ${error.schema.maxProperties} properties`;\n        case ValueErrorType.ObjectMinProperties:\n            return `Expected object to have at least ${error.schema.minProperties} properties`;\n        case ValueErrorType.ObjectRequiredProperty:\n            return 'Required property';\n        case ValueErrorType.Promise:\n            return 'Expected Promise';\n        case ValueErrorType.RegExp:\n            return 'Expected string to match regular expression';\n        case ValueErrorType.StringFormatUnknown:\n            return `Unknown format '${error.schema.format}'`;\n        case ValueErrorType.StringFormat:\n            return `Expected string to match '${error.schema.format}' format`;\n        case ValueErrorType.StringMaxLength:\n            return `Expected string length less or equal to ${error.schema.maxLength}`;\n        case ValueErrorType.StringMinLength:\n            return `Expected string length greater or equal to ${error.schema.minLength}`;\n        case ValueErrorType.StringPattern:\n            return `Expected string to match '${error.schema.pattern}'`;\n        case ValueErrorType.String:\n            return 'Expected string';\n        case ValueErrorType.Symbol:\n            return 'Expected symbol';\n        case ValueErrorType.TupleLength:\n            return `Expected tuple to have ${error.schema.maxItems || 0} elements`;\n        case ValueErrorType.Tuple:\n            return 'Expected tuple';\n        case ValueErrorType.Uint8ArrayMaxByteLength:\n            return `Expected byte length less or equal to ${error.schema.maxByteLength}`;\n        case ValueErrorType.Uint8ArrayMinByteLength:\n            return `Expected byte length greater or equal to ${error.schema.minByteLength}`;\n        case ValueErrorType.Uint8Array:\n            return 'Expected Uint8Array';\n        case ValueErrorType.Undefined:\n            return 'Expected undefined';\n        case ValueErrorType.Union:\n            return 'Expected union value';\n        case ValueErrorType.Void:\n            return 'Expected void';\n        case ValueErrorType.Kind:\n            return `Expected kind '${error.schema[Kind]}'`;\n        default:\n            return 'Unknown error type';\n    }\n}\n/** Manages error message providers */\nlet errorFunction = DefaultErrorFunction;\n/** Sets the error function used to generate error messages. */\nexport function SetErrorFunction(callback) {\n    errorFunction = callback;\n}\n/** Gets the error function used to generate error messages */\nexport function GetErrorFunction() {\n    return errorFunction;\n}\n", "export * from './deref.mjs';\n", "import { TypeBoxError } from '../../type/error/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nexport class TypeDereferenceError extends TypeBoxError {\n    constructor(schema) {\n        super(`Unable to dereference schema with $id '${schema.$id}'`);\n        this.schema = schema;\n    }\n}\nfunction Resolve(schema, references) {\n    const target = references.find((target) => target.$id === schema.$ref);\n    if (target === undefined)\n        throw new TypeDereferenceError(schema);\n    return Deref(target, references);\n}\n/** Dereferences a schema from the references array or throws if not found */\nexport function Deref(schema, references) {\n    // prettier-ignore\n    return (schema[Kind] === 'This' || schema[Kind] === 'Ref')\n        ? Resolve(schema, references)\n        : schema;\n}\n", "export * from './hash.mjs';\n", "import { IsArray, IsBoolean, IsBigInt, IsDate, IsNull, IsNumber, IsStandardObject, IsString, IsSymbol, IsUint8Array, IsUndefined } from '../guard/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueHashError extends TypeBoxError {\n    constructor(value) {\n        super(`Unable to hash value`);\n        this.value = value;\n    }\n}\n// ------------------------------------------------------------------\n// ByteMarker\n// ------------------------------------------------------------------\nvar ByteMarker;\n(function (ByteMarker) {\n    ByteMarker[ByteMarker[\"Undefined\"] = 0] = \"Undefined\";\n    ByteMarker[ByteMarker[\"Null\"] = 1] = \"Null\";\n    ByteMarker[ByteMarker[\"Boolean\"] = 2] = \"Boolean\";\n    ByteMarker[ByteMarker[\"Number\"] = 3] = \"Number\";\n    ByteMarker[ByteMarker[\"String\"] = 4] = \"String\";\n    ByteMarker[ByteMarker[\"Object\"] = 5] = \"Object\";\n    ByteMarker[ByteMarker[\"Array\"] = 6] = \"Array\";\n    ByteMarker[ByteMarker[\"Date\"] = 7] = \"Date\";\n    ByteMarker[ByteMarker[\"Uint8Array\"] = 8] = \"Uint8Array\";\n    ByteMarker[ByteMarker[\"Symbol\"] = 9] = \"Symbol\";\n    ByteMarker[ByteMarker[\"BigInt\"] = 10] = \"BigInt\";\n})(ByteMarker || (ByteMarker = {}));\n// ------------------------------------------------------------------\n// State\n// ------------------------------------------------------------------\nlet Accumulator = BigInt('14695981039346656037');\nconst [Prime, Size] = [BigInt('1099511628211'), BigInt('2') ** BigInt('64')];\nconst Bytes = Array.from({ length: 256 }).map((_, i) => BigInt(i));\nconst F64 = new Float64Array(1);\nconst F64In = new DataView(F64.buffer);\nconst F64Out = new Uint8Array(F64.buffer);\n// ------------------------------------------------------------------\n// NumberToBytes\n// ------------------------------------------------------------------\nfunction* NumberToBytes(value) {\n    const byteCount = value === 0 ? 1 : Math.ceil(Math.floor(Math.log2(value) + 1) / 8);\n    for (let i = 0; i < byteCount; i++) {\n        yield (value >> (8 * (byteCount - 1 - i))) & 0xff;\n    }\n}\n// ------------------------------------------------------------------\n// Hashing Functions\n// ------------------------------------------------------------------\nfunction ArrayType(value) {\n    FNV1A64(ByteMarker.Array);\n    for (const item of value) {\n        Visit(item);\n    }\n}\nfunction BooleanType(value) {\n    FNV1A64(ByteMarker.Boolean);\n    FNV1A64(value ? 1 : 0);\n}\nfunction BigIntType(value) {\n    FNV1A64(ByteMarker.BigInt);\n    F64In.setBigInt64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction DateType(value) {\n    FNV1A64(ByteMarker.Date);\n    Visit(value.getTime());\n}\nfunction NullType(value) {\n    FNV1A64(ByteMarker.Null);\n}\nfunction NumberType(value) {\n    FNV1A64(ByteMarker.Number);\n    F64In.setFloat64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction ObjectType(value) {\n    FNV1A64(ByteMarker.Object);\n    for (const key of globalThis.Object.getOwnPropertyNames(value).sort()) {\n        Visit(key);\n        Visit(value[key]);\n    }\n}\nfunction StringType(value) {\n    FNV1A64(ByteMarker.String);\n    for (let i = 0; i < value.length; i++) {\n        for (const byte of NumberToBytes(value.charCodeAt(i))) {\n            FNV1A64(byte);\n        }\n    }\n}\nfunction SymbolType(value) {\n    FNV1A64(ByteMarker.Symbol);\n    Visit(value.description);\n}\nfunction Uint8ArrayType(value) {\n    FNV1A64(ByteMarker.Uint8Array);\n    for (let i = 0; i < value.length; i++) {\n        FNV1A64(value[i]);\n    }\n}\nfunction UndefinedType(value) {\n    return FNV1A64(ByteMarker.Undefined);\n}\nfunction Visit(value) {\n    if (IsArray(value))\n        return ArrayType(value);\n    if (IsBoolean(value))\n        return BooleanType(value);\n    if (IsBigInt(value))\n        return BigIntType(value);\n    if (IsDate(value))\n        return DateType(value);\n    if (IsNull(value))\n        return NullType(value);\n    if (IsNumber(value))\n        return NumberType(value);\n    if (IsStandardObject(value))\n        return ObjectType(value);\n    if (IsString(value))\n        return StringType(value);\n    if (IsSymbol(value))\n        return SymbolType(value);\n    if (IsUint8Array(value))\n        return Uint8ArrayType(value);\n    if (IsUndefined(value))\n        return UndefinedType(value);\n    throw new ValueHashError(value);\n}\nfunction FNV1A64(byte) {\n    Accumulator = Accumulator ^ Bytes[byte];\n    Accumulator = (Accumulator * Prime) % Size;\n}\n// ------------------------------------------------------------------\n// Hash\n// ------------------------------------------------------------------\n/** Creates a FNV1A-64 non cryptographic hash of the given value */\nexport function Hash(value) {\n    Accumulator = BigInt('14695981039346656037');\n    Visit(value);\n    return Accumulator;\n}\n", "export * from './cast.mjs';\n", "import { IsStandardObject, IsArray, IsString, IsNumber, IsNull } from '../guard/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { Create } from '../create/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref } from '../deref/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueCastError extends TypeBoxError {\n    constructor(schema, message) {\n        super(message);\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// The following will score a schema against a value. For objects,\n// the score is the tally of points awarded for each property of\n// the value. Property points are (1.0 / propertyCount) to prevent\n// large property counts biasing results. Properties that match\n// literal values are maximally awarded as literals are typically\n// used as union discriminator fields.\n// ------------------------------------------------------------------\nfunction ScoreUnion(schema, references, value) {\n    if (schema[Kind] === 'Object' && typeof value === 'object' && !IsNull(value)) {\n        const object = schema;\n        const keys = Object.getOwnPropertyNames(value);\n        const entries = Object.entries(object.properties);\n        const [point, max] = [1 / entries.length, entries.length];\n        return entries.reduce((acc, [key, schema]) => {\n            const literal = schema[Kind] === 'Literal' && schema.const === value[key] ? max : 0;\n            const checks = Check(schema, references, value[key]) ? point : 0;\n            const exists = keys.includes(key) ? point : 0;\n            return acc + (literal + checks + exists);\n        }, 0);\n    }\n    else {\n        return Check(schema, references, value) ? 1 : 0;\n    }\n}\nfunction SelectUnion(union, references, value) {\n    const schemas = union.anyOf.map((schema) => Deref(schema, references));\n    let [select, best] = [schemas[0], 0];\n    for (const schema of schemas) {\n        const score = ScoreUnion(schema, references, value);\n        if (score > best) {\n            select = schema;\n            best = score;\n        }\n    }\n    return select;\n}\nfunction CastUnion(union, references, value) {\n    if ('default' in union) {\n        return typeof value === 'function' ? union.default : Clone(union.default);\n    }\n    else {\n        const schema = SelectUnion(union, references, value);\n        return Cast(schema, references, value);\n    }\n}\n// ------------------------------------------------------------------\n// Default\n// ------------------------------------------------------------------\nfunction DefaultClone(schema, references, value) {\n    return Check(schema, references, value) ? Clone(value) : Create(schema, references);\n}\nfunction Default(schema, references, value) {\n    return Check(schema, references, value) ? value : Create(schema, references);\n}\n// ------------------------------------------------------------------\n// Cast\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    if (Check(schema, references, value))\n        return Clone(value);\n    const created = IsArray(value) ? Clone(value) : Create(schema, references);\n    const minimum = IsNumber(schema.minItems) && created.length < schema.minItems ? [...created, ...Array.from({ length: schema.minItems - created.length }, () => null)] : created;\n    const maximum = IsNumber(schema.maxItems) && minimum.length > schema.maxItems ? minimum.slice(0, schema.maxItems) : minimum;\n    const casted = maximum.map((value) => Visit(schema.items, references, value));\n    if (schema.uniqueItems !== true)\n        return casted;\n    const unique = [...new Set(casted)];\n    if (!Check(schema, references, unique))\n        throw new ValueCastError(schema, 'Array cast produced invalid data due to uniqueItems constraint');\n    return unique;\n}\nfunction FromConstructor(schema, references, value) {\n    if (Check(schema, references, value))\n        return Create(schema, references);\n    const required = new Set(schema.returns.required || []);\n    const result = function () { };\n    for (const [key, property] of Object.entries(schema.returns.properties)) {\n        if (!required.has(key) && value.prototype[key] === undefined)\n            continue;\n        result.prototype[key] = Visit(property, references, value.prototype[key]);\n    }\n    return result;\n}\nfunction FromIntersect(schema, references, value) {\n    const created = Create(schema, references);\n    const mapped = IsStandardObject(created) && IsStandardObject(value) ? { ...created, ...value } : value;\n    return Check(schema, references, mapped) ? mapped : Create(schema, references);\n}\nfunction FromNever(schema, references, value) {\n    throw new ValueCastError(schema, 'Never types cannot be cast');\n}\nfunction FromObject(schema, references, value) {\n    if (Check(schema, references, value))\n        return value;\n    if (value === null || typeof value !== 'object')\n        return Create(schema, references);\n    const required = new Set(schema.required || []);\n    const result = {};\n    for (const [key, property] of Object.entries(schema.properties)) {\n        if (!required.has(key) && value[key] === undefined)\n            continue;\n        result[key] = Visit(property, references, value[key]);\n    }\n    // additional schema properties\n    if (typeof schema.additionalProperties === 'object') {\n        const propertyNames = Object.getOwnPropertyNames(schema.properties);\n        for (const propertyName of Object.getOwnPropertyNames(value)) {\n            if (propertyNames.includes(propertyName))\n                continue;\n            result[propertyName] = Visit(schema.additionalProperties, references, value[propertyName]);\n        }\n    }\n    return result;\n}\nfunction FromRecord(schema, references, value) {\n    if (Check(schema, references, value))\n        return Clone(value);\n    if (value === null || typeof value !== 'object' || Array.isArray(value) || value instanceof Date)\n        return Create(schema, references);\n    const subschemaPropertyName = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const subschema = schema.patternProperties[subschemaPropertyName];\n    const result = {};\n    for (const [propKey, propValue] of Object.entries(value)) {\n        result[propKey] = Visit(subschema, references, propValue);\n    }\n    return result;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    if (Check(schema, references, value))\n        return Clone(value);\n    if (!IsArray(value))\n        return Create(schema, references);\n    if (schema.items === undefined)\n        return [];\n    return schema.items.map((schema, index) => Visit(schema, references, value[index]));\n}\nfunction FromUnion(schema, references, value) {\n    return Check(schema, references, value) ? Clone(value) : CastUnion(schema, references, value);\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        // --------------------------------------------------------------\n        // Structural\n        // --------------------------------------------------------------\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'Constructor':\n            return FromConstructor(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Never':\n            return FromNever(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        // --------------------------------------------------------------\n        // DefaultClone\n        // --------------------------------------------------------------\n        case 'Date':\n        case 'Symbol':\n        case 'Uint8Array':\n            return DefaultClone(schema, references, value);\n        // --------------------------------------------------------------\n        // Default\n        // --------------------------------------------------------------\n        default:\n            return Default(schema_, references_, value);\n    }\n}\n/** Casts a value into a given type. The return value will retain as much information of the original value as possible. */\nexport function Cast(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "export * from './create.mjs';\n", "import { HasPropertyKey, IsString } from '../guard/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { TemplateLiteralGenerate, IsTemplateLiteralFinite } from '../../type/template-literal/index.mjs';\nimport { PatternStringExact, PatternNumberExact } from '../../type/patterns/index.mjs';\nimport { TypeRegistry } from '../../type/registry/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueCreateError extends TypeBoxError {\n    constructor(schema, message) {\n        super(message);\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// Default\n// ------------------------------------------------------------------\nfunction FromDefault(value) {\n    return typeof value === 'function' ? value : Clone(value);\n}\n// ------------------------------------------------------------------\n// Create\n// ------------------------------------------------------------------\nfunction FromAny(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return {};\n    }\n}\nfunction FromArray(schema, references) {\n    if (schema.uniqueItems === true && !HasPropertyKey(schema, 'default')) {\n        throw new ValueCreateError(schema, 'Array with the uniqueItems constraint requires a default value');\n    }\n    else if ('contains' in schema && !HasPropertyKey(schema, 'default')) {\n        throw new ValueCreateError(schema, 'Array with the contains constraint requires a default value');\n    }\n    else if ('default' in schema) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minItems !== undefined) {\n        return Array.from({ length: schema.minItems }).map((item) => {\n            return Visit(schema.items, references);\n        });\n    }\n    else {\n        return [];\n    }\n}\nfunction FromAsyncIterator(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return (async function* () { })();\n    }\n}\nfunction FromBigInt(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return BigInt(0);\n    }\n}\nfunction FromBoolean(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return false;\n    }\n}\nfunction FromConstructor(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        const value = Visit(schema.returns, references);\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            return class {\n                constructor() {\n                    for (const [key, val] of Object.entries(value)) {\n                        const self = this;\n                        self[key] = val;\n                    }\n                }\n            };\n        }\n        else {\n            return class {\n            };\n        }\n    }\n}\nfunction FromDate(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minimumTimestamp !== undefined) {\n        return new Date(schema.minimumTimestamp);\n    }\n    else {\n        return new Date();\n    }\n}\nfunction FromFunction(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return () => Visit(schema.returns, references);\n    }\n}\nfunction FromInteger(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minimum !== undefined) {\n        return schema.minimum;\n    }\n    else {\n        return 0;\n    }\n}\nfunction FromIntersect(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        // --------------------------------------------------------------\n        // Note: The best we can do here is attempt to instance each\n        // sub type and apply through object assign. For non-object\n        // sub types, we just escape the assignment and just return\n        // the value. In the latter case, this is typically going to\n        // be a consequence of an illogical intersection.\n        // --------------------------------------------------------------\n        const value = schema.allOf.reduce((acc, schema) => {\n            const next = Visit(schema, references);\n            return typeof next === 'object' ? { ...acc, ...next } : next;\n        }, {});\n        if (!Check(schema, references, value))\n            throw new ValueCreateError(schema, 'Intersect produced invalid value. Consider using a default value.');\n        return value;\n    }\n}\nfunction FromIterator(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return (function* () { })();\n    }\n}\nfunction FromLiteral(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return schema.const;\n    }\n}\nfunction FromNever(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new ValueCreateError(schema, 'Never types cannot be created. Consider using a default value.');\n    }\n}\nfunction FromNot(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new ValueCreateError(schema, 'Not types must have a default value');\n    }\n}\nfunction FromNull(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return null;\n    }\n}\nfunction FromNumber(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minimum !== undefined) {\n        return schema.minimum;\n    }\n    else {\n        return 0;\n    }\n}\nfunction FromObject(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        const required = new Set(schema.required);\n        const Acc = {};\n        for (const [key, subschema] of Object.entries(schema.properties)) {\n            if (!required.has(key))\n                continue;\n            Acc[key] = Visit(subschema, references);\n        }\n        return Acc;\n    }\n}\nfunction FromPromise(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return Promise.resolve(Visit(schema.item, references));\n    }\n}\nfunction FromRecord(schema, references) {\n    const [keyPattern, valueSchema] = Object.entries(schema.patternProperties)[0];\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (!(keyPattern === PatternStringExact || keyPattern === PatternNumberExact)) {\n        const propertyKeys = keyPattern.slice(1, keyPattern.length - 1).split('|');\n        const Acc = {};\n        for (const key of propertyKeys)\n            Acc[key] = Visit(valueSchema, references);\n        return Acc;\n    }\n    else {\n        return {};\n    }\n}\nfunction FromRef(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return Visit(Deref(schema, references), references);\n    }\n}\nfunction FromRegExp(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new ValueCreateError(schema, 'RegExp types cannot be created. Consider using a default value.');\n    }\n}\nfunction FromString(schema, references) {\n    if (schema.pattern !== undefined) {\n        if (!HasPropertyKey(schema, 'default')) {\n            throw new ValueCreateError(schema, 'String types with patterns must specify a default value');\n        }\n        else {\n            return FromDefault(schema.default);\n        }\n    }\n    else if (schema.format !== undefined) {\n        if (!HasPropertyKey(schema, 'default')) {\n            throw new ValueCreateError(schema, 'String types with formats must specify a default value');\n        }\n        else {\n            return FromDefault(schema.default);\n        }\n    }\n    else {\n        if (HasPropertyKey(schema, 'default')) {\n            return FromDefault(schema.default);\n        }\n        else if (schema.minLength !== undefined) {\n            // prettier-ignore\n            return Array.from({ length: schema.minLength }).map(() => ' ').join('');\n        }\n        else {\n            return '';\n        }\n    }\n}\nfunction FromSymbol(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if ('value' in schema) {\n        return Symbol.for(schema.value);\n    }\n    else {\n        return Symbol();\n    }\n}\nfunction FromTemplateLiteral(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    if (!IsTemplateLiteralFinite(schema))\n        throw new ValueCreateError(schema, 'Can only create template literals that produce a finite variants. Consider using a default value.');\n    const generated = TemplateLiteralGenerate(schema);\n    return generated[0];\n}\nfunction FromThis(schema, references) {\n    if (recursiveDepth++ > recursiveMaxDepth)\n        throw new ValueCreateError(schema, 'Cannot create recursive type as it appears possibly infinite. Consider using a default.');\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return Visit(Deref(schema, references), references);\n    }\n}\nfunction FromTuple(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    if (schema.items === undefined) {\n        return [];\n    }\n    else {\n        return Array.from({ length: schema.minItems }).map((_, index) => Visit(schema.items[index], references));\n    }\n}\nfunction FromUndefined(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return undefined;\n    }\n}\nfunction FromUnion(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.anyOf.length === 0) {\n        throw new Error('ValueCreate.Union: Cannot create Union with zero variants');\n    }\n    else {\n        return Visit(schema.anyOf[0], references);\n    }\n}\nfunction FromUint8Array(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minByteLength !== undefined) {\n        return new Uint8Array(schema.minByteLength);\n    }\n    else {\n        return new Uint8Array(0);\n    }\n}\nfunction FromUnknown(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return {};\n    }\n}\nfunction FromVoid(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return void 0;\n    }\n}\nfunction FromKind(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new Error('User defined types must specify a default value');\n    }\n}\nfunction Visit(schema, references) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Any':\n            return FromAny(schema_, references_);\n        case 'Array':\n            return FromArray(schema_, references_);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_);\n        case 'BigInt':\n            return FromBigInt(schema_, references_);\n        case 'Boolean':\n            return FromBoolean(schema_, references_);\n        case 'Constructor':\n            return FromConstructor(schema_, references_);\n        case 'Date':\n            return FromDate(schema_, references_);\n        case 'Function':\n            return FromFunction(schema_, references_);\n        case 'Integer':\n            return FromInteger(schema_, references_);\n        case 'Intersect':\n            return FromIntersect(schema_, references_);\n        case 'Iterator':\n            return FromIterator(schema_, references_);\n        case 'Literal':\n            return FromLiteral(schema_, references_);\n        case 'Never':\n            return FromNever(schema_, references_);\n        case 'Not':\n            return FromNot(schema_, references_);\n        case 'Null':\n            return FromNull(schema_, references_);\n        case 'Number':\n            return FromNumber(schema_, references_);\n        case 'Object':\n            return FromObject(schema_, references_);\n        case 'Promise':\n            return FromPromise(schema_, references_);\n        case 'Record':\n            return FromRecord(schema_, references_);\n        case 'Ref':\n            return FromRef(schema_, references_);\n        case 'RegExp':\n            return FromRegExp(schema_, references_);\n        case 'String':\n            return FromString(schema_, references_);\n        case 'Symbol':\n            return FromSymbol(schema_, references_);\n        case 'TemplateLiteral':\n            return FromTemplateLiteral(schema_, references_);\n        case 'This':\n            return FromThis(schema_, references_);\n        case 'Tuple':\n            return FromTuple(schema_, references_);\n        case 'Undefined':\n            return FromUndefined(schema_, references_);\n        case 'Union':\n            return FromUnion(schema_, references_);\n        case 'Uint8Array':\n            return FromUint8Array(schema_, references_);\n        case 'Unknown':\n            return FromUnknown(schema_, references_);\n        case 'Void':\n            return FromVoid(schema_, references_);\n        default:\n            if (!TypeRegistry.Has(schema_[Kind]))\n                throw new ValueCreateError(schema_, 'Unknown type');\n            return FromKind(schema_, references_);\n    }\n}\n// ------------------------------------------------------------------\n// State\n// ------------------------------------------------------------------\nconst recursiveMaxDepth = 512;\nlet recursiveDepth = 0;\n/** Creates a value from the given schema */\nexport function Create(...args) {\n    recursiveDepth = 0;\n    return args.length === 2 ? Visit(args[0], args[1]) : Visit(args[0], []);\n}\n", "export * from './check.mjs';\n", "import { TypeSystemPolicy } from '../../system/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Hash } from '../hash/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { KeyOfPattern } from '../../type/keyof/index.mjs';\nimport { ExtendsUndefinedCheck } from '../../type/extends/index.mjs';\nimport { TypeRegistry, FormatRegistry } from '../../type/registry/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { Never } from '../../type/never/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsUint8Array, IsDate, IsPromise, IsFunction, IsAsyncIterator, IsIterator, IsBoolean, IsNumber, IsBigInt, IsString, IsSymbol, IsInteger, IsNull, IsUndefined } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueCheckUnknownTypeError extends TypeBoxError {\n    constructor(schema) {\n        super(`Unknown type`);\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// TypeGuards\n// ------------------------------------------------------------------\nfunction IsAnyOrUnknown(schema) {\n    return schema[Kind] === 'Any' || schema[Kind] === 'Unknown';\n}\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nfunction IsDefined(value) {\n    return value !== undefined;\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nfunction FromAny(schema, references, value) {\n    return true;\n}\nfunction FromArray(schema, references, value) {\n    if (!IsArray(value))\n        return false;\n    if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {\n        return false;\n    }\n    if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {\n        return false;\n    }\n    if (!value.every((value) => Visit(schema.items, references, value))) {\n        return false;\n    }\n    // prettier-ignore\n    if (schema.uniqueItems === true && !((function () { const set = new Set(); for (const element of value) {\n        const hashed = Hash(element);\n        if (set.has(hashed)) {\n            return false;\n        }\n        else {\n            set.add(hashed);\n        }\n    } return true; })())) {\n        return false;\n    }\n    // contains\n    if (!(IsDefined(schema.contains) || IsNumber(schema.minContains) || IsNumber(schema.maxContains))) {\n        return true; // exit\n    }\n    const containsSchema = IsDefined(schema.contains) ? schema.contains : Never();\n    const containsCount = value.reduce((acc, value) => (Visit(containsSchema, references, value) ? acc + 1 : acc), 0);\n    if (containsCount === 0) {\n        return false;\n    }\n    if (IsNumber(schema.minContains) && containsCount < schema.minContains) {\n        return false;\n    }\n    if (IsNumber(schema.maxContains) && containsCount > schema.maxContains) {\n        return false;\n    }\n    return true;\n}\nfunction FromAsyncIterator(schema, references, value) {\n    return IsAsyncIterator(value);\n}\nfunction FromBigInt(schema, references, value) {\n    if (!IsBigInt(value))\n        return false;\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        return false;\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        return false;\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {\n        return false;\n    }\n    return true;\n}\nfunction FromBoolean(schema, references, value) {\n    return IsBoolean(value);\n}\nfunction FromConstructor(schema, references, value) {\n    return Visit(schema.returns, references, value.prototype);\n}\nfunction FromDate(schema, references, value) {\n    if (!IsDate(value))\n        return false;\n    if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {\n        return false;\n    }\n    return true;\n}\nfunction FromFunction(schema, references, value) {\n    return IsFunction(value);\n}\nfunction FromInteger(schema, references, value) {\n    if (!IsInteger(value)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        return false;\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        return false;\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        return false;\n    }\n    return true;\n}\nfunction FromIntersect(schema, references, value) {\n    const check1 = schema.allOf.every((schema) => Visit(schema, references, value));\n    if (schema.unevaluatedProperties === false) {\n        const keyPattern = new RegExp(KeyOfPattern(schema));\n        const check2 = Object.getOwnPropertyNames(value).every((key) => keyPattern.test(key));\n        return check1 && check2;\n    }\n    else if (IsSchema(schema.unevaluatedProperties)) {\n        const keyCheck = new RegExp(KeyOfPattern(schema));\n        const check2 = Object.getOwnPropertyNames(value).every((key) => keyCheck.test(key) || Visit(schema.unevaluatedProperties, references, value[key]));\n        return check1 && check2;\n    }\n    else {\n        return check1;\n    }\n}\nfunction FromIterator(schema, references, value) {\n    return IsIterator(value);\n}\nfunction FromLiteral(schema, references, value) {\n    return value === schema.const;\n}\nfunction FromNever(schema, references, value) {\n    return false;\n}\nfunction FromNot(schema, references, value) {\n    return !Visit(schema.not, references, value);\n}\nfunction FromNull(schema, references, value) {\n    return IsNull(value);\n}\nfunction FromNumber(schema, references, value) {\n    if (!TypeSystemPolicy.IsNumberLike(value))\n        return false;\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        return false;\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        return false;\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        return false;\n    }\n    return true;\n}\nfunction FromObject(schema, references, value) {\n    if (!TypeSystemPolicy.IsObjectLike(value))\n        return false;\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        return false;\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        return false;\n    }\n    const knownKeys = Object.getOwnPropertyNames(schema.properties);\n    for (const knownKey of knownKeys) {\n        const property = schema.properties[knownKey];\n        if (schema.required && schema.required.includes(knownKey)) {\n            if (!Visit(property, references, value[knownKey])) {\n                return false;\n            }\n            if ((ExtendsUndefinedCheck(property) || IsAnyOrUnknown(property)) && !(knownKey in value)) {\n                return false;\n            }\n        }\n        else {\n            if (TypeSystemPolicy.IsExactOptionalProperty(value, knownKey) && !Visit(property, references, value[knownKey])) {\n                return false;\n            }\n        }\n    }\n    if (schema.additionalProperties === false) {\n        const valueKeys = Object.getOwnPropertyNames(value);\n        // optimization: value is valid if schemaKey length matches the valueKey length\n        if (schema.required && schema.required.length === knownKeys.length && valueKeys.length === knownKeys.length) {\n            return true;\n        }\n        else {\n            return valueKeys.every((valueKey) => knownKeys.includes(valueKey));\n        }\n    }\n    else if (typeof schema.additionalProperties === 'object') {\n        const valueKeys = Object.getOwnPropertyNames(value);\n        return valueKeys.every((key) => knownKeys.includes(key) || Visit(schema.additionalProperties, references, value[key]));\n    }\n    else {\n        return true;\n    }\n}\nfunction FromPromise(schema, references, value) {\n    return IsPromise(value);\n}\nfunction FromRecord(schema, references, value) {\n    if (!TypeSystemPolicy.IsRecordLike(value)) {\n        return false;\n    }\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        return false;\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        return false;\n    }\n    const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n    const regex = new RegExp(patternKey);\n    // prettier-ignore\n    const check1 = Object.entries(value).every(([key, value]) => {\n        return (regex.test(key)) ? Visit(patternSchema, references, value) : true;\n    });\n    // prettier-ignore\n    const check2 = typeof schema.additionalProperties === 'object' ? Object.entries(value).every(([key, value]) => {\n        return (!regex.test(key)) ? Visit(schema.additionalProperties, references, value) : true;\n    }) : true;\n    const check3 = schema.additionalProperties === false\n        ? Object.getOwnPropertyNames(value).every((key) => {\n            return regex.test(key);\n        })\n        : true;\n    return check1 && check2 && check3;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromRegExp(schema, references, value) {\n    const regex = new RegExp(schema.source, schema.flags);\n    if (IsDefined(schema.minLength)) {\n        if (!(value.length >= schema.minLength))\n            return false;\n    }\n    if (IsDefined(schema.maxLength)) {\n        if (!(value.length <= schema.maxLength))\n            return false;\n    }\n    return regex.test(value);\n}\nfunction FromString(schema, references, value) {\n    if (!IsString(value)) {\n        return false;\n    }\n    if (IsDefined(schema.minLength)) {\n        if (!(value.length >= schema.minLength))\n            return false;\n    }\n    if (IsDefined(schema.maxLength)) {\n        if (!(value.length <= schema.maxLength))\n            return false;\n    }\n    if (IsDefined(schema.pattern)) {\n        const regex = new RegExp(schema.pattern);\n        if (!regex.test(value))\n            return false;\n    }\n    if (IsDefined(schema.format)) {\n        if (!FormatRegistry.Has(schema.format))\n            return false;\n        const func = FormatRegistry.Get(schema.format);\n        return func(value);\n    }\n    return true;\n}\nfunction FromSymbol(schema, references, value) {\n    return IsSymbol(value);\n}\nfunction FromTemplateLiteral(schema, references, value) {\n    return IsString(value) && new RegExp(schema.pattern).test(value);\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    if (!IsArray(value)) {\n        return false;\n    }\n    if (schema.items === undefined && !(value.length === 0)) {\n        return false;\n    }\n    if (!(value.length === schema.maxItems)) {\n        return false;\n    }\n    if (!schema.items) {\n        return true;\n    }\n    for (let i = 0; i < schema.items.length; i++) {\n        if (!Visit(schema.items[i], references, value[i]))\n            return false;\n    }\n    return true;\n}\nfunction FromUndefined(schema, references, value) {\n    return IsUndefined(value);\n}\nfunction FromUnion(schema, references, value) {\n    return schema.anyOf.some((inner) => Visit(inner, references, value));\n}\nfunction FromUint8Array(schema, references, value) {\n    if (!IsUint8Array(value)) {\n        return false;\n    }\n    if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {\n        return false;\n    }\n    if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {\n        return false;\n    }\n    return true;\n}\nfunction FromUnknown(schema, references, value) {\n    return true;\n}\nfunction FromVoid(schema, references, value) {\n    return TypeSystemPolicy.IsVoidLike(value);\n}\nfunction FromKind(schema, references, value) {\n    if (!TypeRegistry.Has(schema[Kind]))\n        return false;\n    const func = TypeRegistry.Get(schema[Kind]);\n    return func(schema, value);\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsDefined(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Any':\n            return FromAny(schema_, references_, value);\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_, value);\n        case 'BigInt':\n            return FromBigInt(schema_, references_, value);\n        case 'Boolean':\n            return FromBoolean(schema_, references_, value);\n        case 'Constructor':\n            return FromConstructor(schema_, references_, value);\n        case 'Date':\n            return FromDate(schema_, references_, value);\n        case 'Function':\n            return FromFunction(schema_, references_, value);\n        case 'Integer':\n            return FromInteger(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Iterator':\n            return FromIterator(schema_, references_, value);\n        case 'Literal':\n            return FromLiteral(schema_, references_, value);\n        case 'Never':\n            return FromNever(schema_, references_, value);\n        case 'Not':\n            return FromNot(schema_, references_, value);\n        case 'Null':\n            return FromNull(schema_, references_, value);\n        case 'Number':\n            return FromNumber(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Promise':\n            return FromPromise(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'RegExp':\n            return FromRegExp(schema_, references_, value);\n        case 'String':\n            return FromString(schema_, references_, value);\n        case 'Symbol':\n            return FromSymbol(schema_, references_, value);\n        case 'TemplateLiteral':\n            return FromTemplateLiteral(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Undefined':\n            return FromUndefined(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        case 'Uint8Array':\n            return FromUint8Array(schema_, references_, value);\n        case 'Unknown':\n            return FromUnknown(schema_, references_, value);\n        case 'Void':\n            return FromVoid(schema_, references_, value);\n        default:\n            if (!TypeRegistry.Has(schema_[Kind]))\n                throw new ValueCheckUnknownTypeError(schema_);\n            return FromKind(schema_, references_, value);\n    }\n}\n/** Returns true if the value matches the given type. */\nexport function Check(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "export * from './extends-check.mjs';\nexport * from './extends-from-mapped-key.mjs';\nexport * from './extends-from-mapped-result.mjs';\nexport * from './extends-undefined.mjs';\nexport * from './extends.mjs';\n", "import { Any } from '../any/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { String } from '../string/index.mjs';\nimport { Unknown } from '../unknown/index.mjs';\nimport { TemplateLiteralToUnion } from '../template-literal/index.mjs';\nimport { PatternNumberExact, PatternStringExact } from '../patterns/index.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\nimport { TypeGuard, ValueGuard } from '../guard/index.mjs';\nexport class ExtendsResolverError extends TypeBoxError {\n}\nexport var ExtendsResult;\n(function (ExtendsResult) {\n    ExtendsResult[ExtendsResult[\"Union\"] = 0] = \"Union\";\n    ExtendsResult[ExtendsResult[\"True\"] = 1] = \"True\";\n    ExtendsResult[ExtendsResult[\"False\"] = 2] = \"False\";\n})(ExtendsResult || (ExtendsResult = {}));\n// ------------------------------------------------------------------\n// IntoBooleanResult\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IntoBooleanResult(result) {\n    return result === ExtendsResult.False ? result : ExtendsResult.True;\n}\n// ------------------------------------------------------------------\n// Throw\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Throw(message) {\n    throw new ExtendsResolverError(message);\n}\n// ------------------------------------------------------------------\n// StructuralRight\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsStructuralRight(right) {\n    return (TypeGuard.IsNever(right) ||\n        TypeGuard.IsIntersect(right) ||\n        TypeGuard.IsUnion(right) ||\n        TypeGuard.IsUnknown(right) ||\n        TypeGuard.IsAny(right));\n}\n// prettier-ignore\nfunction StructuralRight(left, right) {\n    return (TypeGuard.IsNever(right) ? FromNeverRight(left, right) :\n        TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n            TypeGuard.IsUnion(right) ? FromUnionRight(left, right) :\n                TypeGuard.IsUnknown(right) ? FromUnknownRight(left, right) :\n                    TypeGuard.IsAny(right) ? FromAnyRight(left, right) :\n                        Throw('StructuralRight'));\n}\n// ------------------------------------------------------------------\n// Any\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromAnyRight(left, right) {\n    return ExtendsResult.True;\n}\n// prettier-ignore\nfunction FromAny(left, right) {\n    return (TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n        (TypeGuard.IsUnion(right) && right.anyOf.some((schema) => TypeGuard.IsAny(schema) || TypeGuard.IsUnknown(schema))) ? ExtendsResult.True :\n            TypeGuard.IsUnion(right) ? ExtendsResult.Union :\n                TypeGuard.IsUnknown(right) ? ExtendsResult.True :\n                    TypeGuard.IsAny(right) ? ExtendsResult.True :\n                        ExtendsResult.Union);\n}\n// ------------------------------------------------------------------\n// Array\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromArrayRight(left, right) {\n    return (TypeGuard.IsUnknown(left) ? ExtendsResult.False :\n        TypeGuard.IsAny(left) ? ExtendsResult.Union :\n            TypeGuard.IsNever(left) ? ExtendsResult.True :\n                ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromArray(left, right) {\n    return (TypeGuard.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True :\n        IsStructuralRight(right) ? StructuralRight(left, right) :\n            !TypeGuard.IsArray(right) ? ExtendsResult.False :\n                IntoBooleanResult(Visit(left.items, right.items)));\n}\n// ------------------------------------------------------------------\n// AsyncIterator\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromAsyncIterator(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        !TypeGuard.IsAsyncIterator(right) ? ExtendsResult.False :\n            IntoBooleanResult(Visit(left.items, right.items)));\n}\n// ------------------------------------------------------------------\n// BigInt\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromBigInt(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsBigInt(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Boolean\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromBooleanRight(left, right) {\n    return (TypeGuard.IsLiteralBoolean(left) ? ExtendsResult.True :\n        TypeGuard.IsBoolean(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromBoolean(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsBoolean(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Constructor\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromConstructor(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            !TypeGuard.IsConstructor(right) ? ExtendsResult.False :\n                left.parameters.length > right.parameters.length ? ExtendsResult.False :\n                    (!left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === ExtendsResult.True)) ? ExtendsResult.False :\n                        IntoBooleanResult(Visit(left.returns, right.returns)));\n}\n// ------------------------------------------------------------------\n// Date\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromDate(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsDate(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Function\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromFunction(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            !TypeGuard.IsFunction(right) ? ExtendsResult.False :\n                left.parameters.length > right.parameters.length ? ExtendsResult.False :\n                    (!left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === ExtendsResult.True)) ? ExtendsResult.False :\n                        IntoBooleanResult(Visit(left.returns, right.returns)));\n}\n// ------------------------------------------------------------------\n// Integer\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromIntegerRight(left, right) {\n    return (TypeGuard.IsLiteral(left) && ValueGuard.IsNumber(left.const) ? ExtendsResult.True :\n        TypeGuard.IsNumber(left) || TypeGuard.IsInteger(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromInteger(left, right) {\n    return (TypeGuard.IsInteger(right) || TypeGuard.IsNumber(right) ? ExtendsResult.True :\n        IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Intersect\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromIntersectRight(left, right) {\n    return right.allOf.every((schema) => Visit(left, schema) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// prettier-ignore\nfunction FromIntersect(left, right) {\n    return left.allOf.some((schema) => Visit(schema, right) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// ------------------------------------------------------------------\n// Iterator\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromIterator(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        !TypeGuard.IsIterator(right) ? ExtendsResult.False :\n            IntoBooleanResult(Visit(left.items, right.items)));\n}\n// ------------------------------------------------------------------\n// Literal\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromLiteral(left, right) {\n    return (TypeGuard.IsLiteral(right) && right.const === left.const ? ExtendsResult.True :\n        IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                    TypeGuard.IsString(right) ? FromStringRight(left, right) :\n                        TypeGuard.IsNumber(right) ? FromNumberRight(left, right) :\n                            TypeGuard.IsInteger(right) ? FromIntegerRight(left, right) :\n                                TypeGuard.IsBoolean(right) ? FromBooleanRight(left, right) :\n                                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Never\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromNeverRight(left, right) {\n    return ExtendsResult.False;\n}\n// prettier-ignore\nfunction FromNever(left, right) {\n    return ExtendsResult.True;\n}\n// ------------------------------------------------------------------\n// Not\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction UnwrapTNot(schema) {\n    let [current, depth] = [schema, 0];\n    while (true) {\n        if (!TypeGuard.IsNot(current))\n            break;\n        current = current.not;\n        depth += 1;\n    }\n    return depth % 2 === 0 ? current : Unknown();\n}\n// prettier-ignore\nfunction FromNot(left, right) {\n    // TypeScript has no concept of negated types, and attempts to correctly check the negated\n    // type at runtime would put TypeBox at odds with TypeScripts ability to statically infer\n    // the type. Instead we unwrap to either unknown or T and continue evaluating.\n    // prettier-ignore\n    return (TypeGuard.IsNot(left) ? Visit(UnwrapTNot(left), right) :\n        TypeGuard.IsNot(right) ? Visit(left, UnwrapTNot(right)) :\n            Throw('Invalid fallthrough for Not'));\n}\n// ------------------------------------------------------------------\n// Null\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromNull(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsNull(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Number\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromNumberRight(left, right) {\n    return (TypeGuard.IsLiteralNumber(left) ? ExtendsResult.True :\n        TypeGuard.IsNumber(left) || TypeGuard.IsInteger(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromNumber(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsInteger(right) || TypeGuard.IsNumber(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Object\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsObjectPropertyCount(schema, count) {\n    return Object.getOwnPropertyNames(schema.properties).length === count;\n}\n// prettier-ignore\nfunction IsObjectStringLike(schema) {\n    return IsObjectArrayLike(schema);\n}\n// prettier-ignore\nfunction IsObjectSymbolLike(schema) {\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'description' in schema.properties && TypeGuard.IsUnion(schema.properties.description) && schema.properties.description.anyOf.length === 2 && ((TypeGuard.IsString(schema.properties.description.anyOf[0]) &&\n        TypeGuard.IsUndefined(schema.properties.description.anyOf[1])) || (TypeGuard.IsString(schema.properties.description.anyOf[1]) &&\n        TypeGuard.IsUndefined(schema.properties.description.anyOf[0]))));\n}\n// prettier-ignore\nfunction IsObjectNumberLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectBooleanLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectBigIntLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectDateLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectUint8ArrayLike(schema) {\n    return IsObjectArrayLike(schema);\n}\n// prettier-ignore\nfunction IsObjectFunctionLike(schema) {\n    const length = Number();\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'length' in schema.properties && IntoBooleanResult(Visit(schema.properties['length'], length)) === ExtendsResult.True);\n}\n// prettier-ignore\nfunction IsObjectConstructorLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectArrayLike(schema) {\n    const length = Number();\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'length' in schema.properties && IntoBooleanResult(Visit(schema.properties['length'], length)) === ExtendsResult.True);\n}\n// prettier-ignore\nfunction IsObjectPromiseLike(schema) {\n    const then = FunctionType([Any()], Any());\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'then' in schema.properties && IntoBooleanResult(Visit(schema.properties['then'], then)) === ExtendsResult.True);\n}\n// ------------------------------------------------------------------\n// Property\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Property(left, right) {\n    return (Visit(left, right) === ExtendsResult.False ? ExtendsResult.False :\n        TypeGuard.IsOptional(left) && !TypeGuard.IsOptional(right) ? ExtendsResult.False :\n            ExtendsResult.True);\n}\n// prettier-ignore\nfunction FromObjectRight(left, right) {\n    return (TypeGuard.IsUnknown(left) ? ExtendsResult.False :\n        TypeGuard.IsAny(left) ? ExtendsResult.Union : (TypeGuard.IsNever(left) ||\n            (TypeGuard.IsLiteralString(left) && IsObjectStringLike(right)) ||\n            (TypeGuard.IsLiteralNumber(left) && IsObjectNumberLike(right)) ||\n            (TypeGuard.IsLiteralBoolean(left) && IsObjectBooleanLike(right)) ||\n            (TypeGuard.IsSymbol(left) && IsObjectSymbolLike(right)) ||\n            (TypeGuard.IsBigInt(left) && IsObjectBigIntLike(right)) ||\n            (TypeGuard.IsString(left) && IsObjectStringLike(right)) ||\n            (TypeGuard.IsSymbol(left) && IsObjectSymbolLike(right)) ||\n            (TypeGuard.IsNumber(left) && IsObjectNumberLike(right)) ||\n            (TypeGuard.IsInteger(left) && IsObjectNumberLike(right)) ||\n            (TypeGuard.IsBoolean(left) && IsObjectBooleanLike(right)) ||\n            (TypeGuard.IsUint8Array(left) && IsObjectUint8ArrayLike(right)) ||\n            (TypeGuard.IsDate(left) && IsObjectDateLike(right)) ||\n            (TypeGuard.IsConstructor(left) && IsObjectConstructorLike(right)) ||\n            (TypeGuard.IsFunction(left) && IsObjectFunctionLike(right))) ? ExtendsResult.True :\n            (TypeGuard.IsRecord(left) && TypeGuard.IsString(RecordKey(left))) ? (() => {\n                // When expressing a Record with literal key values, the Record is converted into a Object with\n                // the Hint assigned as `Record`. This is used to invert the extends logic.\n                return right[Hint] === 'Record' ? ExtendsResult.True : ExtendsResult.False;\n            })() :\n                (TypeGuard.IsRecord(left) && TypeGuard.IsNumber(RecordKey(left))) ? (() => {\n                    return IsObjectPropertyCount(right, 0) ? ExtendsResult.True : ExtendsResult.False;\n                })() :\n                    ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromObject(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n            !TypeGuard.IsObject(right) ? ExtendsResult.False :\n                (() => {\n                    for (const key of Object.getOwnPropertyNames(right.properties)) {\n                        if (!(key in left.properties) && !TypeGuard.IsOptional(right.properties[key])) {\n                            return ExtendsResult.False;\n                        }\n                        if (TypeGuard.IsOptional(right.properties[key])) {\n                            return ExtendsResult.True;\n                        }\n                        if (Property(left.properties[key], right.properties[key]) === ExtendsResult.False) {\n                            return ExtendsResult.False;\n                        }\n                    }\n                    return ExtendsResult.True;\n                })());\n}\n// ------------------------------------------------------------------\n// Promise\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromPromise(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) && IsObjectPromiseLike(right) ? ExtendsResult.True :\n            !TypeGuard.IsPromise(right) ? ExtendsResult.False :\n                IntoBooleanResult(Visit(left.item, right.item)));\n}\n// ------------------------------------------------------------------\n// Record\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordKey(schema) {\n    return (PatternNumberExact in schema.patternProperties ? Number() :\n        PatternStringExact in schema.patternProperties ? String() :\n            Throw('Unknown record key pattern'));\n}\n// prettier-ignore\nfunction RecordValue(schema) {\n    return (PatternNumberExact in schema.patternProperties ? schema.patternProperties[PatternNumberExact] :\n        PatternStringExact in schema.patternProperties ? schema.patternProperties[PatternStringExact] :\n            Throw('Unable to get record value schema'));\n}\n// prettier-ignore\nfunction FromRecordRight(left, right) {\n    const [Key, Value] = [RecordKey(right), RecordValue(right)];\n    return ((TypeGuard.IsLiteralString(left) && TypeGuard.IsNumber(Key) && IntoBooleanResult(Visit(left, Value)) === ExtendsResult.True) ? ExtendsResult.True :\n        TypeGuard.IsUint8Array(left) && TypeGuard.IsNumber(Key) ? Visit(left, Value) :\n            TypeGuard.IsString(left) && TypeGuard.IsNumber(Key) ? Visit(left, Value) :\n                TypeGuard.IsArray(left) && TypeGuard.IsNumber(Key) ? Visit(left, Value) :\n                    TypeGuard.IsObject(left) ? (() => {\n                        for (const key of Object.getOwnPropertyNames(left.properties)) {\n                            if (Property(Value, left.properties[key]) === ExtendsResult.False) {\n                                return ExtendsResult.False;\n                            }\n                        }\n                        return ExtendsResult.True;\n                    })() :\n                        ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromRecord(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            !TypeGuard.IsRecord(right) ? ExtendsResult.False :\n                Visit(RecordValue(left), RecordValue(right)));\n}\n// ------------------------------------------------------------------\n// RegExp\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromRegExp(left, right) {\n    // Note: RegExp types evaluate as strings, not RegExp objects.\n    // Here we remap either into string and continue evaluating.\n    const L = TypeGuard.IsRegExp(left) ? String() : left;\n    const R = TypeGuard.IsRegExp(right) ? String() : right;\n    return Visit(L, R);\n}\n// ------------------------------------------------------------------\n// String\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromStringRight(left, right) {\n    return (TypeGuard.IsLiteral(left) && ValueGuard.IsString(left.const) ? ExtendsResult.True :\n        TypeGuard.IsString(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromString(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsString(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Symbol\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromSymbol(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsSymbol(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// TemplateLiteral\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromTemplateLiteral(left, right) {\n    // TemplateLiteral types are resolved to either unions for finite expressions or string\n    // for infinite expressions. Here we call to TemplateLiteralResolver to resolve for\n    // either type and continue evaluating.\n    return (TypeGuard.IsTemplateLiteral(left) ? Visit(TemplateLiteralToUnion(left), right) :\n        TypeGuard.IsTemplateLiteral(right) ? Visit(left, TemplateLiteralToUnion(right)) :\n            Throw('Invalid fallthrough for TemplateLiteral'));\n}\n// ------------------------------------------------------------------\n// Tuple\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsArrayOfTuple(left, right) {\n    return (TypeGuard.IsArray(right) &&\n        left.items !== undefined &&\n        left.items.every((schema) => Visit(schema, right.items) === ExtendsResult.True));\n}\n// prettier-ignore\nfunction FromTupleRight(left, right) {\n    return (TypeGuard.IsNever(left) ? ExtendsResult.True :\n        TypeGuard.IsUnknown(left) ? ExtendsResult.False :\n            TypeGuard.IsAny(left) ? ExtendsResult.Union :\n                ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromTuple(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True :\n            TypeGuard.IsArray(right) && IsArrayOfTuple(left, right) ? ExtendsResult.True :\n                !TypeGuard.IsTuple(right) ? ExtendsResult.False :\n                    (ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items)) || (!ValueGuard.IsUndefined(left.items) && ValueGuard.IsUndefined(right.items)) ? ExtendsResult.False :\n                        (ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items)) ? ExtendsResult.True :\n                            left.items.every((schema, index) => Visit(schema, right.items[index]) === ExtendsResult.True) ? ExtendsResult.True :\n                                ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Uint8Array\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUint8Array(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsUint8Array(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Undefined\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUndefined(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsVoid(right) ? FromVoidRight(left, right) :\n                    TypeGuard.IsUndefined(right) ? ExtendsResult.True :\n                        ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Union\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUnionRight(left, right) {\n    return right.anyOf.some((schema) => Visit(left, schema) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// prettier-ignore\nfunction FromUnion(left, right) {\n    return left.anyOf.every((schema) => Visit(schema, right) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// ------------------------------------------------------------------\n// Unknown\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUnknownRight(left, right) {\n    return ExtendsResult.True;\n}\n// prettier-ignore\nfunction FromUnknown(left, right) {\n    return (TypeGuard.IsNever(right) ? FromNeverRight(left, right) :\n        TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n            TypeGuard.IsUnion(right) ? FromUnionRight(left, right) :\n                TypeGuard.IsAny(right) ? FromAnyRight(left, right) :\n                    TypeGuard.IsString(right) ? FromStringRight(left, right) :\n                        TypeGuard.IsNumber(right) ? FromNumberRight(left, right) :\n                            TypeGuard.IsInteger(right) ? FromIntegerRight(left, right) :\n                                TypeGuard.IsBoolean(right) ? FromBooleanRight(left, right) :\n                                    TypeGuard.IsArray(right) ? FromArrayRight(left, right) :\n                                        TypeGuard.IsTuple(right) ? FromTupleRight(left, right) :\n                                            TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                                                TypeGuard.IsUnknown(right) ? ExtendsResult.True :\n                                                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Void\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromVoidRight(left, right) {\n    return (TypeGuard.IsUndefined(left) ? ExtendsResult.True :\n        TypeGuard.IsUndefined(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromVoid(left, right) {\n    return (TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n        TypeGuard.IsUnion(right) ? FromUnionRight(left, right) :\n            TypeGuard.IsUnknown(right) ? FromUnknownRight(left, right) :\n                TypeGuard.IsAny(right) ? FromAnyRight(left, right) :\n                    TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                        TypeGuard.IsVoid(right) ? ExtendsResult.True :\n                            ExtendsResult.False);\n}\n// prettier-ignore\nfunction Visit(left, right) {\n    return (\n    // resolvable\n    (TypeGuard.IsTemplateLiteral(left) || TypeGuard.IsTemplateLiteral(right)) ? FromTemplateLiteral(left, right) :\n        (TypeGuard.IsRegExp(left) || TypeGuard.IsRegExp(right)) ? FromRegExp(left, right) :\n            (TypeGuard.IsNot(left) || TypeGuard.IsNot(right)) ? FromNot(left, right) :\n                // standard\n                TypeGuard.IsAny(left) ? FromAny(left, right) :\n                    TypeGuard.IsArray(left) ? FromArray(left, right) :\n                        TypeGuard.IsBigInt(left) ? FromBigInt(left, right) :\n                            TypeGuard.IsBoolean(left) ? FromBoolean(left, right) :\n                                TypeGuard.IsAsyncIterator(left) ? FromAsyncIterator(left, right) :\n                                    TypeGuard.IsConstructor(left) ? FromConstructor(left, right) :\n                                        TypeGuard.IsDate(left) ? FromDate(left, right) :\n                                            TypeGuard.IsFunction(left) ? FromFunction(left, right) :\n                                                TypeGuard.IsInteger(left) ? FromInteger(left, right) :\n                                                    TypeGuard.IsIntersect(left) ? FromIntersect(left, right) :\n                                                        TypeGuard.IsIterator(left) ? FromIterator(left, right) :\n                                                            TypeGuard.IsLiteral(left) ? FromLiteral(left, right) :\n                                                                TypeGuard.IsNever(left) ? FromNever(left, right) :\n                                                                    TypeGuard.IsNull(left) ? FromNull(left, right) :\n                                                                        TypeGuard.IsNumber(left) ? FromNumber(left, right) :\n                                                                            TypeGuard.IsObject(left) ? FromObject(left, right) :\n                                                                                TypeGuard.IsRecord(left) ? FromRecord(left, right) :\n                                                                                    TypeGuard.IsString(left) ? FromString(left, right) :\n                                                                                        TypeGuard.IsSymbol(left) ? FromSymbol(left, right) :\n                                                                                            TypeGuard.IsTuple(left) ? FromTuple(left, right) :\n                                                                                                TypeGuard.IsPromise(left) ? FromPromise(left, right) :\n                                                                                                    TypeGuard.IsUint8Array(left) ? FromUint8Array(left, right) :\n                                                                                                        TypeGuard.IsUndefined(left) ? FromUndefined(left, right) :\n                                                                                                            TypeGuard.IsUnion(left) ? FromUnion(left, right) :\n                                                                                                                TypeGuard.IsUnknown(left) ? FromUnknown(left, right) :\n                                                                                                                    TypeGuard.IsVoid(left) ? FromVoid(left, right) :\n                                                                                                                        Throw(`Unknown left type operand '${left[Kind]}'`));\n}\nexport function ExtendsCheck(left, right) {\n    return Visit(left, right);\n}\n", "export * from './any.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Any type */\nexport function Any(options = {}) {\n    return { ...options, [Kind]: 'Any' };\n}\n", "export * from './unknown.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Unknown type */\nexport function Unknown(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Unknown',\n    };\n}\n", "export * as KindGuard from './kind.mjs';\nexport * as TypeGuard from './type.mjs';\nexport * as ValueGuard from './value.mjs';\n", "import * as ValueGuard from './value.mjs';\nimport { Kind, Hint, TransformKind, ReadonlyKind, OptionalKind } from '../symbols/index.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\nexport class TypeGuardUnknownTypeError extends TypeBoxError {\n}\nconst KnownTypes = [\n    'Any',\n    'Array',\n    'AsyncIterator',\n    'BigInt',\n    'Boolean',\n    'Constructor',\n    'Date',\n    'Enum',\n    'Function',\n    'Integer',\n    'Intersect',\n    'Iterator',\n    'Literal',\n    'MappedKey',\n    'MappedResult',\n    'Not',\n    'Null',\n    'Number',\n    'Object',\n    'Promise',\n    'Record',\n    'Ref',\n    'RegExp',\n    'String',\n    'Symbol',\n    'TemplateLiteral',\n    'This',\n    'Tuple',\n    'Undefined',\n    'Union',\n    'Uint8Array',\n    'Unknown',\n    'Void',\n];\nfunction IsPattern(value) {\n    try {\n        new RegExp(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction IsControlCharacterFree(value) {\n    if (!ValueGuard.IsString(value))\n        return false;\n    for (let i = 0; i < value.length; i++) {\n        const code = value.charCodeAt(i);\n        if ((code >= 7 && code <= 13) || code === 27 || code === 127) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction IsAdditionalProperties(value) {\n    return IsOptionalBoolean(value) || IsSchema(value);\n}\nfunction IsOptionalBigInt(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsBigInt(value);\n}\nfunction IsOptionalNumber(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsNumber(value);\n}\nfunction IsOptionalBoolean(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsBoolean(value);\n}\nfunction IsOptionalString(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsString(value);\n}\nfunction IsOptionalPattern(value) {\n    return ValueGuard.IsUndefined(value) || (ValueGuard.IsString(value) && IsControlCharacterFree(value) && IsPattern(value));\n}\nfunction IsOptionalFormat(value) {\n    return ValueGuard.IsUndefined(value) || (ValueGuard.IsString(value) && IsControlCharacterFree(value));\n}\nfunction IsOptionalSchema(value) {\n    return ValueGuard.IsUndefined(value) || IsSchema(value);\n}\n// ------------------------------------------------------------------\n// Modifiers\n// ------------------------------------------------------------------\n/** Returns true if this value has a Readonly symbol */\nexport function IsReadonly(value) {\n    return ValueGuard.IsObject(value) && value[ReadonlyKind] === 'Readonly';\n}\n/** Returns true if this value has a Optional symbol */\nexport function IsOptional(value) {\n    return ValueGuard.IsObject(value) && value[OptionalKind] === 'Optional';\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\n/** Returns true if the given value is TAny */\nexport function IsAny(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Any') &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TArray */\nexport function IsArray(value) {\n    return (IsKindOf(value, 'Array') &&\n        value.type === 'array' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.items) &&\n        IsOptionalNumber(value.minItems) &&\n        IsOptionalNumber(value.maxItems) &&\n        IsOptionalBoolean(value.uniqueItems) &&\n        IsOptionalSchema(value.contains) &&\n        IsOptionalNumber(value.minContains) &&\n        IsOptionalNumber(value.maxContains));\n}\n/** Returns true if the given value is TAsyncIterator */\nexport function IsAsyncIterator(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'AsyncIterator') &&\n        value.type === 'AsyncIterator' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.items));\n}\n/** Returns true if the given value is TBigInt */\nexport function IsBigInt(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'BigInt') &&\n        value.type === 'bigint' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalBigInt(value.exclusiveMaximum) &&\n        IsOptionalBigInt(value.exclusiveMinimum) &&\n        IsOptionalBigInt(value.maximum) &&\n        IsOptionalBigInt(value.minimum) &&\n        IsOptionalBigInt(value.multipleOf));\n}\n/** Returns true if the given value is TBoolean */\nexport function IsBoolean(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Boolean') &&\n        value.type === 'boolean' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TConstructor */\nexport function IsConstructor(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Constructor') &&\n        value.type === 'Constructor' &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsArray(value.parameters) &&\n        value.parameters.every(schema => IsSchema(schema)) &&\n        IsSchema(value.returns));\n}\n/** Returns true if the given value is TDate */\nexport function IsDate(value) {\n    return (IsKindOf(value, 'Date') &&\n        value.type === 'Date' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.exclusiveMaximumTimestamp) &&\n        IsOptionalNumber(value.exclusiveMinimumTimestamp) &&\n        IsOptionalNumber(value.maximumTimestamp) &&\n        IsOptionalNumber(value.minimumTimestamp) &&\n        IsOptionalNumber(value.multipleOfTimestamp));\n}\n/** Returns true if the given value is TFunction */\nexport function IsFunction(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Function') &&\n        value.type === 'Function' &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsArray(value.parameters) &&\n        value.parameters.every(schema => IsSchema(schema)) &&\n        IsSchema(value.returns));\n}\n/** Returns true if the given value is TInteger */\nexport function IsInteger(value) {\n    return (IsKindOf(value, 'Integer') &&\n        value.type === 'integer' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.exclusiveMaximum) &&\n        IsOptionalNumber(value.exclusiveMinimum) &&\n        IsOptionalNumber(value.maximum) &&\n        IsOptionalNumber(value.minimum) &&\n        IsOptionalNumber(value.multipleOf));\n}\n/** Returns true if the given schema is TProperties */\nexport function IsProperties(value) {\n    // prettier-ignore\n    return (ValueGuard.IsObject(value) &&\n        Object.entries(value).every(([key, schema]) => IsControlCharacterFree(key) && IsSchema(schema)));\n}\n/** Returns true if the given value is TIntersect */\nexport function IsIntersect(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Intersect') &&\n        (ValueGuard.IsString(value.type) && value.type !== 'object' ? false : true) &&\n        ValueGuard.IsArray(value.allOf) &&\n        value.allOf.every(schema => IsSchema(schema) && !IsTransform(schema)) &&\n        IsOptionalString(value.type) &&\n        (IsOptionalBoolean(value.unevaluatedProperties) || IsOptionalSchema(value.unevaluatedProperties)) &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TIterator */\nexport function IsIterator(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Iterator') &&\n        value.type === 'Iterator' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.items));\n}\n/** Returns true if the given value is a TKind with the given name. */\nexport function IsKindOf(value, kind) {\n    return ValueGuard.IsObject(value) && Kind in value && value[Kind] === kind;\n}\n/** Returns true if the given value is TLiteral<string> */\nexport function IsLiteralString(value) {\n    return IsLiteral(value) && ValueGuard.IsString(value.const);\n}\n/** Returns true if the given value is TLiteral<number> */\nexport function IsLiteralNumber(value) {\n    return IsLiteral(value) && ValueGuard.IsNumber(value.const);\n}\n/** Returns true if the given value is TLiteral<boolean> */\nexport function IsLiteralBoolean(value) {\n    return IsLiteral(value) && ValueGuard.IsBoolean(value.const);\n}\n/** Returns true if the given value is TLiteral */\nexport function IsLiteral(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Literal') &&\n        IsOptionalString(value.$id) && IsLiteralValue(value.const));\n}\n/** Returns true if the given value is a TLiteralValue */\nexport function IsLiteralValue(value) {\n    return ValueGuard.IsBoolean(value) || ValueGuard.IsNumber(value) || ValueGuard.IsString(value);\n}\n/** Returns true if the given value is a TMappedKey */\nexport function IsMappedKey(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'MappedKey') &&\n        ValueGuard.IsArray(value.keys) &&\n        value.keys.every(key => ValueGuard.IsNumber(key) || ValueGuard.IsString(key)));\n}\n/** Returns true if the given value is TMappedResult */\nexport function IsMappedResult(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'MappedResult') &&\n        IsProperties(value.properties));\n}\n/** Returns true if the given value is TNever */\nexport function IsNever(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Never') &&\n        ValueGuard.IsObject(value.not) &&\n        Object.getOwnPropertyNames(value.not).length === 0);\n}\n/** Returns true if the given value is TNot */\nexport function IsNot(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Not') &&\n        IsSchema(value.not));\n}\n/** Returns true if the given value is TNull */\nexport function IsNull(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Null') &&\n        value.type === 'null' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TNumber */\nexport function IsNumber(value) {\n    return (IsKindOf(value, 'Number') &&\n        value.type === 'number' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.exclusiveMaximum) &&\n        IsOptionalNumber(value.exclusiveMinimum) &&\n        IsOptionalNumber(value.maximum) &&\n        IsOptionalNumber(value.minimum) &&\n        IsOptionalNumber(value.multipleOf));\n}\n/** Returns true if the given value is TObject */\nexport function IsObject(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Object') &&\n        value.type === 'object' &&\n        IsOptionalString(value.$id) &&\n        IsProperties(value.properties) &&\n        IsAdditionalProperties(value.additionalProperties) &&\n        IsOptionalNumber(value.minProperties) &&\n        IsOptionalNumber(value.maxProperties));\n}\n/** Returns true if the given value is TPromise */\nexport function IsPromise(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Promise') &&\n        value.type === 'Promise' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.item));\n}\n/** Returns true if the given value is TRecord */\nexport function IsRecord(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Record') &&\n        value.type === 'object' &&\n        IsOptionalString(value.$id) &&\n        IsAdditionalProperties(value.additionalProperties) &&\n        ValueGuard.IsObject(value.patternProperties) &&\n        ((schema) => {\n            const keys = Object.getOwnPropertyNames(schema.patternProperties);\n            return (keys.length === 1 &&\n                IsPattern(keys[0]) &&\n                ValueGuard.IsObject(schema.patternProperties) &&\n                IsSchema(schema.patternProperties[keys[0]]));\n        })(value));\n}\n/** Returns true if this value is TRecursive */\nexport function IsRecursive(value) {\n    return ValueGuard.IsObject(value) && Hint in value && value[Hint] === 'Recursive';\n}\n/** Returns true if the given value is TRef */\nexport function IsRef(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Ref') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsString(value.$ref));\n}\n/** Returns true if the given value is TRegExp */\nexport function IsRegExp(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'RegExp') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsString(value.source) &&\n        ValueGuard.IsString(value.flags) &&\n        IsOptionalNumber(value.maxLength) &&\n        IsOptionalNumber(value.minLength));\n}\n/** Returns true if the given value is TString */\nexport function IsString(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'String') &&\n        value.type === 'string' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.minLength) &&\n        IsOptionalNumber(value.maxLength) &&\n        IsOptionalPattern(value.pattern) &&\n        IsOptionalFormat(value.format));\n}\n/** Returns true if the given value is TSymbol */\nexport function IsSymbol(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Symbol') &&\n        value.type === 'symbol' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TTemplateLiteral */\nexport function IsTemplateLiteral(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'TemplateLiteral') &&\n        value.type === 'string' &&\n        ValueGuard.IsString(value.pattern) &&\n        value.pattern[0] === '^' &&\n        value.pattern[value.pattern.length - 1] === '$');\n}\n/** Returns true if the given value is TThis */\nexport function IsThis(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'This') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsString(value.$ref));\n}\n/** Returns true of this value is TTransform */\nexport function IsTransform(value) {\n    return ValueGuard.IsObject(value) && TransformKind in value;\n}\n/** Returns true if the given value is TTuple */\nexport function IsTuple(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Tuple') &&\n        value.type === 'array' &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsNumber(value.minItems) &&\n        ValueGuard.IsNumber(value.maxItems) &&\n        value.minItems === value.maxItems &&\n        (( // empty\n        ValueGuard.IsUndefined(value.items) &&\n            ValueGuard.IsUndefined(value.additionalItems) &&\n            value.minItems === 0) || (ValueGuard.IsArray(value.items) &&\n            value.items.every(schema => IsSchema(schema)))));\n}\n/** Returns true if the given value is TUndefined */\nexport function IsUndefined(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Undefined') &&\n        value.type === 'undefined' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TUnion<Literal<string | number>[]> */\nexport function IsUnionLiteral(value) {\n    return IsUnion(value) && value.anyOf.every((schema) => IsLiteralString(schema) || IsLiteralNumber(schema));\n}\n/** Returns true if the given value is TUnion */\nexport function IsUnion(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Union') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsObject(value) &&\n        ValueGuard.IsArray(value.anyOf) &&\n        value.anyOf.every(schema => IsSchema(schema)));\n}\n/** Returns true if the given value is TUint8Array */\nexport function IsUint8Array(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Uint8Array') &&\n        value.type === 'Uint8Array' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.minByteLength) &&\n        IsOptionalNumber(value.maxByteLength));\n}\n/** Returns true if the given value is TUnknown */\nexport function IsUnknown(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Unknown') &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is a raw TUnsafe */\nexport function IsUnsafe(value) {\n    return IsKindOf(value, 'Unsafe');\n}\n/** Returns true if the given value is TVoid */\nexport function IsVoid(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Void') &&\n        value.type === 'void' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TKind */\nexport function IsKind(value) {\n    return ValueGuard.IsObject(value) && Kind in value && ValueGuard.IsString(value[Kind]) && !KnownTypes.includes(value[Kind]);\n}\n/** Returns true if the given value is TSchema */\nexport function IsSchema(value) {\n    // prettier-ignore\n    return (ValueGuard.IsObject(value)) && (IsAny(value) ||\n        IsArray(value) ||\n        IsBoolean(value) ||\n        IsBigInt(value) ||\n        IsAsyncIterator(value) ||\n        IsConstructor(value) ||\n        IsDate(value) ||\n        IsFunction(value) ||\n        IsInteger(value) ||\n        IsIntersect(value) ||\n        IsIterator(value) ||\n        IsLiteral(value) ||\n        IsMappedKey(value) ||\n        IsMappedResult(value) ||\n        IsNever(value) ||\n        IsNot(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsObject(value) ||\n        IsPromise(value) ||\n        IsRecord(value) ||\n        IsRef(value) ||\n        IsRegExp(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsTemplateLiteral(value) ||\n        IsThis(value) ||\n        IsTuple(value) ||\n        IsUndefined(value) ||\n        IsUnion(value) ||\n        IsUint8Array(value) ||\n        IsUnknown(value) ||\n        IsUnsafe(value) ||\n        IsVoid(value) ||\n        IsKind(value));\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Extends } from './extends.mjs';\n// prettier-ignore\nfunction FromPropertyKey(K, U, L, R, options) {\n    return {\n        [K]: Extends(Literal(K), U, L, R, options)\n    };\n}\n// prettier-ignore\nfunction FromPropertyKeys(K, U, L, R, options) {\n    return K.reduce((Acc, LK) => {\n        return { ...Acc, ...FromPropertyKey(LK, U, L, R, options) };\n    }, {});\n}\n// prettier-ignore\nfunction FromMappedKey(K, U, L, R, options) {\n    return FromPropertyKeys(K.keys, U, L, R, options);\n}\n// prettier-ignore\nexport function ExtendsFromMappedKey(T, U, L, R, options) {\n    const P = FromMappedKey(T, U, L, R, options);\n    return MappedResult(P);\n}\n", "import { Union } from '../union/index.mjs';\nimport { ExtendsCheck, ExtendsResult } from './extends-check.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { ExtendsFromMappedKey } from './extends-from-mapped-key.mjs';\nimport { ExtendsFromMappedResult } from './extends-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsMappedResult } from '../guard/kind.mjs';\n// prettier-ignore\nfunction ExtendsResolve(left, right, trueType, falseType) {\n    const R = ExtendsCheck(left, right);\n    return (R === ExtendsResult.Union ? Union([trueType, falseType]) :\n        R === ExtendsResult.True ? trueType :\n            falseType);\n}\n/** `[Json]` Creates a Conditional type */\nexport function Extends(L, R, T, F, options = {}) {\n    // prettier-ignore\n    return (IsMappedResult(L) ? ExtendsFromMappedResult(L, R, T, F, options) :\n        IsMappedKey(L) ? CloneType(ExtendsFromMappedKey(L, R, T, F, options)) :\n            CloneType(ExtendsResolve(L, R, T, F), options));\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Extends } from './extends.mjs';\n// prettier-ignore\nfunction FromProperties(P, Right, True, False, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Extends(P[K2], Right, True, False, options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(Left, Right, True, False, options) {\n    return FromProperties(Left.properties, Right, True, False, options);\n}\n// prettier-ignore\nexport function ExtendsFromMappedResult(Left, Right, True, False, options) {\n    const P = FromMappedResult(Left, Right, True, False, options);\n    return MappedResult(P);\n}\n", "export * from './clone.mjs';\n", "// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsDate, IsStandardObject, IsTypedArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Clonable\n// ------------------------------------------------------------------\nfunction ObjectType(value) {\n    const Acc = {};\n    for (const key of Object.getOwnPropertyNames(value)) {\n        Acc[key] = Clone(value[key]);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n        Acc[key] = Clone(value[key]);\n    }\n    return Acc;\n}\nfunction ArrayType(value) {\n    return value.map((element) => Clone(element));\n}\nfunction TypedArrayType(value) {\n    return value.slice();\n}\nfunction DateType(value) {\n    return new Date(value.toISOString());\n}\nfunction ValueType(value) {\n    return value;\n}\n// ------------------------------------------------------------------\n// Clone\n// ------------------------------------------------------------------\n/** Returns a clone of the given value */\nexport function Clone(value) {\n    if (IsArray(value))\n        return ArrayType(value);\n    if (IsDate(value))\n        return DateType(value);\n    if (IsStandardObject(value))\n        return ObjectType(value);\n    if (IsTypedArray(value))\n        return TypedArrayType(value);\n    if (IsValueType(value))\n        return ValueType(value);\n    throw new Error('ValueClone: Unable to clone value');\n}\n", "export * from './clean.mjs';\n", "import { KeyOfPropertyKeys } from '../../type/keyof/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\n// prettier-ignore\nimport { IsString, IsObject, IsArray, IsUndefined } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\n// prettier-ignore\nimport { IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// IsCheckable\n// ------------------------------------------------------------------\nfunction IsCheckable(schema) {\n    return IsSchema(schema) && schema[Kind] !== 'Unsafe';\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    if (!IsArray(value))\n        return value;\n    return value.map((value) => Visit(schema.items, references, value));\n}\nfunction FromIntersect(schema, references, value) {\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    const intersections = schema.allOf.map((schema) => Visit(schema, references, Clone(value)));\n    const composite = intersections.reduce((acc, value) => (IsObject(value) ? { ...acc, ...value } : value), {});\n    if (!IsObject(value) || !IsObject(composite) || !IsSchema(unevaluatedProperties))\n        return composite;\n    const knownkeys = KeyOfPropertyKeys(schema);\n    for (const key of Object.getOwnPropertyNames(value)) {\n        if (knownkeys.includes(key))\n            continue;\n        if (Check(unevaluatedProperties, references, value[key])) {\n            composite[key] = Visit(unevaluatedProperties, references, value[key]);\n        }\n    }\n    return composite;\n}\nfunction FromObject(schema, references, value) {\n    if (!IsObject(value) || IsArray(value))\n        return value; // Check IsArray for AllowArrayObject configuration\n    const additionalProperties = schema.additionalProperties;\n    for (const key of Object.getOwnPropertyNames(value)) {\n        if (key in schema.properties) {\n            value[key] = Visit(schema.properties[key], references, value[key]);\n            continue;\n        }\n        if (IsSchema(additionalProperties) && Check(additionalProperties, references, value[key])) {\n            value[key] = Visit(additionalProperties, references, value[key]);\n            continue;\n        }\n        delete value[key];\n    }\n    return value;\n}\nfunction FromRecord(schema, references, value) {\n    if (!IsObject(value))\n        return value;\n    const additionalProperties = schema.additionalProperties;\n    const propertyKeys = Object.getOwnPropertyNames(value);\n    const [propertyKey, propertySchema] = Object.entries(schema.patternProperties)[0];\n    const propertyKeyTest = new RegExp(propertyKey);\n    for (const key of propertyKeys) {\n        if (propertyKeyTest.test(key)) {\n            value[key] = Visit(propertySchema, references, value[key]);\n            continue;\n        }\n        if (IsSchema(additionalProperties) && Check(additionalProperties, references, value[key])) {\n            value[key] = Visit(additionalProperties, references, value[key]);\n            continue;\n        }\n        delete value[key];\n    }\n    return value;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    if (!IsArray(value))\n        return value;\n    if (IsUndefined(schema.items))\n        return [];\n    const length = Math.min(value.length, schema.items.length);\n    for (let i = 0; i < length; i++) {\n        value[i] = Visit(schema.items[i], references, value[i]);\n    }\n    // prettier-ignore\n    return value.length > length\n        ? value.slice(0, length)\n        : value;\n}\nfunction FromUnion(schema, references, value) {\n    for (const inner of schema.anyOf) {\n        if (IsCheckable(inner) && Check(inner, references, value)) {\n            return Visit(inner, references, value);\n        }\n    }\n    return value;\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        default:\n            return value;\n    }\n}\n/** `[Mutable]` Removes excess properties from a value and returns the result. This function does not check the value and returns an unknown type. You should Check the result before use. Clean is a mutable operation. To avoid mutation, Clone the value first. */\nexport function Clean(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "export * from './convert.mjs';\n", "import { Clone } from '../clone/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsObject, IsDate, IsUndefined, IsString, IsNumber, IsBoolean, IsBigInt, IsSymbol, HasPropertyKey } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Conversions\n// ------------------------------------------------------------------\nfunction IsStringNumeric(value) {\n    return IsString(value) && !isNaN(value) && !isNaN(parseFloat(value));\n}\nfunction IsValueToString(value) {\n    return IsBigInt(value) || IsBoolean(value) || IsNumber(value);\n}\nfunction IsValueTrue(value) {\n    return value === true || (IsNumber(value) && value === 1) || (IsBigInt(value) && value === BigInt('1')) || (IsString(value) && (value.toLowerCase() === 'true' || value === '1'));\n}\nfunction IsValueFalse(value) {\n    return value === false || (IsNumber(value) && (value === 0 || Object.is(value, -0))) || (IsBigInt(value) && value === BigInt('0')) || (IsString(value) && (value.toLowerCase() === 'false' || value === '0' || value === '-0'));\n}\nfunction IsTimeStringWithTimeZone(value) {\n    return IsString(value) && /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i.test(value);\n}\nfunction IsTimeStringWithoutTimeZone(value) {\n    return IsString(value) && /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)?$/i.test(value);\n}\nfunction IsDateTimeStringWithTimeZone(value) {\n    return IsString(value) && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\dt(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i.test(value);\n}\nfunction IsDateTimeStringWithoutTimeZone(value) {\n    return IsString(value) && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\dt(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)?$/i.test(value);\n}\nfunction IsDateString(value) {\n    return IsString(value) && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/i.test(value);\n}\n// ------------------------------------------------------------------\n// Convert\n// ------------------------------------------------------------------\nfunction TryConvertLiteralString(value, target) {\n    const conversion = TryConvertString(value);\n    return conversion === target ? conversion : value;\n}\nfunction TryConvertLiteralNumber(value, target) {\n    const conversion = TryConvertNumber(value);\n    return conversion === target ? conversion : value;\n}\nfunction TryConvertLiteralBoolean(value, target) {\n    const conversion = TryConvertBoolean(value);\n    return conversion === target ? conversion : value;\n}\n// prettier-ignore\nfunction TryConvertLiteral(schema, value) {\n    return (IsString(schema.const) ? TryConvertLiteralString(value, schema.const) :\n        IsNumber(schema.const) ? TryConvertLiteralNumber(value, schema.const) :\n            IsBoolean(schema.const) ? TryConvertLiteralBoolean(value, schema.const) :\n                Clone(value));\n}\nfunction TryConvertBoolean(value) {\n    return IsValueTrue(value) ? true : IsValueFalse(value) ? false : value;\n}\nfunction TryConvertBigInt(value) {\n    return IsStringNumeric(value) ? BigInt(parseInt(value)) : IsNumber(value) ? BigInt(value | 0) : IsValueFalse(value) ? BigInt(0) : IsValueTrue(value) ? BigInt(1) : value;\n}\nfunction TryConvertString(value) {\n    return IsValueToString(value) ? value.toString() : IsSymbol(value) && value.description !== undefined ? value.description.toString() : value;\n}\nfunction TryConvertNumber(value) {\n    return IsStringNumeric(value) ? parseFloat(value) : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;\n}\nfunction TryConvertInteger(value) {\n    return IsStringNumeric(value) ? parseInt(value) : IsNumber(value) ? value | 0 : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;\n}\nfunction TryConvertNull(value) {\n    return IsString(value) && value.toLowerCase() === 'null' ? null : value;\n}\nfunction TryConvertUndefined(value) {\n    return IsString(value) && value === 'undefined' ? undefined : value;\n}\n// ------------------------------------------------------------------\n// note: this function may return an invalid dates for the regex\n// tests above. Invalid dates will however be checked during the\n// casting function and will return a epoch date if invalid.\n// Consider better string parsing for the iso dates in future\n// revisions.\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction TryConvertDate(value) {\n    return (IsDate(value) ? value :\n        IsNumber(value) ? new Date(value) :\n            IsValueTrue(value) ? new Date(1) :\n                IsValueFalse(value) ? new Date(0) :\n                    IsStringNumeric(value) ? new Date(parseInt(value)) :\n                        IsTimeStringWithoutTimeZone(value) ? new Date(`1970-01-01T${value}.000Z`) :\n                            IsTimeStringWithTimeZone(value) ? new Date(`1970-01-01T${value}`) :\n                                IsDateTimeStringWithoutTimeZone(value) ? new Date(`${value}.000Z`) :\n                                    IsDateTimeStringWithTimeZone(value) ? new Date(value) :\n                                        IsDateString(value) ? new Date(`${value}T00:00:00.000Z`) :\n                                            value);\n}\n// ------------------------------------------------------------------\n// Default\n// ------------------------------------------------------------------\nfunction Default(value) {\n    return value;\n}\n// ------------------------------------------------------------------\n// Convert\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    const elements = IsArray(value) ? value : [value];\n    return elements.map((element) => Visit(schema.items, references, element));\n}\nfunction FromBigInt(schema, references, value) {\n    return TryConvertBigInt(value);\n}\nfunction FromBoolean(schema, references, value) {\n    return TryConvertBoolean(value);\n}\nfunction FromDate(schema, references, value) {\n    return TryConvertDate(value);\n}\nfunction FromInteger(schema, references, value) {\n    return TryConvertInteger(value);\n}\nfunction FromIntersect(schema, references, value) {\n    return schema.allOf.reduce((value, schema) => Visit(schema, references, value), value);\n}\nfunction FromLiteral(schema, references, value) {\n    return TryConvertLiteral(schema, value);\n}\nfunction FromNull(schema, references, value) {\n    return TryConvertNull(value);\n}\nfunction FromNumber(schema, references, value) {\n    return TryConvertNumber(value);\n}\n// prettier-ignore\nfunction FromObject(schema, references, value) {\n    const isConvertable = IsObject(value);\n    if (!isConvertable)\n        return value;\n    const result = {};\n    for (const key of Object.keys(value)) {\n        result[key] = HasPropertyKey(schema.properties, key)\n            ? Visit(schema.properties[key], references, value[key])\n            : value[key];\n    }\n    return result;\n}\nfunction FromRecord(schema, references, value) {\n    const propertyKey = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const property = schema.patternProperties[propertyKey];\n    const result = {};\n    for (const [propKey, propValue] of Object.entries(value)) {\n        result[propKey] = Visit(property, references, propValue);\n    }\n    return result;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromString(schema, references, value) {\n    return TryConvertString(value);\n}\nfunction FromSymbol(schema, references, value) {\n    return IsString(value) || IsNumber(value) ? Symbol(value) : value;\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\n// prettier-ignore\nfunction FromTuple(schema, references, value) {\n    const isConvertable = IsArray(value) && !IsUndefined(schema.items);\n    if (!isConvertable)\n        return value;\n    return value.map((value, index) => {\n        return (index < schema.items.length)\n            ? Visit(schema.items[index], references, value)\n            : value;\n    });\n}\nfunction FromUndefined(schema, references, value) {\n    return TryConvertUndefined(value);\n}\nfunction FromUnion(schema, references, value) {\n    for (const subschema of schema.anyOf) {\n        const converted = Visit(subschema, references, value);\n        if (!Check(subschema, references, converted))\n            continue;\n        return converted;\n    }\n    return value;\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'BigInt':\n            return FromBigInt(schema_, references_, value);\n        case 'Boolean':\n            return FromBoolean(schema_, references_, value);\n        case 'Date':\n            return FromDate(schema_, references_, value);\n        case 'Integer':\n            return FromInteger(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Literal':\n            return FromLiteral(schema_, references_, value);\n        case 'Null':\n            return FromNull(schema_, references_, value);\n        case 'Number':\n            return FromNumber(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'String':\n            return FromString(schema_, references_, value);\n        case 'Symbol':\n            return FromSymbol(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Undefined':\n            return FromUndefined(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        default:\n            return Default(value);\n    }\n}\n/** Converts any type mismatched values to their target type if a reasonable conversion is possible. */\n// prettier-ignore\nexport function Convert(...args) {\n    return args.length === 3\n        ? Visit(args[0], args[1], args[2])\n        : Visit(args[0], [], args[1]);\n}\n", "export * from './default.mjs';\n", "import { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsString, IsObject, IsArray, IsUndefined } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// ValueOrDefault\n// ------------------------------------------------------------------\nfunction ValueOrDefault(schema, value) {\n    return value === undefined && 'default' in schema ? Clone(schema.default) : value;\n}\n// ------------------------------------------------------------------\n// IsCheckable\n// ------------------------------------------------------------------\nfunction IsCheckable(schema) {\n    return IsSchema(schema) && schema[Kind] !== 'Unsafe';\n}\n// ------------------------------------------------------------------\n// IsDefaultSchema\n// ------------------------------------------------------------------\nfunction IsDefaultSchema(value) {\n    return IsSchema(value) && 'default' in value;\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsArray(defaulted))\n        return defaulted;\n    for (let i = 0; i < defaulted.length; i++) {\n        defaulted[i] = Visit(schema.items, references, defaulted[i]);\n    }\n    return defaulted;\n}\nfunction FromIntersect(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    return schema.allOf.reduce((acc, schema) => {\n        const next = Visit(schema, references, defaulted);\n        return IsObject(next) ? { ...acc, ...next } : next;\n    }, {});\n}\nfunction FromObject(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsObject(defaulted))\n        return defaulted;\n    const additionalPropertiesSchema = schema.additionalProperties;\n    const knownPropertyKeys = Object.getOwnPropertyNames(schema.properties);\n    // properties\n    for (const key of knownPropertyKeys) {\n        if (!IsDefaultSchema(schema.properties[key]))\n            continue;\n        defaulted[key] = Visit(schema.properties[key], references, defaulted[key]);\n    }\n    // return if not additional properties\n    if (!IsDefaultSchema(additionalPropertiesSchema))\n        return defaulted;\n    // additional properties\n    for (const key of Object.getOwnPropertyNames(defaulted)) {\n        if (knownPropertyKeys.includes(key))\n            continue;\n        defaulted[key] = Visit(additionalPropertiesSchema, references, defaulted[key]);\n    }\n    return defaulted;\n}\nfunction FromRecord(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsObject(defaulted))\n        return defaulted;\n    const additionalPropertiesSchema = schema.additionalProperties;\n    const [propertyKeyPattern, propertySchema] = Object.entries(schema.patternProperties)[0];\n    const knownPropertyKey = new RegExp(propertyKeyPattern);\n    // properties\n    for (const key of Object.getOwnPropertyNames(defaulted)) {\n        if (!(knownPropertyKey.test(key) && IsDefaultSchema(propertySchema)))\n            continue;\n        defaulted[key] = Visit(propertySchema, references, defaulted[key]);\n    }\n    // return if not additional properties\n    if (!IsDefaultSchema(additionalPropertiesSchema))\n        return defaulted;\n    // additional properties\n    for (const key of Object.getOwnPropertyNames(defaulted)) {\n        if (knownPropertyKey.test(key))\n            continue;\n        defaulted[key] = Visit(additionalPropertiesSchema, references, defaulted[key]);\n    }\n    return defaulted;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, ValueOrDefault(schema, value));\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsArray(defaulted) || IsUndefined(schema.items))\n        return defaulted;\n    const [items, max] = [schema.items, Math.max(schema.items.length, defaulted.length)];\n    for (let i = 0; i < max; i++) {\n        if (i < items.length)\n            defaulted[i] = Visit(items[i], references, defaulted[i]);\n    }\n    return defaulted;\n}\nfunction FromUnion(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    for (const inner of schema.anyOf) {\n        const result = Visit(inner, references, defaulted);\n        if (IsCheckable(inner) && Check(inner, result)) {\n            return result;\n        }\n    }\n    return defaulted;\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        default:\n            return ValueOrDefault(schema_, value);\n    }\n}\n/** `[Mutable]` Generates missing properties on a value using default schema annotations if available. This function does not check the value and returns an unknown type. You should Check the result before use. Default is a mutable operation. To avoid mutation, Clone the value first. */\nexport function Default(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "export * from './delta.mjs';\n", "import { IsStandardObject, IsArray, IsTypedArray, IsValueType, IsSymbol, IsUndefined } from '../guard/index.mjs';\nimport { ValuePointer } from '../pointer/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { Literal } from '../../type/literal/index.mjs';\nimport { Object } from '../../type/object/index.mjs';\nimport { String } from '../../type/string/index.mjs';\nimport { Unknown } from '../../type/unknown/index.mjs';\nimport { Union } from '../../type/union/index.mjs';\nexport const Insert = Object({\n    type: Literal('insert'),\n    path: String(),\n    value: Unknown(),\n});\nexport const Update = Object({\n    type: Literal('update'),\n    path: String(),\n    value: Unknown(),\n});\nexport const Delete = Object({\n    type: Literal('delete'),\n    path: String(),\n});\nexport const Edit = Union([Insert, Update, Delete]);\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueDeltaError extends TypeBoxError {\n    constructor(value, message) {\n        super(message);\n        this.value = value;\n    }\n}\nexport class ValueDeltaSymbolError extends ValueDeltaError {\n    constructor(value) {\n        super(value, 'Cannot diff objects with symbol keys');\n        this.value = value;\n    }\n}\n// ------------------------------------------------------------------\n// Command Factory\n// ------------------------------------------------------------------\nfunction CreateUpdate(path, value) {\n    return { type: 'update', path, value };\n}\nfunction CreateInsert(path, value) {\n    return { type: 'insert', path, value };\n}\nfunction CreateDelete(path) {\n    return { type: 'delete', path };\n}\n// ------------------------------------------------------------------\n// Diffing Generators\n// ------------------------------------------------------------------\nfunction* ObjectType(path, current, next) {\n    if (!IsStandardObject(next))\n        return yield CreateUpdate(path, next);\n    const currentKeys = [...globalThis.Object.keys(current), ...globalThis.Object.getOwnPropertySymbols(current)];\n    const nextKeys = [...globalThis.Object.keys(next), ...globalThis.Object.getOwnPropertySymbols(next)];\n    for (const key of currentKeys) {\n        if (IsSymbol(key))\n            throw new ValueDeltaSymbolError(key);\n        if (IsUndefined(next[key]) && nextKeys.includes(key))\n            yield CreateUpdate(`${path}/${globalThis.String(key)}`, undefined);\n    }\n    for (const key of nextKeys) {\n        if (IsUndefined(current[key]) || IsUndefined(next[key]))\n            continue;\n        if (IsSymbol(key))\n            throw new ValueDeltaSymbolError(key);\n        yield* Visit(`${path}/${globalThis.String(key)}`, current[key], next[key]);\n    }\n    for (const key of nextKeys) {\n        if (IsSymbol(key))\n            throw new ValueDeltaSymbolError(key);\n        if (IsUndefined(current[key]))\n            yield CreateInsert(`${path}/${globalThis.String(key)}`, next[key]);\n    }\n    for (const key of currentKeys.reverse()) {\n        if (IsSymbol(key))\n            throw new ValueDeltaSymbolError(key);\n        if (IsUndefined(next[key]) && !nextKeys.includes(key))\n            yield CreateDelete(`${path}/${globalThis.String(key)}`);\n    }\n}\nfunction* ArrayType(path, current, next) {\n    if (!IsArray(next))\n        return yield CreateUpdate(path, next);\n    for (let i = 0; i < Math.min(current.length, next.length); i++) {\n        yield* Visit(`${path}/${i}`, current[i], next[i]);\n    }\n    for (let i = 0; i < next.length; i++) {\n        if (i < current.length)\n            continue;\n        yield CreateInsert(`${path}/${i}`, next[i]);\n    }\n    for (let i = current.length - 1; i >= 0; i--) {\n        if (i < next.length)\n            continue;\n        yield CreateDelete(`${path}/${i}`);\n    }\n}\nfunction* TypedArrayType(path, current, next) {\n    if (!IsTypedArray(next) || current.length !== next.length || globalThis.Object.getPrototypeOf(current).constructor.name !== globalThis.Object.getPrototypeOf(next).constructor.name)\n        return yield CreateUpdate(path, next);\n    for (let i = 0; i < Math.min(current.length, next.length); i++) {\n        yield* Visit(`${path}/${i}`, current[i], next[i]);\n    }\n}\nfunction* ValueType(path, current, next) {\n    if (current === next)\n        return;\n    yield CreateUpdate(path, next);\n}\nfunction* Visit(path, current, next) {\n    if (IsStandardObject(current))\n        return yield* ObjectType(path, current, next);\n    if (IsArray(current))\n        return yield* ArrayType(path, current, next);\n    if (IsTypedArray(current))\n        return yield* TypedArrayType(path, current, next);\n    if (IsValueType(current))\n        return yield* ValueType(path, current, next);\n    throw new ValueDeltaError(current, 'Unable to create diff edits for unknown value');\n}\n// ------------------------------------------------------------------\n// Diff\n// ------------------------------------------------------------------\nexport function Diff(current, next) {\n    return [...Visit('', current, next)];\n}\n// ------------------------------------------------------------------\n// Patch\n// ------------------------------------------------------------------\nfunction IsRootUpdate(edits) {\n    return edits.length > 0 && edits[0].path === '' && edits[0].type === 'update';\n}\nfunction IsIdentity(edits) {\n    return edits.length === 0;\n}\nexport function Patch(current, edits) {\n    if (IsRootUpdate(edits)) {\n        return Clone(edits[0].value);\n    }\n    if (IsIdentity(edits)) {\n        return Clone(current);\n    }\n    const clone = Clone(current);\n    for (const edit of edits) {\n        switch (edit.type) {\n            case 'insert': {\n                ValuePointer.Set(clone, edit.path, edit.value);\n                break;\n            }\n            case 'update': {\n                ValuePointer.Set(clone, edit.path, edit.value);\n                break;\n            }\n            case 'delete': {\n                ValuePointer.Delete(clone, edit.path);\n                break;\n            }\n        }\n    }\n    return clone;\n}\n", "export * as ValuePointer from './pointer.mjs';\n", "import { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValuePointerRootSetError extends TypeBoxError {\n    constructor(value, path, update) {\n        super('Cannot set root value');\n        this.value = value;\n        this.path = path;\n        this.update = update;\n    }\n}\nexport class ValuePointerRootDeleteError extends TypeBoxError {\n    constructor(value, path) {\n        super('Cannot delete root value');\n        this.value = value;\n        this.path = path;\n    }\n}\n// ------------------------------------------------------------------\n// ValuePointer\n// ------------------------------------------------------------------\n/** Provides functionality to update values through RFC6901 string pointers */\n// prettier-ignore\nfunction Escape(component) {\n    return component.indexOf('~') === -1 ? component : component.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n/** Formats the given pointer into navigable key components */\n// prettier-ignore\nexport function* Format(pointer) {\n    if (pointer === '')\n        return;\n    let [start, end] = [0, 0];\n    for (let i = 0; i < pointer.length; i++) {\n        const char = pointer.charAt(i);\n        if (char === '/') {\n            if (i === 0) {\n                start = i + 1;\n            }\n            else {\n                end = i;\n                yield Escape(pointer.slice(start, end));\n                start = i + 1;\n            }\n        }\n        else {\n            end = i;\n        }\n    }\n    yield Escape(pointer.slice(start));\n}\n/** Sets the value at the given pointer. If the value at the pointer does not exist it is created */\n// prettier-ignore\nexport function Set(value, pointer, update) {\n    if (pointer === '')\n        throw new ValuePointerRootSetError(value, pointer, update);\n    let [owner, next, key] = [null, value, ''];\n    for (const component of Format(pointer)) {\n        if (next[component] === undefined)\n            next[component] = {};\n        owner = next;\n        next = next[component];\n        key = component;\n    }\n    owner[key] = update;\n}\n/** Deletes a value at the given pointer */\n// prettier-ignore\nexport function Delete(value, pointer) {\n    if (pointer === '')\n        throw new ValuePointerRootDeleteError(value, pointer);\n    let [owner, next, key] = [null, value, ''];\n    for (const component of Format(pointer)) {\n        if (next[component] === undefined || next[component] === null)\n            return;\n        owner = next;\n        next = next[component];\n        key = component;\n    }\n    if (Array.isArray(owner)) {\n        const index = parseInt(key);\n        owner.splice(index, 1);\n    }\n    else {\n        delete owner[key];\n    }\n}\n/** Returns true if a value exists at the given pointer */\n// prettier-ignore\nexport function Has(value, pointer) {\n    if (pointer === '')\n        return true;\n    let [owner, next, key] = [null, value, ''];\n    for (const component of Format(pointer)) {\n        if (next[component] === undefined)\n            return false;\n        owner = next;\n        next = next[component];\n        key = component;\n    }\n    return Object.getOwnPropertyNames(owner).includes(key);\n}\n/** Gets the value at the given pointer */\n// prettier-ignore\nexport function Get(value, pointer) {\n    if (pointer === '')\n        return value;\n    let current = value;\n    for (const component of Format(pointer)) {\n        if (current[component] === undefined)\n            return undefined;\n        current = current[component];\n    }\n    return current;\n}\n", "export * from './equal.mjs';\n", "import { IsStandardObject, IsDate, IsArray, IsTypedArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Equality Checks\n// ------------------------------------------------------------------\nfunction ObjectType(left, right) {\n    if (!IsStandardObject(right))\n        return false;\n    const leftKeys = [...Object.keys(left), ...Object.getOwnPropertySymbols(left)];\n    const rightKeys = [...Object.keys(right), ...Object.getOwnPropertySymbols(right)];\n    if (leftKeys.length !== rightKeys.length)\n        return false;\n    return leftKeys.every((key) => Equal(left[key], right[key]));\n}\nfunction DateType(left, right) {\n    return IsDate(right) && left.getTime() === right.getTime();\n}\nfunction ArrayType(left, right) {\n    if (!IsArray(right) || left.length !== right.length)\n        return false;\n    return left.every((value, index) => Equal(value, right[index]));\n}\nfunction TypedArrayType(left, right) {\n    if (!IsTypedArray(right) || left.length !== right.length || Object.getPrototypeOf(left).constructor.name !== Object.getPrototypeOf(right).constructor.name)\n        return false;\n    return left.every((value, index) => Equal(value, right[index]));\n}\nfunction ValueType(left, right) {\n    return left === right;\n}\n// ------------------------------------------------------------------\n// Equal\n// ------------------------------------------------------------------\n/** Returns true if the left value deep-equals the right */\nexport function Equal(left, right) {\n    if (IsStandardObject(left))\n        return ObjectType(left, right);\n    if (IsDate(left))\n        return DateType(left, right);\n    if (IsTypedArray(left))\n        return TypedArrayType(left, right);\n    if (IsArray(left))\n        return ArrayType(left, right);\n    if (IsValueType(left))\n        return ValueType(left, right);\n    throw new Error('ValueEquals: Unable to compare value');\n}\n", "export * from './mutate.mjs';\n", "import { IsStandardObject, IsArray, IsTypedArray, IsValueType } from '../guard/index.mjs';\nimport { ValuePointer } from '../pointer/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueMutateError extends TypeBoxError {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction ObjectType(root, path, current, next) {\n    if (!IsStandardObject(current)) {\n        ValuePointer.Set(root, path, Clone(next));\n    }\n    else {\n        const currentKeys = Object.getOwnPropertyNames(current);\n        const nextKeys = Object.getOwnPropertyNames(next);\n        for (const currentKey of currentKeys) {\n            if (!nextKeys.includes(currentKey)) {\n                delete current[currentKey];\n            }\n        }\n        for (const nextKey of nextKeys) {\n            if (!currentKeys.includes(nextKey)) {\n                current[nextKey] = null;\n            }\n        }\n        for (const nextKey of nextKeys) {\n            Visit(root, `${path}/${nextKey}`, current[nextKey], next[nextKey]);\n        }\n    }\n}\nfunction ArrayType(root, path, current, next) {\n    if (!IsArray(current)) {\n        ValuePointer.Set(root, path, Clone(next));\n    }\n    else {\n        for (let index = 0; index < next.length; index++) {\n            Visit(root, `${path}/${index}`, current[index], next[index]);\n        }\n        current.splice(next.length);\n    }\n}\nfunction TypedArrayType(root, path, current, next) {\n    if (IsTypedArray(current) && current.length === next.length) {\n        for (let i = 0; i < current.length; i++) {\n            current[i] = next[i];\n        }\n    }\n    else {\n        ValuePointer.Set(root, path, Clone(next));\n    }\n}\nfunction ValueType(root, path, current, next) {\n    if (current === next)\n        return;\n    ValuePointer.Set(root, path, next);\n}\nfunction Visit(root, path, current, next) {\n    if (IsArray(next))\n        return ArrayType(root, path, current, next);\n    if (IsTypedArray(next))\n        return TypedArrayType(root, path, current, next);\n    if (IsStandardObject(next))\n        return ObjectType(root, path, current, next);\n    if (IsValueType(next))\n        return ValueType(root, path, current, next);\n}\n// ------------------------------------------------------------------\n// IsNonMutableValue\n// ------------------------------------------------------------------\nfunction IsNonMutableValue(value) {\n    return IsTypedArray(value) || IsValueType(value);\n}\nfunction IsMismatchedValue(current, next) {\n    // prettier-ignore\n    return ((IsStandardObject(current) && IsArray(next)) ||\n        (IsArray(current) && IsStandardObject(next)));\n}\n// ------------------------------------------------------------------\n// Mutate\n// ------------------------------------------------------------------\n/** `[Mutable]` Performs a deep mutable value assignment while retaining internal references */\nexport function Mutate(current, next) {\n    if (IsNonMutableValue(current) || IsNonMutableValue(next))\n        throw new ValueMutateError('Only object and array types can be mutated at the root level');\n    if (IsMismatchedValue(current, next))\n        throw new ValueMutateError('Cannot assign due type mismatch of assignable values');\n    Visit(current, '', current, next);\n}\n", "export * from './decode.mjs';\nexport * from './encode.mjs';\nexport * from './has.mjs';\n", "import { Kind, TransformKind } from '../../type/symbols/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { KeyOfPropertyKeys, KeyOfPropertyEntries } from '../../type/keyof/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Check } from '../check/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsStandardObject, IsArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\n// thrown externally\n// prettier-ignore\nexport class TransformDecodeCheckError extends TypeBoxError {\n    constructor(schema, value, error) {\n        super(`Unable to decode value as it does not match the expected schema`);\n        this.schema = schema;\n        this.value = value;\n        this.error = error;\n    }\n}\n// prettier-ignore\nexport class TransformDecodeError extends TypeBoxError {\n    constructor(schema, path, value, error) {\n        super(error instanceof Error ? error.message : 'Unknown error');\n        this.schema = schema;\n        this.path = path;\n        this.value = value;\n        this.error = error;\n    }\n}\n// ------------------------------------------------------------------\n// Decode\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Default(schema, path, value) {\n    try {\n        return IsTransform(schema) ? schema[TransformKind].Decode(value) : value;\n    }\n    catch (error) {\n        throw new TransformDecodeError(schema, path, value, error);\n    }\n}\n// prettier-ignore\nfunction FromArray(schema, references, path, value) {\n    return (IsArray(value))\n        ? Default(schema, path, value.map((value, index) => Visit(schema.items, references, `${path}/${index}`, value)))\n        : Default(schema, path, value);\n}\n// prettier-ignore\nfunction FromIntersect(schema, references, path, value) {\n    if (!IsStandardObject(value) || IsValueType(value))\n        return Default(schema, path, value);\n    const knownEntries = KeyOfPropertyEntries(schema);\n    const knownKeys = knownEntries.map(entry => entry[0]);\n    const knownProperties = { ...value };\n    for (const [knownKey, knownSchema] of knownEntries)\n        if (knownKey in knownProperties) {\n            knownProperties[knownKey] = Visit(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);\n        }\n    if (!IsTransform(schema.unevaluatedProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    const unknownProperties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            unknownProperties[key] = Default(unevaluatedProperties, `${path}/${key}`, unknownProperties[key]);\n        }\n    return Default(schema, path, unknownProperties);\n}\nfunction FromNot(schema, references, path, value) {\n    return Default(schema, path, Visit(schema.not, references, path, value));\n}\n// prettier-ignore\nfunction FromObject(schema, references, path, value) {\n    if (!IsStandardObject(value))\n        return Default(schema, path, value);\n    const knownKeys = KeyOfPropertyKeys(schema);\n    const knownProperties = { ...value };\n    for (const key of knownKeys)\n        if (key in knownProperties) {\n            knownProperties[key] = Visit(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);\n        }\n    if (!IsSchema(schema.additionalProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const unknownProperties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            unknownProperties[key] = Default(additionalProperties, `${path}/${key}`, unknownProperties[key]);\n        }\n    return Default(schema, path, unknownProperties);\n}\n// prettier-ignore\nfunction FromRecord(schema, references, path, value) {\n    if (!IsStandardObject(value))\n        return Default(schema, path, value);\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const knownKeys = new RegExp(pattern);\n    const knownProperties = { ...value };\n    for (const key of Object.getOwnPropertyNames(value))\n        if (knownKeys.test(key)) {\n            knownProperties[key] = Visit(schema.patternProperties[pattern], references, `${path}/${key}`, knownProperties[key]);\n        }\n    if (!IsSchema(schema.additionalProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const unknownProperties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.test(key)) {\n            unknownProperties[key] = Default(additionalProperties, `${path}/${key}`, unknownProperties[key]);\n        }\n    return Default(schema, path, unknownProperties);\n}\n// prettier-ignore\nfunction FromRef(schema, references, path, value) {\n    const target = Deref(schema, references);\n    return Default(schema, path, Visit(target, references, path, value));\n}\n// prettier-ignore\nfunction FromThis(schema, references, path, value) {\n    const target = Deref(schema, references);\n    return Default(schema, path, Visit(target, references, path, value));\n}\n// prettier-ignore\nfunction FromTuple(schema, references, path, value) {\n    return (IsArray(value) && IsArray(schema.items))\n        ? Default(schema, path, schema.items.map((schema, index) => Visit(schema, references, `${path}/${index}`, value[index])))\n        : Default(schema, path, value);\n}\n// prettier-ignore\nfunction FromUnion(schema, references, path, value) {\n    for (const subschema of schema.anyOf) {\n        if (!Check(subschema, references, value))\n            continue;\n        // note: ensure interior is decoded first\n        const decoded = Visit(subschema, references, path, value);\n        return Default(schema, path, decoded);\n    }\n    return Default(schema, path, value);\n}\n// prettier-ignore\nfunction Visit(schema, references, path, value) {\n    const references_ = typeof schema.$id === 'string' ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, path, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, path, value);\n        case 'Not':\n            return FromNot(schema_, references_, path, value);\n        case 'Object':\n            return FromObject(schema_, references_, path, value);\n        case 'Record':\n            return FromRecord(schema_, references_, path, value);\n        case 'Ref':\n            return FromRef(schema_, references_, path, value);\n        case 'Symbol':\n            return Default(schema_, path, value);\n        case 'This':\n            return FromThis(schema_, references_, path, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, path, value);\n        case 'Union':\n            return FromUnion(schema_, references_, path, value);\n        default:\n            return Default(schema_, path, value);\n    }\n}\n/**\n * `[Internal]` Decodes the value and returns the result. This function requires that\n * the caller `Check` the value before use. Passing unchecked values may result in\n * undefined behavior. Refer to the `Value.Decode()` for implementation details.\n */\nexport function TransformDecode(schema, references, value) {\n    return Visit(schema, references, '', value);\n}\n", "import { Kind, TransformKind } from '../../type/symbols/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { KeyOfPropertyKeys, KeyOfPropertyEntries } from '../../type/keyof/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Check } from '../check/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsStandardObject, IsArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\n// prettier-ignore\nexport class TransformEncodeCheckError extends TypeBoxError {\n    constructor(schema, value, error) {\n        super(`The encoded value does not match the expected schema`);\n        this.schema = schema;\n        this.value = value;\n        this.error = error;\n    }\n}\n// prettier-ignore\nexport class TransformEncodeError extends TypeBoxError {\n    constructor(schema, path, value, error) {\n        super(`${error instanceof Error ? error.message : 'Unknown error'}`);\n        this.schema = schema;\n        this.path = path;\n        this.value = value;\n        this.error = error;\n    }\n}\n// ------------------------------------------------------------------\n// Encode\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Default(schema, path, value) {\n    try {\n        return IsTransform(schema) ? schema[TransformKind].Encode(value) : value;\n    }\n    catch (error) {\n        throw new TransformEncodeError(schema, path, value, error);\n    }\n}\n// prettier-ignore\nfunction FromArray(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    return IsArray(defaulted)\n        ? defaulted.map((value, index) => Visit(schema.items, references, `${path}/${index}`, value))\n        : defaulted;\n}\n// prettier-ignore\nfunction FromIntersect(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    if (!IsStandardObject(value) || IsValueType(value))\n        return defaulted;\n    const knownEntries = KeyOfPropertyEntries(schema);\n    const knownKeys = knownEntries.map(entry => entry[0]);\n    const knownProperties = { ...defaulted };\n    for (const [knownKey, knownSchema] of knownEntries)\n        if (knownKey in knownProperties) {\n            knownProperties[knownKey] = Visit(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);\n        }\n    if (!IsTransform(schema.unevaluatedProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    const properties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            properties[key] = Default(unevaluatedProperties, `${path}/${key}`, properties[key]);\n        }\n    return properties;\n}\n// prettier-ignore\nfunction FromNot(schema, references, path, value) {\n    return Default(schema.not, path, Default(schema, path, value));\n}\n// prettier-ignore\nfunction FromObject(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    if (!IsStandardObject(defaulted))\n        return defaulted;\n    const knownKeys = KeyOfPropertyKeys(schema);\n    const knownProperties = { ...defaulted };\n    for (const key of knownKeys)\n        if (key in knownProperties) {\n            knownProperties[key] = Visit(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);\n        }\n    if (!IsSchema(schema.additionalProperties)) {\n        return knownProperties;\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const properties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            properties[key] = Default(additionalProperties, `${path}/${key}`, properties[key]);\n        }\n    return properties;\n}\n// prettier-ignore\nfunction FromRecord(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    if (!IsStandardObject(value))\n        return defaulted;\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const knownKeys = new RegExp(pattern);\n    const knownProperties = { ...defaulted };\n    for (const key of Object.getOwnPropertyNames(value))\n        if (knownKeys.test(key)) {\n            knownProperties[key] = Visit(schema.patternProperties[pattern], references, `${path}/${key}`, knownProperties[key]);\n        }\n    if (!IsSchema(schema.additionalProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const properties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.test(key)) {\n            properties[key] = Default(additionalProperties, `${path}/${key}`, properties[key]);\n        }\n    return properties;\n}\n// prettier-ignore\nfunction FromRef(schema, references, path, value) {\n    const target = Deref(schema, references);\n    const resolved = Visit(target, references, path, value);\n    return Default(schema, path, resolved);\n}\n// prettier-ignore\nfunction FromThis(schema, references, path, value) {\n    const target = Deref(schema, references);\n    const resolved = Visit(target, references, path, value);\n    return Default(schema, path, resolved);\n}\n// prettier-ignore\nfunction FromTuple(schema, references, path, value) {\n    const value1 = Default(schema, path, value);\n    return IsArray(schema.items) ? schema.items.map((schema, index) => Visit(schema, references, `${path}/${index}`, value1[index])) : [];\n}\n// prettier-ignore\nfunction FromUnion(schema, references, path, value) {\n    // test value against union variants\n    for (const subschema of schema.anyOf) {\n        if (!Check(subschema, references, value))\n            continue;\n        const value1 = Visit(subschema, references, path, value);\n        return Default(schema, path, value1);\n    }\n    // test transformed value against union variants\n    for (const subschema of schema.anyOf) {\n        const value1 = Visit(subschema, references, path, value);\n        if (!Check(schema, references, value1))\n            continue;\n        return Default(schema, path, value1);\n    }\n    return Default(schema, path, value);\n}\n// prettier-ignore\nfunction Visit(schema, references, path, value) {\n    const references_ = typeof schema.$id === 'string' ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, path, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, path, value);\n        case 'Not':\n            return FromNot(schema_, references_, path, value);\n        case 'Object':\n            return FromObject(schema_, references_, path, value);\n        case 'Record':\n            return FromRecord(schema_, references_, path, value);\n        case 'Ref':\n            return FromRef(schema_, references_, path, value);\n        case 'This':\n            return FromThis(schema_, references_, path, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, path, value);\n        case 'Union':\n            return FromUnion(schema_, references_, path, value);\n        default:\n            return Default(schema_, path, value);\n    }\n}\n/**\n * `[Internal]` Encodes the value and returns the result. This function expects the\n * caller to pass a statically checked value. This function does not check the encoded\n * result, meaning the result should be passed to `Check` before use. Refer to the\n * `Value.Encode()` function for implementation details.\n */\nexport function TransformEncode(schema, references, value) {\n    return Visit(schema, references, '', value);\n}\n", "import { Deref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema } from '../../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsString, IsUndefined } from '../guard/index.mjs';\n// prettier-ignore\nfunction FromArray(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromAsyncIterator(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromConstructor(schema, references) {\n    return IsTransform(schema) || Visit(schema.returns, references) || schema.parameters.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromFunction(schema, references) {\n    return IsTransform(schema) || Visit(schema.returns, references) || schema.parameters.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromIntersect(schema, references) {\n    return IsTransform(schema) || IsTransform(schema.unevaluatedProperties) || schema.allOf.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromIterator(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromNot(schema, references) {\n    return IsTransform(schema) || Visit(schema.not, references);\n}\n// prettier-ignore\nfunction FromObject(schema, references) {\n    return (IsTransform(schema) ||\n        Object.values(schema.properties).some((schema) => Visit(schema, references)) ||\n        (IsSchema(schema.additionalProperties) && Visit(schema.additionalProperties, references)));\n}\n// prettier-ignore\nfunction FromPromise(schema, references) {\n    return IsTransform(schema) || Visit(schema.item, references);\n}\n// prettier-ignore\nfunction FromRecord(schema, references) {\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const property = schema.patternProperties[pattern];\n    return IsTransform(schema) || Visit(property, references) || (IsSchema(schema.additionalProperties) && IsTransform(schema.additionalProperties));\n}\n// prettier-ignore\nfunction FromRef(schema, references) {\n    if (IsTransform(schema))\n        return true;\n    return Visit(Deref(schema, references), references);\n}\n// prettier-ignore\nfunction FromThis(schema, references) {\n    if (IsTransform(schema))\n        return true;\n    return Visit(Deref(schema, references), references);\n}\n// prettier-ignore\nfunction FromTuple(schema, references) {\n    return IsTransform(schema) || (!IsUndefined(schema.items) && schema.items.some((schema) => Visit(schema, references)));\n}\n// prettier-ignore\nfunction FromUnion(schema, references) {\n    return IsTransform(schema) || schema.anyOf.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction Visit(schema, references) {\n    const references_ = IsString(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    if (schema.$id && visited.has(schema.$id))\n        return false;\n    if (schema.$id)\n        visited.add(schema.$id);\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_);\n        case 'Constructor':\n            return FromConstructor(schema_, references_);\n        case 'Function':\n            return FromFunction(schema_, references_);\n        case 'Intersect':\n            return FromIntersect(schema_, references_);\n        case 'Iterator':\n            return FromIterator(schema_, references_);\n        case 'Not':\n            return FromNot(schema_, references_);\n        case 'Object':\n            return FromObject(schema_, references_);\n        case 'Promise':\n            return FromPromise(schema_, references_);\n        case 'Record':\n            return FromRecord(schema_, references_);\n        case 'Ref':\n            return FromRef(schema_, references_);\n        case 'This':\n            return FromThis(schema_, references_);\n        case 'Tuple':\n            return FromTuple(schema_, references_);\n        case 'Union':\n            return FromUnion(schema_, references_);\n        default:\n            return IsTransform(schema);\n    }\n}\nconst visited = new Set();\n/** Returns true if this schema contains a transform codec */\nexport function HasTransform(schema, references) {\n    visited.clear();\n    return Visit(schema, references);\n}\n", "export * as Value from './value.mjs';\n", "import { HasTransform, TransformDecode, TransformEncode, TransformDecodeCheckError, TransformEncodeCheckError } from '../transform/index.mjs';\nimport { Mutate as MutateValue } from '../mutate/index.mjs';\nimport { Hash as HashValue } from '../hash/index.mjs';\nimport { Equal as EqualValue } from '../equal/index.mjs';\nimport { Cast as CastValue } from '../cast/index.mjs';\nimport { Clone as CloneValue } from '../clone/index.mjs';\nimport { Convert as ConvertValue } from '../convert/index.mjs';\nimport { Create as CreateValue } from '../create/index.mjs';\nimport { Clean as CleanValue } from '../clean/index.mjs';\nimport { Check as CheckValue } from '../check/index.mjs';\nimport { Default as DefaultValue } from '../default/index.mjs';\nimport { Diff as DiffValue, Patch as PatchValue } from '../delta/index.mjs';\nimport { Errors as ValueErrors } from '../../errors/index.mjs';\n/** Casts a value into a given type. The return value will retain as much information of the original value as possible. */\nexport function Cast(...args) {\n    return CastValue.apply(CastValue, args);\n}\n/** Creates a value from the given type */\nexport function Create(...args) {\n    return CreateValue.apply(CreateValue, args);\n}\n/** Returns true if the value matches the given type */\nexport function Check(...args) {\n    return CheckValue.apply(CheckValue, args);\n}\n/** `[Mutable]` Removes excess properties from a value and returns the result. This function does not check the value and returns an unknown type. You should Check the result before use. Clean is a mutable operation. To avoid mutation, Clone the value first. */\nexport function Clean(...args) {\n    return CleanValue.apply(CleanValue, args);\n}\n/** Converts any type mismatched values to their target type if a reasonable conversion is possible. */\nexport function Convert(...args) {\n    return ConvertValue.apply(ConvertValue, args);\n}\n/** Returns a structural clone of the given value */\nexport function Clone(value) {\n    return CloneValue(value);\n}\n/** Decodes a value or throws if error */\nexport function Decode(...args) {\n    const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];\n    if (!Check(schema, references, value))\n        throw new TransformDecodeCheckError(schema, value, Errors(schema, references, value).First());\n    return HasTransform(schema, references) ? TransformDecode(schema, references, value) : value;\n}\n/** `[Mutable]` Generates missing properties on a value using default schema annotations if available. This function does not check the value and returns an unknown type. You should Check the result before use. Default is a mutable operation. To avoid mutation, Clone the value first. */\nexport function Default(...args) {\n    return DefaultValue.apply(DefaultValue, args);\n}\n/** Encodes a value or throws if error */\nexport function Encode(...args) {\n    const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];\n    const encoded = HasTransform(schema, references) ? TransformEncode(schema, references, value) : value;\n    if (!Check(schema, references, encoded))\n        throw new TransformEncodeCheckError(schema, encoded, Errors(schema, references, encoded).First());\n    return encoded;\n}\n/** Returns an iterator for each error in this value. */\nexport function Errors(...args) {\n    return ValueErrors.apply(ValueErrors, args);\n}\n/** Returns true if left and right values are structurally equal */\nexport function Equal(left, right) {\n    return EqualValue(left, right);\n}\n/** Returns edits to transform the current value into the next value */\nexport function Diff(current, next) {\n    return DiffValue(current, next);\n}\n/** Returns a FNV1A-64 non cryptographic hash of the given value */\nexport function Hash(value) {\n    return HashValue(value);\n}\n/** Returns a new value with edits applied to the given value */\nexport function Patch(current, edits) {\n    return PatchValue(current, edits);\n}\n/** `[Mutable]` Performs a deep mutable value assignment while retaining internal references. */\nexport function Mutate(current, next) {\n    MutateValue(current, next);\n}\n", "// ------------------------------------------------------------------\n// Infrastructure\n// ------------------------------------------------------------------\nexport * from './type/clone/index.mjs';\nexport * from './type/error/index.mjs';\nexport * from './type/guard/index.mjs';\nexport * from './type/helpers/index.mjs';\nexport * from './type/patterns/index.mjs';\nexport * from './type/registry/index.mjs';\nexport * from './type/sets/index.mjs';\nexport * from './type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nexport * from './type/any/index.mjs';\nexport * from './type/array/index.mjs';\nexport * from './type/async-iterator/index.mjs';\nexport * from './type/awaited/index.mjs';\nexport * from './type/bigint/index.mjs';\nexport * from './type/boolean/index.mjs';\nexport * from './type/composite/index.mjs';\nexport * from './type/const/index.mjs';\nexport * from './type/constructor/index.mjs';\nexport * from './type/constructor-parameters/index.mjs';\nexport * from './type/date/index.mjs';\nexport * from './type/deref/index.mjs';\nexport * from './type/enum/index.mjs';\nexport * from './type/exclude/index.mjs';\nexport * from './type/extends/index.mjs';\nexport * from './type/extract/index.mjs';\nexport * from './type/function/index.mjs';\nexport * from './type/indexed/index.mjs';\nexport * from './type/instance-type/index.mjs';\nexport * from './type/integer/index.mjs';\nexport * from './type/intersect/index.mjs';\nexport * from './type/iterator/index.mjs';\nexport * from './type/intrinsic/index.mjs';\nexport * from './type/keyof/index.mjs';\nexport * from './type/literal/index.mjs';\nexport * from './type/mapped/index.mjs';\nexport * from './type/never/index.mjs';\nexport * from './type/not/index.mjs';\nexport * from './type/null/index.mjs';\nexport * from './type/number/index.mjs';\nexport * from './type/object/index.mjs';\nexport * from './type/omit/index.mjs';\nexport * from './type/optional/index.mjs';\nexport * from './type/parameters/index.mjs';\nexport * from './type/partial/index.mjs';\nexport * from './type/pick/index.mjs';\nexport * from './type/promise/index.mjs';\nexport * from './type/readonly/index.mjs';\nexport * from './type/readonly-optional/index.mjs';\nexport * from './type/record/index.mjs';\nexport * from './type/recursive/index.mjs';\nexport * from './type/ref/index.mjs';\nexport * from './type/regexp/index.mjs';\nexport * from './type/required/index.mjs';\nexport * from './type/rest/index.mjs';\nexport * from './type/return-type/index.mjs';\nexport * from './type/schema/index.mjs';\nexport * from './type/static/index.mjs';\nexport * from './type/strict/index.mjs';\nexport * from './type/string/index.mjs';\nexport * from './type/symbol/index.mjs';\nexport * from './type/template-literal/index.mjs';\nexport * from './type/transform/index.mjs';\nexport * from './type/tuple/index.mjs';\nexport * from './type/uint8array/index.mjs';\nexport * from './type/undefined/index.mjs';\nexport * from './type/union/index.mjs';\nexport * from './type/unknown/index.mjs';\nexport * from './type/unsafe/index.mjs';\nexport * from './type/void/index.mjs';\n// ------------------------------------------------------------------\n// Namespace\n// ------------------------------------------------------------------\nexport * from './type/type/index.mjs';\n", "export * from './type.mjs';\nexport * from './value.mjs';\n", "export * from './helpers.mjs';\n", "/** Increments the given string value + 1 */\nexport function Increment(T) {\n    return (parseInt(T) + 1).toString();\n}\n", "export * from './awaited.mjs';\n", "import { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsPromise } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T) {\n    return T.map(L => AwaitedResolve(L));\n}\n// prettier-ignore\nfunction FromIntersect(T) {\n    return Intersect(FromRest(T));\n}\n// prettier-ignore\nfunction FromUnion(T) {\n    return Union(FromRest(T));\n}\n// prettier-ignore\nfunction FromPromise(T) {\n    return AwaitedResolve(T);\n}\n// ----------------------------------------------------------------\n// AwaitedResolve\n// ----------------------------------------------------------------\n// prettier-ignore\nfunction AwaitedResolve(T) {\n    return (IsIntersect(T) ? FromIntersect(T.allOf) :\n        IsUnion(T) ? FromUnion(T.anyOf) :\n            IsPromise(T) ? FromPromise(T.item) :\n                T);\n}\n/** `[JavaScript]` Constructs a type by recursively unwrapping Promise types */\nexport function Awaited(T, options = {}) {\n    return CloneType(AwaitedResolve(T), options);\n}\n", "export * from './composite.mjs';\n", "import { IntersectEvaluated } from '../intersect/index.mjs';\nimport { IndexFromPropertyKeys } from '../indexed/index.mjs';\nimport { KeyOfPropertyKeys } from '../keyof/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { SetDistinct } from '../sets/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsNever } from '../guard/kind.mjs';\n// prettier-ignore\nfunction CompositeKeys(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...KeyOfPropertyKeys(L));\n    return SetDistinct(Acc);\n}\n// prettier-ignore\nfunction FilterNever(T) {\n    return T.filter(L => !IsNever(L));\n}\n// prettier-ignore\nfunction CompositeProperty(T, K) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...IndexFromPropertyKeys(L, [K]));\n    return FilterNever(Acc);\n}\n// prettier-ignore\nfunction CompositeProperties(T, K) {\n    const Acc = {};\n    for (const L of K) {\n        Acc[L] = IntersectEvaluated(CompositeProperty(T, L));\n    }\n    return Acc;\n}\n// prettier-ignore\nexport function Composite(T, options = {}) {\n    const K = CompositeKeys(T);\n    const P = CompositeProperties(T, K);\n    const R = Object(P, options);\n    return R;\n}\n", "export * from './const.mjs';\n", "import { Any } from '../any/index.mjs';\nimport { BigInt } from '../bigint/index.mjs';\nimport { Date } from '../date/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Null } from '../null/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Symbol } from '../symbol/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { Undefined } from '../undefined/index.mjs';\nimport { Uint8Array } from '../uint8array/index.mjs';\nimport { Unknown } from '../unknown/index.mjs';\nimport { CloneType } from '../clone/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsNumber, IsBigInt, IsUint8Array, IsDate, IsIterator, IsObject, IsAsyncIterator, IsFunction, IsUndefined, IsNull, IsSymbol, IsBoolean, IsString } from '../guard/value.mjs';\n// prettier-ignore\nfunction FromArray(T) {\n    return T.map(L => FromValue(L, false));\n}\n// prettier-ignore\nfunction FromProperties(value) {\n    const Acc = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(value))\n        Acc[K] = Readonly(FromValue(value[K], false));\n    return Acc;\n}\nfunction ConditionalReadonly(T, root) {\n    return (root === true ? T : Readonly(T));\n}\n// prettier-ignore\nfunction FromValue(value, root) {\n    return (IsAsyncIterator(value) ? ConditionalReadonly(Any(), root) :\n        IsIterator(value) ? ConditionalReadonly(Any(), root) :\n            IsArray(value) ? Readonly(Tuple(FromArray(value))) :\n                IsUint8Array(value) ? Uint8Array() :\n                    IsDate(value) ? Date() :\n                        IsObject(value) ? ConditionalReadonly(Object(FromProperties(value)), root) :\n                            IsFunction(value) ? ConditionalReadonly(FunctionType([], Unknown()), root) :\n                                IsUndefined(value) ? Undefined() :\n                                    IsNull(value) ? Null() :\n                                        IsSymbol(value) ? Symbol() :\n                                            IsBigInt(value) ? BigInt() :\n                                                IsNumber(value) ? Literal(value) :\n                                                    IsBoolean(value) ? Literal(value) :\n                                                        IsString(value) ? Literal(value) :\n                                                            Object({}));\n}\n/** `[JavaScript]` Creates a readonly const type from the given value. */\nexport function Const(T, options = {}) {\n    return CloneType(FromValue(T, true), options);\n}\n", "export * from './date.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Date type */\nexport function Date(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Date',\n        type: 'Date',\n    };\n}\n", "export * from './null.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Null type */\nexport function Null(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Null',\n        type: 'null',\n    };\n}\n", "export * from './symbol.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Symbol type */\nexport function Symbol(options) {\n    return { ...options, [Kind]: 'Symbol', type: 'symbol' };\n}\n", "export * from './undefined.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Undefined type */\nexport function Undefined(options = {}) {\n    return { ...options, [Kind]: 'Undefined', type: 'undefined' };\n}\n", "export * from './uint8array.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Uint8Array type */\nexport function Uint8Array(options = {}) {\n    return { ...options, [Kind]: 'Uint8Array', type: 'Uint8Array' };\n}\n", "export * from './constructor-parameters.mjs';\n", "import { Tuple } from '../tuple/index.mjs';\nimport { CloneRest } from '../clone/type.mjs';\n/** `[JavaScript]` Extracts the ConstructorParameters from the given Constructor type */\nexport function ConstructorParameters(schema, options = {}) {\n    return Tuple(CloneRest(schema.parameters), { ...options });\n}\n", "export * from './deref.mjs';\n", "import { CloneType, CloneRest } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { IsUndefined } from '../guard/value.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsConstructor, IsFunction, IsIntersect, IsUnion, IsTuple, IsArray, IsObject, IsPromise, IsAsyncIterator, IsIterator, IsRef } from '../guard/kind.mjs';\nfunction FromRest(schema, references) {\n    return schema.map((schema) => Deref(schema, references));\n}\n// prettier-ignore\nfunction FromProperties(properties, references) {\n    const Acc = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(properties)) {\n        Acc[K] = Deref(properties[K], references);\n    }\n    return Acc;\n}\n// prettier-ignore\nfunction FromConstructor(schema, references) {\n    schema.parameters = FromRest(schema.parameters, references);\n    schema.returns = Deref(schema.returns, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromFunction(schema, references) {\n    schema.parameters = FromRest(schema.parameters, references);\n    schema.returns = Deref(schema.returns, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromIntersect(schema, references) {\n    schema.allOf = FromRest(schema.allOf, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromUnion(schema, references) {\n    schema.anyOf = FromRest(schema.anyOf, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromTuple(schema, references) {\n    if (IsUndefined(schema.items))\n        return schema;\n    schema.items = FromRest(schema.items, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromArray(schema, references) {\n    schema.items = Deref(schema.items, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromObject(schema, references) {\n    schema.properties = FromProperties(schema.properties, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromPromise(schema, references) {\n    schema.item = Deref(schema.item, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromAsyncIterator(schema, references) {\n    schema.items = Deref(schema.items, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromIterator(schema, references) {\n    schema.items = Deref(schema.items, references);\n    return schema;\n}\n// prettier-ignore\nfunction FromRef(schema, references) {\n    const target = references.find(remote => remote.$id === schema.$ref);\n    if (target === undefined)\n        throw Error(`Unable to dereference schema with $id ${schema.$ref}`);\n    const discard = Discard(target, ['$id']);\n    return Deref(discard, references);\n}\n// prettier-ignore\nfunction DerefResolve(schema, references) {\n    return (IsConstructor(schema) ? FromConstructor(schema, references) :\n        IsFunction(schema) ? FromFunction(schema, references) :\n            IsIntersect(schema) ? FromIntersect(schema, references) :\n                IsUnion(schema) ? FromUnion(schema, references) :\n                    IsTuple(schema) ? FromTuple(schema, references) :\n                        IsArray(schema) ? FromArray(schema, references) :\n                            IsObject(schema) ? FromObject(schema, references) :\n                                IsPromise(schema) ? FromPromise(schema, references) :\n                                    IsAsyncIterator(schema) ? FromAsyncIterator(schema, references) :\n                                        IsIterator(schema) ? FromIterator(schema, references) :\n                                            IsRef(schema) ? FromRef(schema, references) :\n                                                schema);\n}\n// ------------------------------------------------------------------\n// TDeref\n// ------------------------------------------------------------------\n/** `[Json]` Creates a dereferenced type */\nexport function Deref(schema, references) {\n    return DerefResolve(CloneType(schema), CloneRest(references));\n}\n", "export * from './enum.mjs';\n", "import { Literal } from '../literal/index.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\nimport { Union } from '../union/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsUndefined } from '../guard/value.mjs';\n/** `[Json]` Creates a Enum type */\nexport function Enum(item, options = {}) {\n    if (IsUndefined(item))\n        throw new Error('Enum undefined or empty');\n    const values1 = globalThis.Object.getOwnPropertyNames(item)\n        .filter((key) => isNaN(key))\n        .map((key) => item[key]);\n    const values2 = [...new Set(values1)];\n    const anyOf = values2.map((value) => Literal(value));\n    return Union(anyOf, { ...options, [Hint]: 'Enum' });\n}\n", "export * from './exclude-from-mapped-result.mjs';\nexport * from './exclude-from-template-literal.mjs';\nexport * from './exclude.mjs';\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Exclude } from './exclude.mjs';\n// prettier-ignore\nfunction FromProperties(P, U) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Exclude(P[K2], U);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, T) {\n    return FromProperties(R.properties, T);\n}\n// prettier-ignore\nexport function ExcludeFromMappedResult(R, T) {\n    const P = FromMappedResult(R, T);\n    return MappedResult(P);\n}\n", "import { Union } from '../union/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { ExtendsCheck, ExtendsResult } from '../extends/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { ExcludeFromMappedResult } from './exclude-from-mapped-result.mjs';\nimport { ExcludeFromTemplateLiteral } from './exclude-from-template-literal.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsTemplateLiteral, IsUnion } from '../guard/kind.mjs';\nfunction ExcludeRest(L, R) {\n    const excluded = L.filter((inner) => ExtendsCheck(inner, R) === ExtendsResult.False);\n    return excluded.length === 1 ? excluded[0] : Union(excluded);\n}\n/** `[Json]` Constructs a type by excluding from unionType all union members that are assignable to excludedMembers */\nexport function Exclude(L, R, options = {}) {\n    // overloads\n    if (IsTemplateLiteral(L))\n        return CloneType(ExcludeFromTemplateLiteral(L, R), options);\n    if (IsMappedResult(L))\n        return CloneType(ExcludeFromMappedResult(L, R), options);\n    // prettier-ignore\n    return CloneType(IsUnion(L) ? ExcludeRest(L.anyOf, R) :\n        ExtendsCheck(L, R) !== ExtendsResult.False ? Never() : L, options);\n}\n", "import { Exclude } from './exclude.mjs';\nimport { TemplateLiteralToUnion } from '../template-literal/index.mjs';\nexport function ExcludeFromTemplateLiteral(L, R) {\n    return Exclude(TemplateLiteralToUnion(L), R);\n}\n", "export * from './extract-from-mapped-result.mjs';\nexport * from './extract-from-template-literal.mjs';\nexport * from './extract.mjs';\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Extract } from './extract.mjs';\n// prettier-ignore\nfunction FromProperties(P, T) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Extract(P[K2], T);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, T) {\n    return FromProperties(R.properties, T);\n}\n// prettier-ignore\nexport function ExtractFromMappedResult(R, T) {\n    const P = FromMappedResult(R, T);\n    return MappedResult(P);\n}\n", "import { Union } from '../union/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { ExtendsCheck, ExtendsResult } from '../extends/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { ExtractFromMappedResult } from './extract-from-mapped-result.mjs';\nimport { ExtractFromTemplateLiteral } from './extract-from-template-literal.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsTemplateLiteral, IsUnion } from '../guard/kind.mjs';\nfunction ExtractRest(L, R) {\n    const extracted = L.filter((inner) => ExtendsCheck(inner, R) !== ExtendsResult.False);\n    return extracted.length === 1 ? extracted[0] : Union(extracted);\n}\n/** `[Json]` Constructs a type by extracting from type all union members that are assignable to union */\nexport function Extract(L, R, options = {}) {\n    // overloads\n    if (IsTemplateLiteral(L))\n        return CloneType(ExtractFromTemplateLiteral(L, R), options);\n    if (IsMappedResult(L))\n        return CloneType(ExtractFromMappedResult(L, R), options);\n    // prettier-ignore\n    return CloneType(IsUnion(L) ? ExtractRest(L.anyOf, R) :\n        ExtendsCheck(L, R) !== ExtendsResult.False ? L : Never(), options);\n}\n", "import { Extract } from './extract.mjs';\nimport { TemplateLiteralToUnion } from '../template-literal/index.mjs';\nexport function ExtractFromTemplateLiteral(L, R) {\n    return Extract(TemplateLiteralToUnion(L), R);\n}\n", "export * from './instance-type.mjs';\n", "import { CloneType } from '../clone/type.mjs';\n/** `[JavaScript]` Extracts the InstanceType from the given Constructor type */\nexport function InstanceType(schema, options = {}) {\n    return CloneType(schema.returns, options);\n}\n", "export * from './integer.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Integer type */\nexport function Integer(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Integer',\n        type: 'integer',\n    };\n}\n", "export * from './capitalize.mjs';\nexport * from './intrinsic-from-mapped-key.mjs';\nexport * from './intrinsic.mjs';\nexport * from './lowercase.mjs';\nexport * from './uncapitalize.mjs';\nexport * from './uppercase.mjs';\n", "import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Capitalize LiteralString types */\nexport function Capitalize(T, options = {}) {\n    return Intrinsic(T, 'Capitalize', options);\n}\n", "import { TemplateLiteral, TemplateLiteralParseExact, IsTemplateLiteralExpressionFinite, TemplateLiteralExpressionGenerate } from '../template-literal/index.mjs';\nimport { IntrinsicFromMappedKey } from './intrinsic-from-mapped-key.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Union } from '../union/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsTemplateLiteral, IsUnion, IsLiteral } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// Apply\n// ------------------------------------------------------------------\nfunction ApplyUncapitalize(value) {\n    const [first, rest] = [value.slice(0, 1), value.slice(1)];\n    return [first.toLowerCase(), rest].join('');\n}\nfunction ApplyCapitalize(value) {\n    const [first, rest] = [value.slice(0, 1), value.slice(1)];\n    return [first.toUpperCase(), rest].join('');\n}\nfunction ApplyUppercase(value) {\n    return value.toUpperCase();\n}\nfunction ApplyLowercase(value) {\n    return value.toLowerCase();\n}\nfunction FromTemplateLiteral(schema, mode, options) {\n    // note: template literals require special runtime handling as they are encoded in string patterns.\n    // This diverges from the mapped type which would otherwise map on the template literal kind.\n    const expression = TemplateLiteralParseExact(schema.pattern);\n    const finite = IsTemplateLiteralExpressionFinite(expression);\n    if (!finite)\n        return { ...schema, pattern: FromLiteralValue(schema.pattern, mode) };\n    const strings = [...TemplateLiteralExpressionGenerate(expression)];\n    const literals = strings.map((value) => Literal(value));\n    const mapped = FromRest(literals, mode);\n    const union = Union(mapped);\n    return TemplateLiteral([union], options);\n}\n// prettier-ignore\nfunction FromLiteralValue(value, mode) {\n    return (typeof value === 'string' ? (mode === 'Uncapitalize' ? ApplyUncapitalize(value) :\n        mode === 'Capitalize' ? ApplyCapitalize(value) :\n            mode === 'Uppercase' ? ApplyUppercase(value) :\n                mode === 'Lowercase' ? ApplyLowercase(value) :\n                    value) : value.toString());\n}\n// prettier-ignore\nfunction FromRest(T, M) {\n    return T.map(L => Intrinsic(L, M));\n}\n/** Applies an intrinsic string manipulation to the given type. */\nexport function Intrinsic(schema, mode, options = {}) {\n    // prettier-ignore\n    return (\n    // Intrinsic-Mapped-Inference\n    IsMappedKey(schema) ? IntrinsicFromMappedKey(schema, mode, options) :\n        // Standard-Inference\n        IsTemplateLiteral(schema) ? FromTemplateLiteral(schema, mode, schema) :\n            IsUnion(schema) ? Union(FromRest(schema.anyOf, mode), options) :\n                IsLiteral(schema) ? Literal(FromLiteralValue(schema.const, mode), options) :\n                    schema);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Intrinsic } from './intrinsic.mjs';\nimport { Literal } from '../literal/index.mjs';\n// prettier-ignore\nfunction MappedIntrinsicPropertyKey(K, M, options) {\n    return {\n        [K]: Intrinsic(Literal(K), M, options)\n    };\n}\n// prettier-ignore\nfunction MappedIntrinsicPropertyKeys(K, M, options) {\n    return K.reduce((Acc, L) => {\n        return { ...Acc, ...MappedIntrinsicPropertyKey(L, M, options) };\n    }, {});\n}\n// prettier-ignore\nfunction MappedIntrinsicProperties(T, M, options) {\n    return MappedIntrinsicPropertyKeys(T['keys'], M, options);\n}\n// prettier-ignore\nexport function IntrinsicFromMappedKey(T, M, options) {\n    const P = MappedIntrinsicProperties(T, M, options);\n    return MappedResult(P);\n}\n", "import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Lowercase LiteralString types */\nexport function Lowercase(T, options = {}) {\n    return Intrinsic(T, 'Lowercase', options);\n}\n", "import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Uncapitalize LiteralString types */\nexport function Uncapitalize(T, options = {}) {\n    return Intrinsic(T, 'Uncapitalize', options);\n}\n", "import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Uppercase LiteralString types */\nexport function Uppercase(T, options = {}) {\n    return Intrinsic(T, 'Uppercase', options);\n}\n", "export * from './not.mjs';\n", "import { CloneType } from '../clone/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Not type */\nexport function Not(schema, options) {\n    return {\n        ...options,\n        [Kind]: 'Not',\n        not: CloneType(schema),\n    };\n}\n", "export * from './omit-from-mapped-key.mjs';\nexport * from './omit-from-mapped-result.mjs';\nexport * from './omit.mjs';\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Omit } from './omit.mjs';\n// prettier-ignore\nfunction FromPropertyKey(T, K, options) {\n    return {\n        [K]: Omit(T, [K], options)\n    };\n}\n// prettier-ignore\nfunction FromPropertyKeys(T, K, options) {\n    return K.reduce((Acc, LK) => {\n        return { ...Acc, ...FromPropertyKey(T, LK, options) };\n    }, {});\n}\n// prettier-ignore\nfunction FromMappedKey(T, K, options) {\n    return FromPropertyKeys(T, K.keys, options);\n}\n// prettier-ignore\nexport function OmitFromMappedKey(T, K, options) {\n    const P = FromMappedKey(T, K, options);\n    return MappedResult(P);\n}\n", "import { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { OmitFromMappedKey } from './omit-from-mapped-key.mjs';\nimport { OmitFromMappedResult } from './omit-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsIntersect, IsUnion, IsObject, IsSchema, IsMappedResult } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromIntersect(T, K) {\n    return T.map((T) => OmitResolve(T, K));\n}\n// prettier-ignore\nfunction FromUnion(T, K) {\n    return T.map((T) => OmitResolve(T, K));\n}\n// ------------------------------------------------------------------\n// FromProperty\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromProperty(T, K) {\n    const { [K]: _, ...R } = T;\n    return R;\n}\n// prettier-ignore\nfunction FromProperties(T, K) {\n    return K.reduce((T, K2) => FromProperty(T, K2), T);\n}\n// ------------------------------------------------------------------\n// OmitResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction OmitResolve(T, K) {\n    return (IsIntersect(T) ? Intersect(FromIntersect(T.allOf, K)) :\n        IsUnion(T) ? Union(FromUnion(T.anyOf, K)) :\n            IsObject(T) ? Object(FromProperties(T.properties, K)) :\n                Object({}));\n}\nexport function Omit(T, K, options = {}) {\n    // mapped\n    if (IsMappedKey(K))\n        return OmitFromMappedKey(T, K, options);\n    if (IsMappedResult(T))\n        return OmitFromMappedResult(T, K, options);\n    // non-mapped\n    const I = IsSchema(K) ? IndexPropertyKeys(K) : K;\n    const D = Discard(T, [TransformKind, '$id', 'required']);\n    const R = CloneType(OmitResolve(T, I), options);\n    return { ...D, ...R };\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Omit } from './omit.mjs';\n// prettier-ignore\nfunction FromProperties(P, K, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Omit(P[K2], K, options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, K, options) {\n    return FromProperties(R.properties, K, options);\n}\n// prettier-ignore\nexport function OmitFromMappedResult(R, K, options) {\n    const P = FromMappedResult(R, K, options);\n    return MappedResult(P);\n}\n", "export * from './parameters.mjs';\n", "import { Tuple } from '../tuple/index.mjs';\nimport { CloneRest } from '../clone/type.mjs';\n/** `[JavaScript]` Extracts the Parameters from the given Function type */\nexport function Parameters(schema, options = {}) {\n    return Tuple(CloneRest(schema.parameters), { ...options });\n}\n", "export * from './partial-from-mapped-result.mjs';\nexport * from './partial.mjs';\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Partial } from './partial.mjs';\n// prettier-ignore\nfunction FromProperties(K, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(K))\n        Acc[K2] = Partial(K[K2], options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, options) {\n    return FromProperties(R.properties, options);\n}\n// prettier-ignore\nexport function PartialFromMappedResult(R, options) {\n    const P = FromMappedResult(R, options);\n    return MappedResult(P);\n}\n", "import { Optional } from '../optional/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { PartialFromMappedResult } from './partial-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsIntersect, IsUnion, IsObject } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T) {\n    return T.map(L => PartialResolve(L));\n}\n// prettier-ignore\nfunction FromProperties(T) {\n    const Acc = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(T))\n        Acc[K] = Optional(T[K]);\n    return Acc;\n}\n// ------------------------------------------------------------------\n// PartialResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction PartialResolve(T) {\n    return (IsIntersect(T) ? Intersect(FromRest(T.allOf)) :\n        IsUnion(T) ? Union(FromRest(T.anyOf)) :\n            IsObject(T) ? Object(FromProperties(T.properties)) :\n                Object({}));\n}\n/** `[Json]` Constructs a type where all properties are optional */\nexport function Partial(T, options = {}) {\n    if (IsMappedResult(T))\n        return PartialFromMappedResult(T, options);\n    const D = Discard(T, [TransformKind, '$id', 'required']);\n    const R = CloneType(PartialResolve(T), options);\n    return { ...D, ...R };\n}\n", "export * from './pick-from-mapped-key.mjs';\nexport * from './pick-from-mapped-result.mjs';\nexport * from './pick.mjs';\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Pick } from './pick.mjs';\n// prettier-ignore\nfunction FromPropertyKey(T, K, options) {\n    return {\n        [K]: Pick(T, [K], options)\n    };\n}\n// prettier-ignore\nfunction FromPropertyKeys(T, K, options) {\n    return K.reduce((Acc, LK) => {\n        return { ...Acc, ...FromPropertyKey(T, LK, options) };\n    }, {});\n}\n// prettier-ignore\nfunction FromMappedKey(T, K, options) {\n    return FromPropertyKeys(T, K.keys, options);\n}\n// prettier-ignore\nexport function PickFromMappedKey(T, K, options) {\n    const P = FromMappedKey(T, K, options);\n    return MappedResult(P);\n}\n", "import { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { PickFromMappedKey } from './pick-from-mapped-key.mjs';\nimport { PickFromMappedResult } from './pick-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsMappedResult, IsIntersect, IsUnion, IsObject, IsSchema } from '../guard/kind.mjs';\nfunction FromIntersect(T, K) {\n    return T.map((T) => PickResolve(T, K));\n}\n// prettier-ignore\nfunction FromUnion(T, K) {\n    return T.map((T) => PickResolve(T, K));\n}\n// prettier-ignore\nfunction FromProperties(T, K) {\n    const Acc = {};\n    for (const K2 of K)\n        if (K2 in T)\n            Acc[K2] = T[K2];\n    return Acc;\n}\n// ------------------------------------------------------------------\n// PickResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction PickResolve(T, K) {\n    return (IsIntersect(T) ? Intersect(FromIntersect(T.allOf, K)) :\n        IsUnion(T) ? Union(FromUnion(T.anyOf, K)) :\n            IsObject(T) ? Object(FromProperties(T.properties, K)) :\n                Object({}));\n}\nexport function Pick(T, K, options = {}) {\n    // mapped\n    if (IsMappedKey(K))\n        return PickFromMappedKey(T, K, options);\n    if (IsMappedResult(T))\n        return PickFromMappedResult(T, K, options);\n    // non-mapped\n    const I = IsSchema(K) ? IndexPropertyKeys(K) : K;\n    const D = Discard(T, [TransformKind, '$id', 'required']);\n    const R = CloneType(PickResolve(T, I), options);\n    return { ...D, ...R };\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Pick } from './pick.mjs';\n// prettier-ignore\nfunction FromProperties(P, K, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Pick(P[K2], K, options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, K, options) {\n    return FromProperties(R.properties, K, options);\n}\n// prettier-ignore\nexport function PickFromMappedResult(R, K, options) {\n    const P = FromMappedResult(R, K, options);\n    return MappedResult(P);\n}\n", "export * from './readonly-optional.mjs';\n", "import { Readonly } from '../readonly/index.mjs';\nimport { Optional } from '../optional/index.mjs';\n/** `[Json]` Creates a Readonly and Optional property */\nexport function ReadonlyOptional(schema) {\n    return Readonly(Optional(schema));\n}\n", "export * from './record.mjs';\n", "import { Object } from '../object/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { IsTemplateLiteralFinite } from '../template-literal/index.mjs';\nimport { PatternStringExact, PatternNumberExact } from '../patterns/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsUndefined } from '../guard/value.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsInteger, IsLiteral, IsNumber, IsString, IsRegExp, IsTemplateLiteral, IsUnion } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// RecordCreateFromPattern\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordCreateFromPattern(pattern, T, options) {\n    return {\n        ...options,\n        [Kind]: 'Record',\n        type: 'object',\n        patternProperties: { [pattern]: CloneType(T) }\n    };\n}\n// ------------------------------------------------------------------\n// RecordCreateFromKeys\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordCreateFromKeys(K, T, options) {\n    const Acc = {};\n    for (const K2 of K)\n        Acc[K2] = CloneType(T);\n    return Object(Acc, { ...options, [Hint]: 'Record' });\n}\n// prettier-ignore\nfunction FromTemplateLiteralKey(K, T, options) {\n    return (IsTemplateLiteralFinite(K)\n        ? RecordCreateFromKeys(IndexPropertyKeys(K), T, options)\n        : RecordCreateFromPattern(K.pattern, T, options));\n}\n// prettier-ignore\nfunction FromUnionKey(K, T, options) {\n    return RecordCreateFromKeys(IndexPropertyKeys(Union(K)), T, options);\n}\n// prettier-ignore\nfunction FromLiteralKey(K, T, options) {\n    return RecordCreateFromKeys([K.toString()], T, options);\n}\n// prettier-ignore\nfunction FromRegExpKey(K, T, options) {\n    return RecordCreateFromPattern(K.source, T, options);\n}\n// prettier-ignore\nfunction FromStringKey(K, T, options) {\n    const pattern = IsUndefined(K.pattern) ? PatternStringExact : K.pattern;\n    return RecordCreateFromPattern(pattern, T, options);\n}\n// prettier-ignore\nfunction FromIntegerKey(_, T, options) {\n    return RecordCreateFromPattern(PatternNumberExact, T, options);\n}\n// prettier-ignore\nfunction FromNumberKey(_, T, options) {\n    return RecordCreateFromPattern(PatternNumberExact, T, options);\n}\n// ------------------------------------------------------------------\n// TRecordOrObject\n// ------------------------------------------------------------------\n/** `[Json]` Creates a Record type */\nexport function Record(K, T, options = {}) {\n    // prettier-ignore\n    return (IsUnion(K) ? FromUnionKey(K.anyOf, T, options) :\n        IsTemplateLiteral(K) ? FromTemplateLiteralKey(K, T, options) :\n            IsLiteral(K) ? FromLiteralKey(K.const, T, options) :\n                IsInteger(K) ? FromIntegerKey(K, T, options) :\n                    IsNumber(K) ? FromNumberKey(K, T, options) :\n                        IsRegExp(K) ? FromRegExpKey(K, T, options) :\n                            IsString(K) ? FromStringKey(K, T, options) :\n                                Never(options));\n}\n", "export * from './recursive.mjs';\n", "import { CloneType } from '../clone/type.mjs';\nimport { IsUndefined } from '../guard/value.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\n// Auto Tracked For Recursive Types without ID's\nlet Ordinal = 0;\n/** `[Json]` Creates a Recursive type */\nexport function Recursive(callback, options = {}) {\n    if (IsUndefined(options.$id))\n        options.$id = `T${Ordinal++}`;\n    const thisType = callback({ [Kind]: 'This', $ref: `${options.$id}` });\n    thisType.$id = options.$id;\n    // prettier-ignore\n    return CloneType({ ...options, [Hint]: 'Recursive', ...thisType });\n}\n", "export * from './ref.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsString, IsUndefined } from '../guard/value.mjs';\n/** `[Json]` Creates a Ref type. */\nexport function Ref(unresolved, options = {}) {\n    if (IsString(unresolved))\n        return { ...options, [Kind]: 'Ref', $ref: unresolved };\n    if (IsUndefined(unresolved.$id))\n        throw new Error('Reference target type must specify an $id');\n    return {\n        ...options,\n        [Kind]: 'Ref',\n        $ref: unresolved.$id,\n    };\n}\n", "export * from './regexp.mjs';\n", "import { IsString } from '../guard/value.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a RegExp type */\nexport function RegExp(unresolved, options = {}) {\n    const expr = IsString(unresolved) ? new globalThis.RegExp(unresolved) : unresolved;\n    return { ...options, [Kind]: 'RegExp', type: 'RegExp', source: expr.source, flags: expr.flags };\n}\n", "export * from './required-from-mapped-result.mjs';\nexport * from './required.mjs';\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Required } from './required.mjs';\n// prettier-ignore\nfunction FromProperties(P, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Required(P[K2], options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, options) {\n    return FromProperties(R.properties, options);\n}\n// prettier-ignore\nexport function RequiredFromMappedResult(R, options) {\n    const P = FromMappedResult(R, options);\n    return MappedResult(P);\n}\n", "import { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { OptionalKind, TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { RequiredFromMappedResult } from './required-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsIntersect, IsUnion, IsObject } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(T) {\n    return T.map(L => RequiredResolve(L));\n}\n// prettier-ignore\nfunction FromProperties(T) {\n    const Acc = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(T))\n        Acc[K] = Discard(T[K], [OptionalKind]);\n    return Acc;\n}\n// ------------------------------------------------------------------\n// RequiredResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RequiredResolve(T) {\n    return (IsIntersect(T) ? Intersect(FromRest(T.allOf)) :\n        IsUnion(T) ? Union(FromRest(T.anyOf)) :\n            IsObject(T) ? Object(FromProperties(T.properties)) :\n                Object({}));\n}\n/** `[Json]` Constructs a type where all properties are required */\nexport function Required(T, options = {}) {\n    if (IsMappedResult(T)) {\n        return RequiredFromMappedResult(T, options);\n    }\n    else {\n        const D = Discard(T, [TransformKind, '$id', 'required']);\n        const R = CloneType(RequiredResolve(T), options);\n        return { ...D, ...R };\n    }\n}\n", "export * from './rest.mjs';\n", "import { CloneRest } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsTuple } from '../guard/kind.mjs';\n// prettier-ignore\nfunction RestResolve(T) {\n    return (IsIntersect(T) ? CloneRest(T.allOf) :\n        IsUnion(T) ? CloneRest(T.anyOf) :\n            IsTuple(T) ? CloneRest(T.items ?? []) :\n                []);\n}\n/** `[Json]` Extracts interior Rest elements from Tuple, Intersect and Union types */\nexport function Rest(T) {\n    return CloneRest(RestResolve(T));\n}\n", "export * from './return-type.mjs';\n", "import { CloneType } from '../clone/type.mjs';\n/** `[JavaScript]` Extracts the ReturnType from the given Function type */\nexport function ReturnType(schema, options = {}) {\n    return CloneType(schema.returns, options);\n}\n", "export * from './anyschema.mjs';\nexport * from './schema.mjs';\n", "export {};\n", "import { Kind, Hint, ReadonlyKind, OptionalKind } from '../symbols/index.mjs';\n", "export * from './static.mjs';\n", "export {};\n", "export * from './strict.mjs';\n", "/** `[Json]` Omits compositing symbols from this schema. */\nexport function Strict(schema) {\n    return JSON.parse(JSON.stringify(schema));\n}\n", "export * from './transform.mjs';\n", "import { TransformKind } from '../symbols/index.mjs';\nimport { CloneType } from '../clone/type.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// TransformBuilders\n// ------------------------------------------------------------------\nexport class TransformDecodeBuilder {\n    constructor(schema) {\n        this.schema = schema;\n    }\n    Decode(decode) {\n        return new TransformEncodeBuilder(this.schema, decode);\n    }\n}\n// prettier-ignore\nexport class TransformEncodeBuilder {\n    constructor(schema, decode) {\n        this.schema = schema;\n        this.decode = decode;\n    }\n    EncodeTransform(encode, schema) {\n        const Encode = (value) => schema[TransformKind].Encode(encode(value));\n        const Decode = (value) => this.decode(schema[TransformKind].Decode(value));\n        const Codec = { Encode: Encode, Decode: Decode };\n        return { ...schema, [TransformKind]: Codec };\n    }\n    EncodeSchema(encode, schema) {\n        const Codec = { Decode: this.decode, Encode: encode };\n        return { ...schema, [TransformKind]: Codec };\n    }\n    Encode(encode) {\n        const schema = CloneType(this.schema);\n        return (IsTransform(schema) ? this.EncodeTransform(encode, schema) : this.EncodeSchema(encode, schema));\n    }\n}\n/** `[Json]` Creates a Transform type */\nexport function Transform(schema) {\n    return new TransformDecodeBuilder(schema);\n}\n", "export * from './void.mjs';\n", "import { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Void type */\nexport function Void(options = {}) {\n    return {\n        ...options,\n        [Kind]: 'Void',\n        type: 'void',\n    };\n}\n", "// ------------------------------------------------------------------\n// JsonTypeBuilder\n// ------------------------------------------------------------------\nexport { JsonTypeBuilder } from './json.mjs';\n// ------------------------------------------------------------------\n// JavaScriptTypeBuilder\n// ------------------------------------------------------------------\nimport * as TypeBuilder from './type.mjs';\nimport { JavaScriptTypeBuilder } from './javascript.mjs';\n/** JavaScript Type Builder with Static Resolution for TypeScript */\nconst Type = TypeBuilder;\nexport { JavaScriptTypeBuilder };\nexport { Type };\n", "import { Any } from '../any/index.mjs';\nimport { Array } from '../array/index.mjs';\nimport { Boolean } from '../boolean/index.mjs';\nimport { Composite } from '../composite/index.mjs';\nimport { Const } from '../const/index.mjs';\nimport { Deref } from '../deref/index.mjs';\nimport { Enum } from '../enum/index.mjs';\nimport { Exclude } from '../exclude/index.mjs';\nimport { Extends } from '../extends/index.mjs';\nimport { Extract } from '../extract/index.mjs';\nimport { Index } from '../indexed/index.mjs';\nimport { Integer } from '../integer/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Capitalize, Uncapitalize, Lowercase, Uppercase } from '../intrinsic/index.mjs';\nimport { KeyOf } from '../keyof/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Mapped } from '../mapped/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Not } from '../not/index.mjs';\nimport { Null } from '../null/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Omit } from '../omit/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { Partial } from '../partial/index.mjs';\nimport { Pick } from '../pick/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { ReadonlyOptional } from '../readonly-optional/index.mjs';\nimport { Record } from '../record/index.mjs';\nimport { Recursive } from '../recursive/index.mjs';\nimport { Ref } from '../ref/index.mjs';\nimport { Required } from '../required/index.mjs';\nimport { Rest } from '../rest/index.mjs';\nimport { Strict } from '../strict/index.mjs';\nimport { String } from '../string/index.mjs';\nimport { TemplateLiteral } from '../template-literal/index.mjs';\nimport { Transform } from '../transform/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Unknown } from '../unknown/index.mjs';\nimport { Unsafe } from '../unsafe/index.mjs';\n/** Json Type Builder with Static Resolution for TypeScript */\nexport class JsonTypeBuilder {\n    // ------------------------------------------------------------------------\n    // Strict\n    // ------------------------------------------------------------------------\n    /** `[Json]` Omits compositing symbols from this schema */\n    Strict(schema) {\n        return Strict(schema);\n    }\n    // ------------------------------------------------------------------------\n    // Modifiers\n    // ------------------------------------------------------------------------\n    /** `[Json]` Creates a Readonly and Optional property */\n    ReadonlyOptional(schema) {\n        return ReadonlyOptional(schema);\n    }\n    /** `[Json]` Creates a Readonly property */\n    Readonly(schema, enable) {\n        return Readonly(schema, enable ?? true);\n    }\n    /** `[Json]` Creates a Optional property */\n    Optional(schema, enable) {\n        return Optional(schema, enable ?? true);\n    }\n    // ------------------------------------------------------------------------\n    // Types\n    // ------------------------------------------------------------------------\n    /** `[Json]` Creates an Any type */\n    Any(options = {}) {\n        return Any(options);\n    }\n    /** `[Json]` Creates an Array type */\n    Array(schema, options = {}) {\n        return Array(schema, options);\n    }\n    /** `[Json]` Creates a Boolean type */\n    Boolean(options = {}) {\n        return Boolean(options);\n    }\n    /** `[Json]` Intrinsic function to Capitalize LiteralString types */\n    Capitalize(schema, options = {}) {\n        return Capitalize(schema, options);\n    }\n    /** `[Json]` Creates a Composite object type */\n    Composite(schemas, options) {\n        return Composite(schemas, options); // (error) TS 5.4.0-dev - review TComposite implementation\n    }\n    /** `[JavaScript]` Creates a readonly const type from the given value. */\n    Const(value, options = {}) {\n        return Const(value, options);\n    }\n    /** `[Json]` Creates a dereferenced type */\n    Deref(schema, references) {\n        return Deref(schema, references);\n    }\n    /** `[Json]` Creates a Enum type */\n    Enum(item, options = {}) {\n        return Enum(item, options);\n    }\n    /** `[Json]` Constructs a type by excluding from unionType all union members that are assignable to excludedMembers */\n    Exclude(unionType, excludedMembers, options = {}) {\n        return Exclude(unionType, excludedMembers, options);\n    }\n    /** `[Json]` Creates a Conditional type */\n    Extends(L, R, T, F, options = {}) {\n        return Extends(L, R, T, F, options);\n    }\n    /** `[Json]` Constructs a type by extracting from type all union members that are assignable to union */\n    Extract(type, union, options = {}) {\n        return Extract(type, union, options);\n    }\n    /** `[Json]` Returns an Indexed property type for the given keys */\n    Index(schema, unresolved, options = {}) {\n        return Index(schema, unresolved, options);\n    }\n    /** `[Json]` Creates an Integer type */\n    Integer(options = {}) {\n        return Integer(options);\n    }\n    /** `[Json]` Creates an Intersect type */\n    Intersect(T, options = {}) {\n        return Intersect(T, options);\n    }\n    /** `[Json]` Creates a KeyOf type */\n    KeyOf(schema, options = {}) {\n        return KeyOf(schema, options);\n    }\n    /** `[Json]` Creates a Literal type */\n    Literal(value, options = {}) {\n        return Literal(value, options);\n    }\n    /** `[Json]` Intrinsic function to Lowercase LiteralString types */\n    Lowercase(schema, options = {}) {\n        return Lowercase(schema, options);\n    }\n    /** `[Json]` Creates a Mapped object type */\n    Mapped(key, map, options = {}) {\n        return Mapped(key, map, options);\n    }\n    /** `[Json]` Creates a Never type */\n    Never(options = {}) {\n        return Never(options);\n    }\n    /** `[Json]` Creates a Not type */\n    Not(schema, options) {\n        return Not(schema, options);\n    }\n    /** `[Json]` Creates a Null type */\n    Null(options = {}) {\n        return Null(options);\n    }\n    /** `[Json]` Creates a Number type */\n    Number(options = {}) {\n        return Number(options);\n    }\n    /** `[Json]` Creates an Object type */\n    Object(properties, options = {}) {\n        return Object(properties, options);\n    }\n    /** `[Json]` Constructs a type whose keys are omitted from the given type */\n    Omit(schema, unresolved, options = {}) {\n        return Omit(schema, unresolved, options);\n    }\n    /** `[Json]` Constructs a type where all properties are optional */\n    Partial(schema, options = {}) {\n        return Partial(schema, options);\n    }\n    /** `[Json]` Constructs a type whose keys are picked from the given type */\n    Pick(schema, unresolved, options = {}) {\n        return Pick(schema, unresolved, options);\n    }\n    /** `[Json]` Creates a Record type */\n    Record(key, schema, options = {}) {\n        return Record(key, schema, options);\n    }\n    /** `[Json]` Creates a Recursive type */\n    Recursive(callback, options = {}) {\n        return Recursive(callback, options);\n    }\n    /** `[Json]` Creates a Ref type. */\n    Ref(unresolved, options = {}) {\n        return Ref(unresolved, options);\n    }\n    /** `[Json]` Constructs a type where all properties are required */\n    Required(schema, options = {}) {\n        return Required(schema, options);\n    }\n    /** `[Json]` Extracts interior Rest elements from Tuple, Intersect and Union types */\n    Rest(schema) {\n        return Rest(schema);\n    }\n    /** `[Json]` Creates a String type */\n    String(options = {}) {\n        return String(options);\n    }\n    /** `[Json]` Creates a TemplateLiteral type */\n    TemplateLiteral(unresolved, options = {}) {\n        return TemplateLiteral(unresolved, options);\n    }\n    /** `[Json]` Creates a Transform type */\n    Transform(schema) {\n        return Transform(schema);\n    }\n    /** `[Json]` Creates a Tuple type */\n    Tuple(items, options = {}) {\n        return Tuple(items, options);\n    }\n    /** `[Json]` Intrinsic function to Uncapitalize LiteralString types */\n    Uncapitalize(schema, options = {}) {\n        return Uncapitalize(schema, options);\n    }\n    /** `[Json]` Creates a Union type */\n    Union(schemas, options = {}) {\n        return Union(schemas, options);\n    }\n    /** `[Json]` Creates an Unknown type */\n    Unknown(options = {}) {\n        return Unknown(options);\n    }\n    /** `[Json]` Creates a Unsafe type that will infers as the generic argument T */\n    Unsafe(options = {}) {\n        return Unsafe(options);\n    }\n    /** `[Json]` Intrinsic function to Uppercase LiteralString types */\n    Uppercase(schema, options = {}) {\n        return Uppercase(schema, options);\n    }\n}\n", "// ------------------------------------------------------------------\n// Type: Module\n// ------------------------------------------------------------------\nexport { Any } from '../any/index.mjs';\nexport { Array } from '../array/index.mjs';\nexport { AsyncIterator } from '../async-iterator/index.mjs';\nexport { Awaited } from '../awaited/index.mjs';\nexport { BigInt } from '../bigint/index.mjs';\nexport { Boolean } from '../boolean/index.mjs';\nexport { Composite } from '../composite/index.mjs';\nexport { Const } from '../const/index.mjs';\nexport { Constructor } from '../constructor/index.mjs';\nexport { ConstructorParameters } from '../constructor-parameters/index.mjs';\nexport { Date } from '../date/index.mjs';\nexport { Deref } from '../deref/index.mjs';\nexport { Enum } from '../enum/index.mjs';\nexport { Exclude } from '../exclude/index.mjs';\nexport { Extends } from '../extends/index.mjs';\nexport { Extract } from '../extract/index.mjs';\nexport { Function } from '../function/index.mjs';\nexport { Index } from '../indexed/index.mjs';\nexport { InstanceType } from '../instance-type/index.mjs';\nexport { Integer } from '../integer/index.mjs';\nexport { Intersect } from '../intersect/index.mjs';\nexport { Capitalize, Uncapitalize, Lowercase, Uppercase } from '../intrinsic/index.mjs';\nexport { Iterator } from '../iterator/index.mjs';\nexport { KeyOf } from '../keyof/index.mjs';\nexport { Literal } from '../literal/index.mjs';\nexport { Mapped } from '../mapped/index.mjs';\nexport { Never } from '../never/index.mjs';\nexport { Not } from '../not/index.mjs';\nexport { Null } from '../null/index.mjs';\nexport { Number } from '../number/index.mjs';\nexport { Object } from '../object/index.mjs';\nexport { Omit } from '../omit/index.mjs';\nexport { Optional } from '../optional/index.mjs';\nexport { Parameters } from '../parameters/index.mjs';\nexport { Partial } from '../partial/index.mjs';\nexport { Pick } from '../pick/index.mjs';\nexport { Promise } from '../promise/index.mjs';\nexport { Readonly } from '../readonly/index.mjs';\nexport { ReadonlyOptional } from '../readonly-optional/index.mjs';\nexport { Record } from '../record/index.mjs';\nexport { Recursive } from '../recursive/index.mjs';\nexport { Ref } from '../ref/index.mjs';\nexport { RegExp } from '../regexp/index.mjs';\nexport { Required } from '../required/index.mjs';\nexport { Rest } from '../rest/index.mjs';\nexport { ReturnType } from '../return-type/index.mjs';\nexport { Strict } from '../strict/index.mjs';\nexport { String } from '../string/index.mjs';\nexport { Symbol } from '../symbol/index.mjs';\nexport { TemplateLiteral } from '../template-literal/index.mjs';\nexport { Transform } from '../transform/index.mjs';\nexport { Tuple } from '../tuple/index.mjs';\nexport { Uint8Array } from '../uint8array/index.mjs';\nexport { Undefined } from '../undefined/index.mjs';\nexport { Union } from '../union/index.mjs';\nexport { Unknown } from '../unknown/index.mjs';\nexport { Unsafe } from '../unsafe/index.mjs';\nexport { Void } from '../void/index.mjs';\n", "import { JsonTypeBuilder } from './json.mjs';\nimport { AsyncIterator } from '../async-iterator/index.mjs';\nimport { Awaited } from '../awaited/index.mjs';\nimport { BigInt } from '../bigint/index.mjs';\nimport { Constructor } from '../constructor/index.mjs';\nimport { ConstructorParameters } from '../constructor-parameters/index.mjs';\nimport { Date } from '../date/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { InstanceType } from '../instance-type/index.mjs';\nimport { Iterator } from '../iterator/index.mjs';\nimport { Parameters } from '../parameters/index.mjs';\nimport { Promise } from '../promise/index.mjs';\nimport { RegExp } from '../regexp/index.mjs';\nimport { ReturnType } from '../return-type/index.mjs';\nimport { Symbol } from '../symbol/index.mjs';\nimport { Uint8Array } from '../uint8array/index.mjs';\nimport { Undefined } from '../undefined/index.mjs';\nimport { Void } from '../void/index.mjs';\n/** JavaScript Type Builder with Static Resolution for TypeScript */\nexport class JavaScriptTypeBuilder extends JsonTypeBuilder {\n    /** `[JavaScript]` Creates a AsyncIterator type */\n    AsyncIterator(items, options = {}) {\n        return AsyncIterator(items, options);\n    }\n    /** `[JavaScript]` Constructs a type by recursively unwrapping Promise types */\n    Awaited(schema, options = {}) {\n        return Awaited(schema, options);\n    }\n    /** `[JavaScript]` Creates a BigInt type */\n    BigInt(options = {}) {\n        return BigInt(options);\n    }\n    /** `[JavaScript]` Extracts the ConstructorParameters from the given Constructor type */\n    ConstructorParameters(schema, options = {}) {\n        return ConstructorParameters(schema, options);\n    }\n    /** `[JavaScript]` Creates a Constructor type */\n    Constructor(parameters, returns, options) {\n        return Constructor(parameters, returns, options);\n    }\n    /** `[JavaScript]` Creates a Date type */\n    Date(options = {}) {\n        return Date(options);\n    }\n    /** `[JavaScript]` Creates a Function type */\n    Function(parameters, returns, options) {\n        return FunctionType(parameters, returns, options);\n    }\n    /** `[JavaScript]` Extracts the InstanceType from the given Constructor type */\n    InstanceType(schema, options = {}) {\n        return InstanceType(schema, options);\n    }\n    /** `[JavaScript]` Creates an Iterator type */\n    Iterator(items, options = {}) {\n        return Iterator(items, options);\n    }\n    /** `[JavaScript]` Extracts the Parameters from the given Function type */\n    Parameters(schema, options = {}) {\n        return Parameters(schema, options);\n    }\n    /** `[JavaScript]` Creates a Promise type */\n    Promise(item, options = {}) {\n        return Promise(item, options);\n    }\n    /** `[JavaScript]` Creates a RegExp type */\n    RegExp(unresolved, options = {}) {\n        return RegExp(unresolved, options);\n    }\n    /** `[JavaScript]` Extracts the ReturnType from the given Function type */\n    ReturnType(schema, options = {}) {\n        return ReturnType(schema, options);\n    }\n    /** `[JavaScript]` Creates a Symbol type */\n    Symbol(options) {\n        return Symbol(options);\n    }\n    /** `[JavaScript]` Creates a Undefined type */\n    Undefined(options = {}) {\n        return Undefined(options);\n    }\n    /** `[JavaScript]` Creates a Uint8Array type */\n    Uint8Array(options = {}) {\n        return Uint8Array(options);\n    }\n    /** `[JavaScript]` Creates a Void type */\n    Void(options = {}) {\n        return Void(options);\n    }\n}\n", "export { ValueErrorType, ValueErrorIterator } from '../errors/index.mjs';\nexport * from './compiler.mjs';\n", "import { TransformEncode, TransformDecode, HasTransform, TransformDecodeCheckError, TransformEncodeCheckError } from '../value/transform/index.mjs';\nimport { Errors } from '../errors/index.mjs';\nimport { TypeSystemPolicy } from '../system/index.mjs';\nimport { TypeBoxError } from '../type/error/index.mjs';\nimport { Deref } from '../value/deref/index.mjs';\nimport { Hash } from '../value/hash/index.mjs';\nimport { Kind } from '../type/symbols/index.mjs';\nimport { TypeRegistry, FormatRegistry } from '../type/registry/index.mjs';\nimport { KeyOfPattern } from '../type/keyof/index.mjs';\nimport { ExtendsUndefinedCheck } from '../type/extends/extends-undefined.mjs';\nimport { Never } from '../type/never/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsString, IsNumber, IsBigInt } from '../value/guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsSchema } from '../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// TypeCheck\n// ------------------------------------------------------------------\nexport class TypeCheck {\n    constructor(schema, references, checkFunc, code) {\n        this.schema = schema;\n        this.references = references;\n        this.checkFunc = checkFunc;\n        this.code = code;\n        this.hasTransform = HasTransform(schema, references);\n    }\n    /** Returns the generated assertion code used to validate this type. */\n    Code() {\n        return this.code;\n    }\n    /** Returns an iterator for each error in this value. */\n    Errors(value) {\n        return Errors(this.schema, this.references, value);\n    }\n    /** Returns true if the value matches the compiled type. */\n    Check(value) {\n        return this.checkFunc(value);\n    }\n    /** Decodes a value or throws if error */\n    Decode(value) {\n        if (!this.checkFunc(value))\n            throw new TransformDecodeCheckError(this.schema, value, this.Errors(value).First());\n        return this.hasTransform ? TransformDecode(this.schema, this.references, value) : value;\n    }\n    /** Encodes a value or throws if error */\n    Encode(value) {\n        const encoded = this.hasTransform ? TransformEncode(this.schema, this.references, value) : value;\n        if (!this.checkFunc(encoded))\n            throw new TransformEncodeCheckError(this.schema, value, this.Errors(value).First());\n        return encoded;\n    }\n}\n// ------------------------------------------------------------------\n// Character\n// ------------------------------------------------------------------\nvar Character;\n(function (Character) {\n    function DollarSign(code) {\n        return code === 36;\n    }\n    Character.DollarSign = DollarSign;\n    function IsUnderscore(code) {\n        return code === 95;\n    }\n    Character.IsUnderscore = IsUnderscore;\n    function IsAlpha(code) {\n        return (code >= 65 && code <= 90) || (code >= 97 && code <= 122);\n    }\n    Character.IsAlpha = IsAlpha;\n    function IsNumeric(code) {\n        return code >= 48 && code <= 57;\n    }\n    Character.IsNumeric = IsNumeric;\n})(Character || (Character = {}));\n// ------------------------------------------------------------------\n// MemberExpression\n// ------------------------------------------------------------------\nvar MemberExpression;\n(function (MemberExpression) {\n    function IsFirstCharacterNumeric(value) {\n        if (value.length === 0)\n            return false;\n        return Character.IsNumeric(value.charCodeAt(0));\n    }\n    function IsAccessor(value) {\n        if (IsFirstCharacterNumeric(value))\n            return false;\n        for (let i = 0; i < value.length; i++) {\n            const code = value.charCodeAt(i);\n            const check = Character.IsAlpha(code) || Character.IsNumeric(code) || Character.DollarSign(code) || Character.IsUnderscore(code);\n            if (!check)\n                return false;\n        }\n        return true;\n    }\n    function EscapeHyphen(key) {\n        return key.replace(/'/g, \"\\\\'\");\n    }\n    function Encode(object, key) {\n        return IsAccessor(key) ? `${object}.${key}` : `${object}['${EscapeHyphen(key)}']`;\n    }\n    MemberExpression.Encode = Encode;\n})(MemberExpression || (MemberExpression = {}));\n// ------------------------------------------------------------------\n// Identifier\n// ------------------------------------------------------------------\nvar Identifier;\n(function (Identifier) {\n    function Encode($id) {\n        const buffer = [];\n        for (let i = 0; i < $id.length; i++) {\n            const code = $id.charCodeAt(i);\n            if (Character.IsNumeric(code) || Character.IsAlpha(code)) {\n                buffer.push($id.charAt(i));\n            }\n            else {\n                buffer.push(`_${code}_`);\n            }\n        }\n        return buffer.join('').replace(/__/g, '_');\n    }\n    Identifier.Encode = Encode;\n})(Identifier || (Identifier = {}));\n// ------------------------------------------------------------------\n// LiteralString\n// ------------------------------------------------------------------\nvar LiteralString;\n(function (LiteralString) {\n    function Escape(content) {\n        return content.replace(/'/g, \"\\\\'\");\n    }\n    LiteralString.Escape = Escape;\n})(LiteralString || (LiteralString = {}));\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class TypeCompilerUnknownTypeError extends TypeBoxError {\n    constructor(schema) {\n        super('Unknown type');\n        this.schema = schema;\n    }\n}\nexport class TypeCompilerTypeGuardError extends TypeBoxError {\n    constructor(schema) {\n        super('Preflight validation check failed to guard for the given schema');\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// Policy\n// ------------------------------------------------------------------\nexport var Policy;\n(function (Policy) {\n    function IsExactOptionalProperty(value, key, expression) {\n        return TypeSystemPolicy.ExactOptionalPropertyTypes ? `('${key}' in ${value} ? ${expression} : true)` : `(${MemberExpression.Encode(value, key)} !== undefined ? ${expression} : true)`;\n    }\n    Policy.IsExactOptionalProperty = IsExactOptionalProperty;\n    function IsObjectLike(value) {\n        return !TypeSystemPolicy.AllowArrayObject ? `(typeof ${value} === 'object' && ${value} !== null && !Array.isArray(${value}))` : `(typeof ${value} === 'object' && ${value} !== null)`;\n    }\n    Policy.IsObjectLike = IsObjectLike;\n    function IsRecordLike(value) {\n        return !TypeSystemPolicy.AllowArrayObject\n            ? `(typeof ${value} === 'object' && ${value} !== null && !Array.isArray(${value}) && !(${value} instanceof Date) && !(${value} instanceof Uint8Array))`\n            : `(typeof ${value} === 'object' && ${value} !== null && !(${value} instanceof Date) && !(${value} instanceof Uint8Array))`;\n    }\n    Policy.IsRecordLike = IsRecordLike;\n    function IsNumberLike(value) {\n        return TypeSystemPolicy.AllowNaN ? `typeof ${value} === 'number'` : `Number.isFinite(${value})`;\n    }\n    Policy.IsNumberLike = IsNumberLike;\n    function IsVoidLike(value) {\n        return TypeSystemPolicy.AllowNullVoid ? `(${value} === undefined || ${value} === null)` : `${value} === undefined`;\n    }\n    Policy.IsVoidLike = IsVoidLike;\n})(Policy || (Policy = {}));\n/** Compiles Types for Runtime Type Checking */\nexport var TypeCompiler;\n(function (TypeCompiler) {\n    // ----------------------------------------------------------------\n    // Guards\n    // ----------------------------------------------------------------\n    function IsAnyOrUnknown(schema) {\n        return schema[Kind] === 'Any' || schema[Kind] === 'Unknown';\n    }\n    // ----------------------------------------------------------------\n    // Types\n    // ----------------------------------------------------------------\n    function* FromAny(schema, references, value) {\n        yield 'true';\n    }\n    function* FromArray(schema, references, value) {\n        yield `Array.isArray(${value})`;\n        const [parameter, accumulator] = [CreateParameter('value', 'any'), CreateParameter('acc', 'number')];\n        if (IsNumber(schema.maxItems))\n            yield `${value}.length <= ${schema.maxItems}`;\n        if (IsNumber(schema.minItems))\n            yield `${value}.length >= ${schema.minItems}`;\n        const elementExpression = CreateExpression(schema.items, references, 'value');\n        yield `${value}.every((${parameter}) => ${elementExpression})`;\n        if (IsSchema(schema.contains) || IsNumber(schema.minContains) || IsNumber(schema.maxContains)) {\n            const containsSchema = IsSchema(schema.contains) ? schema.contains : Never();\n            const checkExpression = CreateExpression(containsSchema, references, 'value');\n            const checkMinContains = IsNumber(schema.minContains) ? [`(count >= ${schema.minContains})`] : [];\n            const checkMaxContains = IsNumber(schema.maxContains) ? [`(count <= ${schema.maxContains})`] : [];\n            const checkCount = `const count = value.reduce((${accumulator}, ${parameter}) => ${checkExpression} ? acc + 1 : acc, 0)`;\n            const check = [`(count > 0)`, ...checkMinContains, ...checkMaxContains].join(' && ');\n            yield `((${parameter}) => { ${checkCount}; return ${check}})(${value})`;\n        }\n        if (schema.uniqueItems === true) {\n            const check = `const hashed = hash(element); if(set.has(hashed)) { return false } else { set.add(hashed) } } return true`;\n            const block = `const set = new Set(); for(const element of value) { ${check} }`;\n            yield `((${parameter}) => { ${block} )(${value})`;\n        }\n    }\n    function* FromAsyncIterator(schema, references, value) {\n        yield `(typeof value === 'object' && Symbol.asyncIterator in ${value})`;\n    }\n    function* FromBigInt(schema, references, value) {\n        yield `(typeof ${value} === 'bigint')`;\n        if (IsBigInt(schema.exclusiveMaximum))\n            yield `${value} < BigInt(${schema.exclusiveMaximum})`;\n        if (IsBigInt(schema.exclusiveMinimum))\n            yield `${value} > BigInt(${schema.exclusiveMinimum})`;\n        if (IsBigInt(schema.maximum))\n            yield `${value} <= BigInt(${schema.maximum})`;\n        if (IsBigInt(schema.minimum))\n            yield `${value} >= BigInt(${schema.minimum})`;\n        if (IsBigInt(schema.multipleOf))\n            yield `(${value} % BigInt(${schema.multipleOf})) === 0`;\n    }\n    function* FromBoolean(schema, references, value) {\n        yield `(typeof ${value} === 'boolean')`;\n    }\n    function* FromConstructor(schema, references, value) {\n        yield* Visit(schema.returns, references, `${value}.prototype`);\n    }\n    function* FromDate(schema, references, value) {\n        yield `(${value} instanceof Date) && Number.isFinite(${value}.getTime())`;\n        if (IsNumber(schema.exclusiveMaximumTimestamp))\n            yield `${value}.getTime() < ${schema.exclusiveMaximumTimestamp}`;\n        if (IsNumber(schema.exclusiveMinimumTimestamp))\n            yield `${value}.getTime() > ${schema.exclusiveMinimumTimestamp}`;\n        if (IsNumber(schema.maximumTimestamp))\n            yield `${value}.getTime() <= ${schema.maximumTimestamp}`;\n        if (IsNumber(schema.minimumTimestamp))\n            yield `${value}.getTime() >= ${schema.minimumTimestamp}`;\n        if (IsNumber(schema.multipleOfTimestamp))\n            yield `(${value}.getTime() % ${schema.multipleOfTimestamp}) === 0`;\n    }\n    function* FromFunction(schema, references, value) {\n        yield `(typeof ${value} === 'function')`;\n    }\n    function* FromInteger(schema, references, value) {\n        yield `Number.isInteger(${value})`;\n        if (IsNumber(schema.exclusiveMaximum))\n            yield `${value} < ${schema.exclusiveMaximum}`;\n        if (IsNumber(schema.exclusiveMinimum))\n            yield `${value} > ${schema.exclusiveMinimum}`;\n        if (IsNumber(schema.maximum))\n            yield `${value} <= ${schema.maximum}`;\n        if (IsNumber(schema.minimum))\n            yield `${value} >= ${schema.minimum}`;\n        if (IsNumber(schema.multipleOf))\n            yield `(${value} % ${schema.multipleOf}) === 0`;\n    }\n    function* FromIntersect(schema, references, value) {\n        const check1 = schema.allOf.map((schema) => CreateExpression(schema, references, value)).join(' && ');\n        if (schema.unevaluatedProperties === false) {\n            const keyCheck = CreateVariable(`${new RegExp(KeyOfPattern(schema))};`);\n            const check2 = `Object.getOwnPropertyNames(${value}).every(key => ${keyCheck}.test(key))`;\n            yield `(${check1} && ${check2})`;\n        }\n        else if (IsSchema(schema.unevaluatedProperties)) {\n            const keyCheck = CreateVariable(`${new RegExp(KeyOfPattern(schema))};`);\n            const check2 = `Object.getOwnPropertyNames(${value}).every(key => ${keyCheck}.test(key) || ${CreateExpression(schema.unevaluatedProperties, references, `${value}[key]`)})`;\n            yield `(${check1} && ${check2})`;\n        }\n        else {\n            yield `(${check1})`;\n        }\n    }\n    function* FromIterator(schema, references, value) {\n        yield `(typeof value === 'object' && Symbol.iterator in ${value})`;\n    }\n    function* FromLiteral(schema, references, value) {\n        if (typeof schema.const === 'number' || typeof schema.const === 'boolean') {\n            yield `(${value} === ${schema.const})`;\n        }\n        else {\n            yield `(${value} === '${LiteralString.Escape(schema.const)}')`;\n        }\n    }\n    function* FromNever(schema, references, value) {\n        yield `false`;\n    }\n    function* FromNot(schema, references, value) {\n        const expression = CreateExpression(schema.not, references, value);\n        yield `(!${expression})`;\n    }\n    function* FromNull(schema, references, value) {\n        yield `(${value} === null)`;\n    }\n    function* FromNumber(schema, references, value) {\n        yield Policy.IsNumberLike(value);\n        if (IsNumber(schema.exclusiveMaximum))\n            yield `${value} < ${schema.exclusiveMaximum}`;\n        if (IsNumber(schema.exclusiveMinimum))\n            yield `${value} > ${schema.exclusiveMinimum}`;\n        if (IsNumber(schema.maximum))\n            yield `${value} <= ${schema.maximum}`;\n        if (IsNumber(schema.minimum))\n            yield `${value} >= ${schema.minimum}`;\n        if (IsNumber(schema.multipleOf))\n            yield `(${value} % ${schema.multipleOf}) === 0`;\n    }\n    function* FromObject(schema, references, value) {\n        yield Policy.IsObjectLike(value);\n        if (IsNumber(schema.minProperties))\n            yield `Object.getOwnPropertyNames(${value}).length >= ${schema.minProperties}`;\n        if (IsNumber(schema.maxProperties))\n            yield `Object.getOwnPropertyNames(${value}).length <= ${schema.maxProperties}`;\n        const knownKeys = Object.getOwnPropertyNames(schema.properties);\n        for (const knownKey of knownKeys) {\n            const memberExpression = MemberExpression.Encode(value, knownKey);\n            const property = schema.properties[knownKey];\n            if (schema.required && schema.required.includes(knownKey)) {\n                yield* Visit(property, references, memberExpression);\n                if (ExtendsUndefinedCheck(property) || IsAnyOrUnknown(property))\n                    yield `('${knownKey}' in ${value})`;\n            }\n            else {\n                const expression = CreateExpression(property, references, memberExpression);\n                yield Policy.IsExactOptionalProperty(value, knownKey, expression);\n            }\n        }\n        if (schema.additionalProperties === false) {\n            if (schema.required && schema.required.length === knownKeys.length) {\n                yield `Object.getOwnPropertyNames(${value}).length === ${knownKeys.length}`;\n            }\n            else {\n                const keys = `[${knownKeys.map((key) => `'${key}'`).join(', ')}]`;\n                yield `Object.getOwnPropertyNames(${value}).every(key => ${keys}.includes(key))`;\n            }\n        }\n        if (typeof schema.additionalProperties === 'object') {\n            const expression = CreateExpression(schema.additionalProperties, references, `${value}[key]`);\n            const keys = `[${knownKeys.map((key) => `'${key}'`).join(', ')}]`;\n            yield `(Object.getOwnPropertyNames(${value}).every(key => ${keys}.includes(key) || ${expression}))`;\n        }\n    }\n    function* FromPromise(schema, references, value) {\n        yield `(typeof value === 'object' && typeof ${value}.then === 'function')`;\n    }\n    function* FromRecord(schema, references, value) {\n        yield Policy.IsRecordLike(value);\n        if (IsNumber(schema.minProperties))\n            yield `Object.getOwnPropertyNames(${value}).length >= ${schema.minProperties}`;\n        if (IsNumber(schema.maxProperties))\n            yield `Object.getOwnPropertyNames(${value}).length <= ${schema.maxProperties}`;\n        const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n        const variable = CreateVariable(`${new RegExp(patternKey)}`);\n        const check1 = CreateExpression(patternSchema, references, 'value');\n        const check2 = IsSchema(schema.additionalProperties) ? CreateExpression(schema.additionalProperties, references, value) : schema.additionalProperties === false ? 'false' : 'true';\n        const expression = `(${variable}.test(key) ? ${check1} : ${check2})`;\n        yield `(Object.entries(${value}).every(([key, value]) => ${expression}))`;\n    }\n    function* FromRef(schema, references, value) {\n        const target = Deref(schema, references);\n        // Reference: If we have seen this reference before we can just yield and return the function call.\n        // If this isn't the case we defer to visit to generate and set the function for subsequent passes.\n        if (state.functions.has(schema.$ref))\n            return yield `${CreateFunctionName(schema.$ref)}(${value})`;\n        yield* Visit(target, references, value);\n    }\n    function* FromRegExp(schema, references, value) {\n        const variable = CreateVariable(`${new RegExp(schema.source, schema.flags)};`);\n        yield `(typeof ${value} === 'string')`;\n        if (IsNumber(schema.maxLength))\n            yield `${value}.length <= ${schema.maxLength}`;\n        if (IsNumber(schema.minLength))\n            yield `${value}.length >= ${schema.minLength}`;\n        yield `${variable}.test(${value})`;\n    }\n    function* FromString(schema, references, value) {\n        yield `(typeof ${value} === 'string')`;\n        if (IsNumber(schema.maxLength))\n            yield `${value}.length <= ${schema.maxLength}`;\n        if (IsNumber(schema.minLength))\n            yield `${value}.length >= ${schema.minLength}`;\n        if (schema.pattern !== undefined) {\n            const variable = CreateVariable(`${new RegExp(schema.pattern)};`);\n            yield `${variable}.test(${value})`;\n        }\n        if (schema.format !== undefined) {\n            yield `format('${schema.format}', ${value})`;\n        }\n    }\n    function* FromSymbol(schema, references, value) {\n        yield `(typeof ${value} === 'symbol')`;\n    }\n    function* FromTemplateLiteral(schema, references, value) {\n        yield `(typeof ${value} === 'string')`;\n        const variable = CreateVariable(`${new RegExp(schema.pattern)};`);\n        yield `${variable}.test(${value})`;\n    }\n    function* FromThis(schema, references, value) {\n        // Note: This types are assured to be hoisted prior to this call. Just yield the function.\n        yield `${CreateFunctionName(schema.$ref)}(${value})`;\n    }\n    function* FromTuple(schema, references, value) {\n        yield `Array.isArray(${value})`;\n        if (schema.items === undefined)\n            return yield `${value}.length === 0`;\n        yield `(${value}.length === ${schema.maxItems})`;\n        for (let i = 0; i < schema.items.length; i++) {\n            const expression = CreateExpression(schema.items[i], references, `${value}[${i}]`);\n            yield `${expression}`;\n        }\n    }\n    function* FromUndefined(schema, references, value) {\n        yield `${value} === undefined`;\n    }\n    function* FromUnion(schema, references, value) {\n        const expressions = schema.anyOf.map((schema) => CreateExpression(schema, references, value));\n        yield `(${expressions.join(' || ')})`;\n    }\n    function* FromUint8Array(schema, references, value) {\n        yield `${value} instanceof Uint8Array`;\n        if (IsNumber(schema.maxByteLength))\n            yield `(${value}.length <= ${schema.maxByteLength})`;\n        if (IsNumber(schema.minByteLength))\n            yield `(${value}.length >= ${schema.minByteLength})`;\n    }\n    function* FromUnknown(schema, references, value) {\n        yield 'true';\n    }\n    function* FromVoid(schema, references, value) {\n        yield Policy.IsVoidLike(value);\n    }\n    function* FromKind(schema, references, value) {\n        const instance = state.instances.size;\n        state.instances.set(instance, schema);\n        yield `kind('${schema[Kind]}', ${instance}, ${value})`;\n    }\n    function* Visit(schema, references, value, useHoisting = true) {\n        const references_ = IsString(schema.$id) ? [...references, schema] : references;\n        const schema_ = schema;\n        // --------------------------------------------------------------\n        // Hoisting\n        // --------------------------------------------------------------\n        if (useHoisting && IsString(schema.$id)) {\n            const functionName = CreateFunctionName(schema.$id);\n            if (state.functions.has(functionName)) {\n                return yield `${functionName}(${value})`;\n            }\n            else {\n                const functionCode = CreateFunction(functionName, schema, references, 'value', false);\n                state.functions.set(functionName, functionCode);\n                return yield `${functionName}(${value})`;\n            }\n        }\n        switch (schema_[Kind]) {\n            case 'Any':\n                return yield* FromAny(schema_, references_, value);\n            case 'Array':\n                return yield* FromArray(schema_, references_, value);\n            case 'AsyncIterator':\n                return yield* FromAsyncIterator(schema_, references_, value);\n            case 'BigInt':\n                return yield* FromBigInt(schema_, references_, value);\n            case 'Boolean':\n                return yield* FromBoolean(schema_, references_, value);\n            case 'Constructor':\n                return yield* FromConstructor(schema_, references_, value);\n            case 'Date':\n                return yield* FromDate(schema_, references_, value);\n            case 'Function':\n                return yield* FromFunction(schema_, references_, value);\n            case 'Integer':\n                return yield* FromInteger(schema_, references_, value);\n            case 'Intersect':\n                return yield* FromIntersect(schema_, references_, value);\n            case 'Iterator':\n                return yield* FromIterator(schema_, references_, value);\n            case 'Literal':\n                return yield* FromLiteral(schema_, references_, value);\n            case 'Never':\n                return yield* FromNever(schema_, references_, value);\n            case 'Not':\n                return yield* FromNot(schema_, references_, value);\n            case 'Null':\n                return yield* FromNull(schema_, references_, value);\n            case 'Number':\n                return yield* FromNumber(schema_, references_, value);\n            case 'Object':\n                return yield* FromObject(schema_, references_, value);\n            case 'Promise':\n                return yield* FromPromise(schema_, references_, value);\n            case 'Record':\n                return yield* FromRecord(schema_, references_, value);\n            case 'Ref':\n                return yield* FromRef(schema_, references_, value);\n            case 'RegExp':\n                return yield* FromRegExp(schema_, references_, value);\n            case 'String':\n                return yield* FromString(schema_, references_, value);\n            case 'Symbol':\n                return yield* FromSymbol(schema_, references_, value);\n            case 'TemplateLiteral':\n                return yield* FromTemplateLiteral(schema_, references_, value);\n            case 'This':\n                return yield* FromThis(schema_, references_, value);\n            case 'Tuple':\n                return yield* FromTuple(schema_, references_, value);\n            case 'Undefined':\n                return yield* FromUndefined(schema_, references_, value);\n            case 'Union':\n                return yield* FromUnion(schema_, references_, value);\n            case 'Uint8Array':\n                return yield* FromUint8Array(schema_, references_, value);\n            case 'Unknown':\n                return yield* FromUnknown(schema_, references_, value);\n            case 'Void':\n                return yield* FromVoid(schema_, references_, value);\n            default:\n                if (!TypeRegistry.Has(schema_[Kind]))\n                    throw new TypeCompilerUnknownTypeError(schema);\n                return yield* FromKind(schema_, references_, value);\n        }\n    }\n    // ----------------------------------------------------------------\n    // Compiler State\n    // ----------------------------------------------------------------\n    // prettier-ignore\n    const state = {\n        language: 'javascript', // target language\n        functions: new Map(), // local functions\n        variables: new Map(), // local variables\n        instances: new Map() // exterior kind instances\n    };\n    // ----------------------------------------------------------------\n    // Compiler Factory\n    // ----------------------------------------------------------------\n    function CreateExpression(schema, references, value, useHoisting = true) {\n        return `(${[...Visit(schema, references, value, useHoisting)].join(' && ')})`;\n    }\n    function CreateFunctionName($id) {\n        return `check_${Identifier.Encode($id)}`;\n    }\n    function CreateVariable(expression) {\n        const variableName = `local_${state.variables.size}`;\n        state.variables.set(variableName, `const ${variableName} = ${expression}`);\n        return variableName;\n    }\n    function CreateFunction(name, schema, references, value, useHoisting = true) {\n        const [newline, pad] = ['\\n', (length) => ''.padStart(length, ' ')];\n        const parameter = CreateParameter('value', 'any');\n        const returns = CreateReturns('boolean');\n        const expression = [...Visit(schema, references, value, useHoisting)].map((expression) => `${pad(4)}${expression}`).join(` &&${newline}`);\n        return `function ${name}(${parameter})${returns} {${newline}${pad(2)}return (${newline}${expression}${newline}${pad(2)})\\n}`;\n    }\n    function CreateParameter(name, type) {\n        const annotation = state.language === 'typescript' ? `: ${type}` : '';\n        return `${name}${annotation}`;\n    }\n    function CreateReturns(type) {\n        return state.language === 'typescript' ? `: ${type}` : '';\n    }\n    // ----------------------------------------------------------------\n    // Compile\n    // ----------------------------------------------------------------\n    function Build(schema, references, options) {\n        const functionCode = CreateFunction('check', schema, references, 'value'); // will populate functions and variables\n        const parameter = CreateParameter('value', 'any');\n        const returns = CreateReturns('boolean');\n        const functions = [...state.functions.values()];\n        const variables = [...state.variables.values()];\n        // prettier-ignore\n        const checkFunction = IsString(schema.$id) // ensure top level schemas with $id's are hoisted\n            ? `return function check(${parameter})${returns} {\\n  return ${CreateFunctionName(schema.$id)}(value)\\n}`\n            : `return ${functionCode}`;\n        return [...variables, ...functions, checkFunction].join('\\n');\n    }\n    /** Generates the code used to assert this type and returns it as a string */\n    function Code(...args) {\n        const defaults = { language: 'javascript' };\n        // prettier-ignore\n        const [schema, references, options] = (args.length === 2 && IsArray(args[1]) ? [args[0], args[1], defaults] :\n            args.length === 2 && !IsArray(args[1]) ? [args[0], [], args[1]] :\n                args.length === 3 ? [args[0], args[1], args[2]] :\n                    args.length === 1 ? [args[0], [], defaults] :\n                        [null, [], defaults]);\n        // compiler-reset\n        state.language = options.language;\n        state.variables.clear();\n        state.functions.clear();\n        state.instances.clear();\n        if (!IsSchema(schema))\n            throw new TypeCompilerTypeGuardError(schema);\n        for (const schema of references)\n            if (!IsSchema(schema))\n                throw new TypeCompilerTypeGuardError(schema);\n        return Build(schema, references, options);\n    }\n    TypeCompiler.Code = Code;\n    /** Compiles a TypeBox type for optimal runtime type checking. Types must be valid TypeBox types of TSchema */\n    function Compile(schema, references = []) {\n        const generatedCode = Code(schema, references, { language: 'javascript' });\n        const compiledFunction = globalThis.Function('kind', 'format', 'hash', generatedCode);\n        const instances = new Map(state.instances);\n        function typeRegistryFunction(kind, instance, value) {\n            if (!TypeRegistry.Has(kind) || !instances.has(instance))\n                return false;\n            const checkFunc = TypeRegistry.Get(kind);\n            const schema = instances.get(instance);\n            return checkFunc(schema, value);\n        }\n        function formatRegistryFunction(format, value) {\n            if (!FormatRegistry.Has(format))\n                return false;\n            const checkFunc = FormatRegistry.Get(format);\n            return checkFunc(value);\n        }\n        function hashFunction(value) {\n            return Hash(value);\n        }\n        const checkFunction = compiledFunction(typeRegistryFunction, formatRegistryFunction, hashFunction);\n        return new TypeCheck(schema, references, checkFunction, generatedCode);\n    }\n    TypeCompiler.Compile = Compile;\n})(TypeCompiler || (TypeCompiler = {}));\n", "// src/index.ts\nimport { Elysia } from \"elysia\";\nvar isBun = typeof new Headers()?.toJSON === \"function\";\nvar processHeaders = (headers) => {\n  if (isBun) return Object.keys(headers.toJSON()).join(\", \");\n  let keys = \"\";\n  headers.forEach((_, key) => {\n    keys += key + \", \";\n  });\n  if (keys) keys = keys.slice(0, -1);\n  return keys;\n};\nvar processOrigin = (origin, request, from) => {\n  if (Array.isArray(origin))\n    return origin.some((o) => processOrigin(o, request, from));\n  switch (typeof origin) {\n    case \"string\":\n      if (origin.indexOf(\"://\") === -1) return from.includes(origin);\n      return origin === from;\n    case \"function\":\n      return origin(request) === true;\n    case \"object\":\n      if (origin instanceof RegExp) return origin.test(from);\n  }\n  return false;\n};\nvar cors = (config) => {\n  let {\n    aot = true,\n    origin = true,\n    methods = true,\n    allowedHeaders = true,\n    exposeHeaders = true,\n    credentials = true,\n    maxAge = 5,\n    preflight = true\n  } = config ?? {};\n  if (Array.isArray(allowedHeaders))\n    allowedHeaders = allowedHeaders.join(\", \");\n  if (Array.isArray(exposeHeaders)) exposeHeaders = exposeHeaders.join(\", \");\n  const origins = typeof origin === \"boolean\" ? void 0 : Array.isArray(origin) ? origin : [origin];\n  const app = new Elysia({\n    name: \"@elysiajs/cors\",\n    seed: config,\n    aot\n  });\n  const anyOrigin = origins?.some((o) => o === \"*\");\n  const handleOrigin = (set, request) => {\n    if (origin === true) {\n      set.headers.vary = \"*\";\n      set.headers[\"access-control-allow-origin\"] = request.headers.get(\"Origin\") || \"*\";\n      return;\n    }\n    if (anyOrigin) {\n      set.headers.vary = \"*\";\n      set.headers[\"access-control-allow-origin\"] = \"*\";\n      return;\n    }\n    if (!origins?.length) return;\n    const headers = [];\n    if (origins.length) {\n      const from = request.headers.get(\"Origin\") ?? \"\";\n      for (let i = 0; i < origins.length; i++) {\n        const value = processOrigin(origins[i], request, from);\n        if (value === true) {\n          set.headers.vary = origin ? \"Origin\" : \"*\";\n          set.headers[\"access-control-allow-origin\"] = from || \"*\";\n          return;\n        }\n        if (value) headers.push(value);\n      }\n    }\n    set.headers.vary = \"Origin\";\n    if (headers.length)\n      set.headers[\"access-control-allow-origin\"] = headers.join(\", \");\n  };\n  const handleMethod = (set, method) => {\n    if (!method) return;\n    if (methods === true)\n      return set.headers[\"access-control-allow-methods\"] = method ?? \"*\";\n    if (methods === false || !methods?.length) return;\n    if (methods === \"*\")\n      return set.headers[\"access-control-allow-methods\"] = \"*\";\n    if (!Array.isArray(methods))\n      return set.headers[\"access-control-allow-methods\"] = methods;\n    set.headers[\"access-control-allow-methods\"] = methods.join(\", \");\n  };\n  const defaultHeaders = {};\n  if (typeof exposeHeaders === \"string\")\n    defaultHeaders[\"access-control-expose-headers\"] = exposeHeaders;\n  if (typeof allowedHeaders === \"string\")\n    defaultHeaders[\"access-control-allow-headers\"] = allowedHeaders;\n  if (credentials === true)\n    defaultHeaders[\"access-control-allow-credentials\"] = \"true\";\n  app.headers(defaultHeaders);\n  function handleOption({ set, request, headers }) {\n    handleOrigin(set, request);\n    handleMethod(set, request.headers.get(\"access-control-request-method\"));\n    if (allowedHeaders === true || exposeHeaders === true) {\n      if (allowedHeaders === true)\n        set.headers[\"access-control-allow-headers\"] = headers[\"access-control-request-headers\"];\n      if (exposeHeaders === true)\n        set.headers[\"access-control-expose-headers\"] = Object.keys(headers).join(\",\");\n    }\n    if (maxAge) set.headers[\"access-control-max-age\"] = maxAge.toString();\n    return new Response(null, {\n      status: 204\n    });\n  }\n  if (preflight) app.options(\"/\", handleOption).options(\"/*\", handleOption);\n  return app.onRequest(function processCors({ set, request }) {\n    handleOrigin(set, request);\n    handleMethod(set, request.method);\n    if (allowedHeaders === true || exposeHeaders === true) {\n      const headers = processHeaders(request.headers);\n      if (allowedHeaders === true)\n        set.headers[\"access-control-allow-headers\"] = headers;\n      if (exposeHeaders === true)\n        set.headers[\"access-control-expose-headers\"] = headers;\n    }\n  });\n};\nvar src_default = cors;\nexport {\n  cors,\n  src_default as default\n};\n", "import { Elysia } from 'elysia'\nimport handlePing from './ping'\n\nconst app = new Elysia({ aot: false })\n  .use(handlePing)\n\nexport default app\n\nexport type App = typeof app\n", "import Elysia from 'elysia'\n\nexport default function handlePing() {\n  return new Elysia({ aot: false })\n    .all('/ping', () => 'pong')\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["init", "e", "performance", "Buffer", "fill", "i", "compare", "byteLength", "parse", "serialize", "decode", "decodeURIComponent", "uri", "byte", "Token", "ServiceNotFoundError", "_a", "__extends", "CannotInstantiateValueError", "_a", "ContainerInstance", "error", "_a", "Container", "instance", "TypeSystemPolicy", "isObject", "Set", "Clear", "Delete", "Entries", "Get", "Has", "Set", "map", "TypeSystem", "Type", "Format", "IsArray", "IsAsyncIterator", "IsBigInt", "IsBoolean", "IsDate", "IsFunction", "IsIterator", "IsNull", "IsNumber", "IsObject", "IsString", "IsSymbol", "IsUint8Array", "IsUndefined", "value", "IsArray", "IsDate", "IsUint8Array", "IsObject", "Array", "Function", "IsObject", "IsArray", "IsAsyncIterator", "IsBigInt", "IsBoolean", "IsDate", "IsFunction", "IsInteger", "IsIterator", "IsObject", "IsNull", "IsNumber", "IsObject", "IsPromise", "IsRegExp", "IsString", "IsSymbol", "IsObject", "IsUndefined", "IsUint8Array", "IsArray", "IsBoolean", "IsBigInt", "IsAsyncIterator", "IsDate", "IsFunction", "IsInteger", "IsIterator", "IsNull", "IsNumber", "IsPromise", "IsObject", "RemoveOptionalFromRest", "RemoveOptionalFromType", "range", "pattern", "BigInt", "Number", "String", "Number", "BigInt", "String", "Visit", "schema", "IsNumber", "IsInteger", "IsBigInt", "IsString", "IsBoolean", "IsString", "FromUnion", "IsNumber", "IsInteger", "FromProperties", "FromMappedResult", "FromUnion", "IsArray", "IsObject", "Object", "Promise", "FromProperties", "FromMappedResult", "FromMappedResult", "FromRest", "FromProperties", "IsFunction", "Function", "IsAsyncIterator", "IsIterator", "IsObject", "Object", "IsArray", "Array", "IsPromise", "Promise", "map", "FromRest", "FromIntersect", "FromUnion", "FromTuple", "FromArray", "FromProperties", "IsArray", "IsObject", "Number", "FromProperties", "FromMappedResult", "Intersect", "schema", "Union", "error", "target", "ByteMarker", "ArrayType", "Visit", "byte", "DateType", "ObjectType", "Uint8ArrayType", "ValueErrorType", "FromArray", "Visit", "value", "FromIntersect", "FromLiteral", "regex", "FromTemplateLiteral", "FromTuple", "FromUnion", "type_exports", "IsAny", "IsArray", "IsAsyncIterator", "IsBigInt", "IsBoolean", "IsConstructor", "IsDate", "IsFunction", "IsInteger", "IsIntersect", "IsIterator", "IsKind", "IsKindOf", "IsLiteral", "IsMappedKey", "IsMappedResult", "IsNever", "IsNot", "IsNull", "IsNumber", "IsObject", "IsOptional", "IsPromise", "IsReadonly", "IsRecord", "IsRef", "IsRegExp", "IsSchema", "IsString", "IsSymbol", "IsTemplateLiteral", "IsThis", "IsTransform", "IsTuple", "IsUint8Array", "IsUndefined", "IsUnion", "IsUnknown", "IsUnsafe", "IsVoid", "IsString", "IsSchema", "IsUndefined", "IsBigInt", "IsNumber", "IsBoolean", "IsReadonly", "IsObject", "IsOptional", "IsAny", "IsKindOf", "IsArray", "IsAsyncIterator", "IsConstructor", "IsDate", "IsFunction", "IsInteger", "IsIntersect", "IsTransform", "IsIterator", "IsLiteral", "IsMappedKey", "IsMappedResult", "IsNever", "IsNot", "IsNull", "IsPromise", "IsRecord", "IsRef", "IsRegExp", "IsSymbol", "IsTemplateLiteral", "IsThis", "IsTuple", "IsUnion", "IsUint8Array", "IsUnknown", "IsUnsafe", "IsVoid", "IsKind", "ExtendsResult", "type_exports", "FromAny", "FromArray", "Visit", "FromAsyncIterator", "FromBigInt", "FromBoolean", "FromConstructor", "FromDate", "FromFunction", "FromInteger", "FromIntersect", "FromIterator", "FromLiteral", "FromNever", "FromNot", "FromNull", "FromNumber", "Number", "Function", "FromObject", "FromPromise", "String", "FromRecord", "FromRegExp", "FromString", "FromSymbol", "FromTemplateLiteral", "FromTuple", "FromUint8Array", "FromUndefined", "FromUnion", "FromUnknown", "FromVoid", "FromProperties", "FromMappedResult", "FromMappedKey", "IsDefined", "FromAny", "FromArray", "value", "Visit", "FromAsyncIterator", "FromBigInt", "FromBoolean", "FromConstructor", "FromDate", "FromFunction", "FromInteger", "FromIntersect", "schema", "IsSchema", "FromIterator", "FromLiteral", "FromNever", "FromNot", "FromNull", "FromNumber", "FromObject", "FromPromise", "FromRecord", "regex", "FromRef", "FromRegExp", "FromString", "FromSymbol", "FromTemplateLiteral", "FromThis", "FromTuple", "FromUndefined", "FromUnion", "FromUint8Array", "FromUnknown", "FromVoid", "FromKind", "ObjectType", "Clone", "ArrayType", "DateType", "Clone", "FromAny", "FromArray", "Visit", "FromAsyncIterator", "FromBigInt", "FromBoolean", "FromConstructor", "FromDate", "FromFunction", "FromInteger", "FromIntersect", "schema", "FromIterator", "FromLiteral", "FromNever", "FromNot", "FromNull", "FromNumber", "FromObject", "FromPromise", "FromRecord", "FromRef", "FromRegExp", "FromString", "FromSymbol", "FromTemplateLiteral", "FromThis", "FromTuple", "FromUndefined", "FromUnion", "FromUint8Array", "FromUnknown", "FromVoid", "FromKind", "Create", "schema", "Clone", "Create", "FromArray", "value", "Visit", "FromConstructor", "FromIntersect", "FromNever", "FromObject", "FromRecord", "FromRef", "FromThis", "FromTuple", "FromUnion", "IsSchema", "FromArray", "value", "Visit", "FromIntersect", "schema", "Clone", "FromObject", "FromRecord", "FromRef", "FromThis", "FromTuple", "FromUnion", "Clone", "Default", "FromArray", "Visit", "FromBigInt", "FromBoolean", "FromDate", "FromInteger", "FromIntersect", "value", "schema", "FromLiteral", "FromNull", "FromNumber", "FromObject", "FromRecord", "FromRef", "FromString", "FromSymbol", "FromThis", "FromTuple", "FromUndefined", "FromUnion", "Clone", "IsCheckable", "IsSchema", "FromArray", "Visit", "FromIntersect", "schema", "FromObject", "FromRecord", "FromRef", "FromThis", "FromTuple", "FromUnion", "Default", "Delete", "Get", "Has", "Set", "Escape", "Set", "Delete", "Has", "Get", "Object", "String", "Delete", "ObjectType", "Visit", "ArrayType", "TypedArrayType", "ValueType", "Clone", "ObjectType", "DateType", "ArrayType", "TypedArrayType", "ValueType", "ObjectType", "Clone", "Visit", "ArrayType", "TypedArrayType", "ValueType", "error", "Default", "IsTransform", "FromArray", "value", "Visit", "FromIntersect", "FromNot", "FromObject", "IsSchema", "FromRecord", "FromRef", "FromThis", "FromTuple", "schema", "FromUnion", "error", "Default", "IsTransform", "FromArray", "value", "Visit", "FromIntersect", "FromNot", "FromObject", "IsSchema", "FromRecord", "FromRef", "FromThis", "FromTuple", "schema", "FromUnion", "FromArray", "IsTransform", "Visit", "FromAsyncIterator", "FromConstructor", "schema", "FromFunction", "FromIntersect", "FromIterator", "FromNot", "FromObject", "IsSchema", "FromPromise", "FromRecord", "FromRef", "FromThis", "FromTuple", "FromUnion", "value_exports", "Cast", "Check", "Clean", "Clone", "Convert", "Create", "Default", "Diff", "Equal", "Errors", "Hash", "Mutate", "Patch", "Cast", "Create", "Check", "Clean", "Convert", "Clone", "Errors", "Default", "Equal", "Diff", "Hash", "Patch", "Mutate", "FromRest", "FromIntersect", "FromUnion", "FromPromise", "IsPromise", "Object", "Date", "Symbol", "Uint8Array", "FromArray", "FromProperties", "IsAsyncIterator", "IsIterator", "IsArray", "IsUint8Array", "Uint8Array", "IsDate", "Date", "IsObject", "Object", "IsFunction", "Function", "IsUndefined", "IsNull", "IsSymbol", "Symbol", "IsBigInt", "BigInt", "IsNumber", "IsBoolean", "IsString", "FromRest", "schema", "Deref", "FromProperties", "FromConstructor", "FromFunction", "FromIntersect", "FromUnion", "FromTuple", "IsUndefined", "FromArray", "FromObject", "FromPromise", "FromAsyncIterator", "FromIterator", "FromRef", "IsFunction", "IsArray", "IsObject", "IsPromise", "IsAsyncIterator", "IsIterator", "IsUndefined", "FromProperties", "FromMappedResult", "FromProperties", "FromMappedResult", "FromTemplateLiteral", "FromRest", "Not", "FromProperties", "FromMappedResult", "FromIntersect", "T", "FromUnion", "FromProperty", "FromProperties", "IsObject", "Object", "FromPropertyKey", "FromPropertyKeys", "FromMappedKey", "FromRest", "FromProperties", "IsObject", "Object", "FromProperties", "FromMappedResult", "FromProperties", "FromMappedResult", "FromIntersect", "T", "FromUnion", "FromProperties", "IsObject", "Object", "FromPropertyKey", "FromPropertyKeys", "FromMappedKey", "Object", "IsUndefined", "IsInteger", "IsNumber", "IsRegExp", "IsString", "IsUndefined", "IsString", "IsUndefined", "RegExp", "IsString", "FromRest", "FromProperties", "IsObject", "Object", "FromProperties", "FromMappedResult", "Encode", "Decode", "type_exports", "Array", "BigInt", "Date", "Deref", "Function", "Not", "Number", "Object", "Promise", "RegExp", "String", "Symbol", "Uint8Array", "type_exports", "Character", "MemberExpression", "Encode", "Identifier", "LiteralString", "Escape", "Policy", "TypeCompiler", "IsAnyOrUnknown", "FromAny", "FromArray", "IsSchema", "FromAsyncIterator", "FromBigInt", "FromBoolean", "FromConstructor", "Visit", "FromDate", "FromFunction", "FromInteger", "FromIntersect", "schema", "FromIterator", "FromLiteral", "FromNever", "FromNot", "FromNull", "FromNumber", "FromObject", "FromPromise", "FromRecord", "FromRef", "FromRegExp", "FromString", "FromSymbol", "FromTemplateLiteral", "FromThis", "FromTuple", "FromUndefined", "FromUnion", "FromUint8Array", "FromUnknown", "FromVoid", "FromKind", "expression", "import_cookie", "import_fast_decode_uri_component", "value_exports", "config", "decodeURIComponent", "init", "Buffer", "visited", "env", "version", "fastDecode", "binding", "app", "decodeURIComponent2", "env2", "isBun", "from", "config", "app", "env", "env", "env", "error", "env", "env", "init"]
}
